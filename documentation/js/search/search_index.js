var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/pipes/AgePipe.html",[0,2.427,1,2.223]],["body/pipes/AgePipe.html",[0,4.167,1,3.817,2,5.042,3,0.276,4,0.24,5,0.24,6,4.303,7,1.26,8,0.658,9,4.167,10,0.639,11,5.042,12,6.084,13,0.349,14,5.042,15,0.784,16,0.022,17,0.426,18,0.639,19,1.191,20,0.639,21,3.276,22,0.312,23,6.084,24,0.466,25,0.276,26,0.015,27,0.889,28,5.042,29,5.042,30,4.303,31,4.303,32,2.228,33,2.921,34,1.191,35,3.816,36,6.084,37,2.125,38,5.042,39,6.084,40,5.042,41,6.084,42,1.191,43,0.018,44,0.018]],["title/components/AppComponent.html",[45,0.169,46,0.747]],["body/components/AppComponent.html",[3,0.228,4,0.199,5,0.199,7,1.044,8,0.544,13,0.289,16,0.022,17,0.353,19,0.987,22,0.258,24,0.386,25,0.228,26,0.012,43,0.016,44,0.016,45,0.286,46,1.337,47,1.352,48,1.104,49,1.104,50,1.104,51,1.104,52,3.564,53,1.949,54,1.844,55,2.119,56,1.429,57,5.998,58,1.429,59,5.408,60,0.258,61,0.637,62,5.998,63,1.167,64,1.044,65,3.393,66,4.176,67,1.104,68,1.429,69,1.429,70,1.104,71,1.676,72,1.104,73,1.104,74,0.83,75,1.104,76,0.83,77,1.585,78,1.104,79,0.88,80,0.88,81,1.104,82,0.83,83,0.76,84,1.104,85,0.88,86,1.585,87,0.83,88,1.104,89,0.88,90,0.736,91,0.83,92,1.104,93,0.83,94,1.104,95,0.83,96,1.104,97,0.83,98,1.104,99,0.83,100,1.104,101,0.88,102,1.429,103,1.14,104,1.104,105,0.88,106,1.104,107,0.83,108,1.104,109,0.88,110,0.83,111,1.104,112,0.88,113,1.104,114,1.104,115,1.104,116,1.104]],["title/modules/AppModule.html",[117,3.025,118,2.427]],["body/modules/AppModule.html",[1,3.707,3,0.15,4,0.131,5,0.131,16,0.022,22,0.456,24,0.254,25,0.15,26,0.008,43,0.012,44,0.012,46,1.407,54,0.688,74,1.175,76,1.175,79,1.245,80,0.853,82,1.175,83,0.672,85,1.245,87,1.175,89,1.245,91,1.175,93,1.175,95,1.175,97,1.175,99,1.175,101,1.245,103,1.191,105,1.245,107,1.175,109,1.245,110,1.175,112,1.245,118,5.06,119,1.726,120,2.773,121,2.348,122,2.348,123,2.348,124,2.348,125,3.707,126,3.456,127,2.348,128,2.082,129,2.751,130,4.049,131,3.456,132,4.101,133,4.049,134,4.049,135,1.294,136,2.751,137,4.049,138,2.751,139,2.773,140,2.751,141,2.751,142,2.751,143,2.751,144,4.049,145,3.065,146,2.751,147,4.049,148,1.884,149,2.348,150,4.101,151,1.884,152,2.348,153,2.082,154,2.751,155,1.884,156,2.348,157,2.348,158,1.884,159,3.325,160,2.348,161,2.348,162,1.884,163,2.348,164,4.049,165,0.961,166,2.348,167,4.049,168,2.751,169,4.049,170,2.751,171,4.049,172,2.751,173,4.049,174,2.348,175,4.049,176,2.751,177,3.456,178,1.294,179,4.049,180,2.348,181,2.348,182,4.049,183,2.751,184,2.082,185,4.049,186,2.751,187,4.049,188,2.751,189,4.805,190,2.751,191,4.049,192,2.751,193,2.751,194,2.751,195,2.751,196,4.049,197,1.884,198,4.049,199,2.751,200,4.049,201,2.082,202,2.348,203,2.348,204,2.348,205,2.348,206,4.049,207,2.082,208,2.751,209,2.082,210,2.751,211,2.773,212,2.751,213,2.348,214,2.751,215,1.884,216,2.348,217,2.751,218,1.884,219,2.751]],["title/modules/AppRoutingModule.html",[117,3.025,125,2.223]],["body/modules/AppRoutingModule.html",[3,0.219,4,0.191,5,0.191,16,0.022,22,0.449,24,0.371,25,0.219,26,0.012,43,0.015,44,0.015,45,0.337,74,1.047,76,0.797,77,1.002,82,0.797,83,0.668,87,1.047,90,0.707,91,1.047,93,1.242,95,1.047,97,1.047,99,1.169,107,0.797,110,0.797,119,2.516,125,3.304,131,3.423,139,3.607,149,3.423,150,4.496,151,2.747,152,3.423,155,2.747,156,3.423,160,3.423,163,3.423,166,3.423,203,3.423,204,3.423,205,3.423,213,3.423,216,3.423,220,4.011,221,4.011,222,4.496,223,4.028,224,1.887,225,2.747,226,4.011,227,2.747,228,4.011,229,2.747,230,4.011,231,1.483,232,4.851,233,4.011,234,3.052,235,3.304,236,2.747,237,6.486,238,3.304,239,1.324,240,3.423,241,1.185,242,2.516,243,4.011,244,4.011,245,4.011,246,2.747,247,2.516,248,4.011,249,2.516,250,4.011,251,4.011]],["title/guards/AuthGuard.html",[225,2.427,252,2.427]],["body/guards/AuthGuard.html",[3,0.234,4,0.204,5,0.204,8,0.553,10,0.696,13,0.38,15,0.853,16,0.022,17,0.464,18,0.696,20,0.542,22,0.409,24,0.395,25,0.234,26,0.013,27,0.754,34,1.01,42,1.297,43,0.016,44,0.016,55,1.675,60,0.264,80,0.901,103,0.901,197,2.928,224,2.012,225,3.76,231,1.581,253,2.928,254,3.649,255,5.01,256,0.708,257,4.275,258,4.383,259,4.591,260,4.844,261,3.514,262,2.828,263,4.275,264,5.49,265,3.236,266,4.844,267,4.591,268,4.844,269,4.275,270,2.956,271,1.893,272,4.156,273,3.444,274,4.591,275,2.928,276,1.297,277,1.335,278,1.777,279,1.493,280,1.813,281,1.581,282,3.047,283,4.275,284,1.675,285,4.275,286,4.275,287,2.956,288,4.275,289,3.236,290,3.649,291,4.275,292,2.477,293,3.649,294,2.477,295,3.236,296,4.275]],["title/injectables/BackendService.html",[262,1.566,276,0.837]],["body/injectables/BackendService.html",[3,0.186,4,0.162,5,0.162,8,0.545,10,0.598,13,0.459,15,0.841,16,0.022,17,0.493,18,0.686,19,0.805,20,0.804,22,0.392,24,0.315,25,0.186,26,0.01,34,1.115,37,1.19,42,1.449,43,0.014,44,0.014,55,1.335,60,0.211,61,0.556,63,1.632,64,0.851,83,0.825,165,1.19,224,1.603,231,1.744,234,3.385,235,3.665,239,1.929,241,1.725,256,0.564,258,4.001,262,2.084,270,2.914,271,2.031,276,1.115,277,1.063,278,1.416,280,1.125,281,2.001,282,2.719,292,1.974,297,1.603,298,2.907,299,2.37,300,2.581,301,4.097,302,5.842,303,4.986,304,4.422,305,4.026,306,4.026,307,2.914,308,3.571,309,2.581,310,5.412,311,4.717,312,1.834,313,3.406,314,0.805,315,3.406,316,3.406,317,4.619,318,4.026,319,3.406,320,3.145,321,3.571,322,3.406,323,1.974,324,1.974,325,3.571,326,2.333,327,1.974,328,1.974,329,2.333,330,1.974,331,2.333,332,1.19,333,3.136,334,3.406,335,3.231,336,3.385,337,1.961,338,3.571,339,2.578,340,2.333,341,2.907,342,2.578,343,2.907,344,2.578,345,1.834,346,4.619,347,2.578,348,2.137,349,1.473,350,3.571,351,1.848,352,2.959,353,4.026,354,3.395,355,2.907,356,2.578,357,2.907,358,1.711,359,3.395,360,2.578,361,3.406,362,3.406,363,3.406,364,3.406,365,2.907,366,1.974,367,3.406]],["title/components/ChatComponent.html",[45,0.169,74,0.705]],["body/components/ChatComponent.html",[3,0.225,4,0.196,5,0.196,7,1.029,8,0.539,10,0.679,13,0.371,16,0.022,20,0.522,22,0.254,24,0.38,25,0.225,26,0.012,27,0.944,43,0.016,44,0.016,45,0.284,46,0.867,47,1.339,48,1.088,49,1.088,50,1.088,51,1.088,53,1.947,54,1.841,56,1.416,58,1.416,60,0.254,67,1.088,68,1.416,69,1.416,70,1.088,71,1.667,72,1.088,73,1.088,74,1.254,75,1.088,76,0.818,77,1.676,78,1.088,79,0.867,80,0.867,81,1.088,82,0.818,83,0.755,84,1.088,85,0.867,86,1.574,87,0.818,88,1.088,89,0.867,90,0.726,91,0.818,92,1.088,93,0.818,94,1.088,95,0.818,96,1.088,97,0.818,98,1.088,99,0.818,100,1.088,101,0.867,102,1.416,103,1.129,104,1.088,105,0.867,106,1.088,107,0.818,108,1.088,109,0.867,110,0.818,111,1.088,112,0.867,113,1.088,114,1.088,115,1.088,116,1.088,256,0.987,314,1.266,368,3.512,369,1.664,370,5.955,371,5.357,372,1.667,373,4.115,374,4.115]],["title/guards/ChatGuard.html",[227,2.427,252,2.427]],["body/guards/ChatGuard.html",[3,0.269,4,0.234,5,0.234,8,0.495,10,0.759,13,0.34,15,0.764,16,0.022,17,0.415,18,0.623,20,0.623,22,0.399,24,0.454,25,0.269,26,0.014,27,0.866,42,1.161,43,0.018,44,0.018,55,1.926,60,0.304,224,2.313,227,4.103,253,3.366,255,5.221,265,3.72,266,5.092,267,4.892,268,5.092,270,3.225,271,2.018,272,4.535,273,3.758,274,4.892,276,1.415,277,1.534,278,2.043,284,1.926,375,4.194,376,4.915]],["title/components/ChatRoomComponent.html",[45,0.169,76,0.705]],["body/components/ChatRoomComponent.html",[3,0.149,4,0.13,5,0.13,7,0.682,8,0.531,10,0.51,13,0.422,15,0.626,16,0.022,17,0.476,18,0.51,19,1.248,20,0.606,22,0.326,24,0.252,25,0.149,26,0.008,27,0.71,34,0.951,37,1.406,43,0.017,44,0.012,45,0.228,46,0.575,47,1.006,48,0.722,49,0.722,50,0.722,51,0.722,53,1.866,54,1.765,56,1.064,58,1.064,60,0.169,61,0.474,64,1.006,67,0.722,68,1.064,69,1.064,70,0.722,71,1.396,72,0.722,73,0.722,74,0.543,75,0.722,76,1.05,77,1.666,78,0.722,79,0.575,80,0.575,81,0.722,82,0.543,83,0.669,84,0.722,85,0.575,86,1.264,87,0.543,88,0.722,89,0.575,90,0.481,91,0.543,92,0.722,93,0.543,94,0.722,95,0.543,96,0.722,97,0.543,98,0.722,99,0.543,100,0.722,101,0.575,102,1.064,103,0.849,104,0.722,105,0.575,106,0.722,107,0.543,108,0.722,109,0.575,110,0.543,111,0.722,112,0.575,113,0.722,114,0.722,115,0.722,116,0.722,135,1.285,151,4.284,241,1.189,256,0.452,279,0.954,280,0.901,314,1.248,332,0.954,337,1.674,339,2.067,349,1.257,351,1.07,366,1.582,369,1.337,372,1.396,377,4.284,378,2.33,379,2.404,380,4.784,381,4.027,382,4.784,383,4.784,384,5.281,385,4.027,386,2.067,387,2.069,388,4.784,389,3.617,390,4.027,391,2.333,392,2.73,393,2.73,394,4.027,395,4.784,396,2.73,397,2.73,398,2.73,399,4.461,400,2.73,401,2.73,402,1.285,403,1.87,404,2.067,405,2.73,406,2.33,407,2.73,408,1.206,409,2.33,410,2.73,411,2.73,412,2.73,413,1.713,414,2.33,415,1.87,416,2.33,417,2.067,418,2.73,419,2.73,420,1.582,421,2.73,422,2.73,423,2.73,424,2.73,425,2.73,426,2.33,427,1.206,428,1.87,429,4.784,430,2.73,431,2.73,432,2.73,433,2.067,434,2.73,435,2.33,436,2.73,437,4.027,438,4.027,439,4.027,440,4.027,441,4.027,442,3.437,443,2.73,444,2.73,445,2.33,446,2.73,447,2.73,448,2.73,449,2.73,450,2.73,451,4.027,452,4.027,453,3.048,454,2.73,455,3.414,456,2.73,457,2.251,458,2.33,459,2.067,460,1.47,461,1.135,462,1.674,463,1.87,464,1.87,465,2.33,466,4.507,467,2.73,468,2.758,469,4.027,470,2.067,471,1.713,472,2.73,473,2.73,474,2.73,475,2.33,476,2.73,477,2.526,478,2.526,479,4.027,480,2.758,481,2.73,482,2.73,483,2.33,484,2.33,485,1.47]],["title/injectables/ChatService.html",[276,0.837,389,2.427]],["body/injectables/ChatService.html",[3,0.266,4,0.232,5,0.232,10,0.755,13,0.445,16,0.022,17,0.411,19,1.15,20,0.755,22,0.398,24,0.45,25,0.266,26,0.014,42,1.15,43,0.018,44,0.018,55,1.907,60,0.301,61,0.701,63,1.664,64,1.217,271,2.009,276,1.407,277,1.52,278,2.024,297,2.29,299,2.992,300,2.963,307,3.464,323,2.82,324,2.82,327,2.82,328,2.82,330,3.885,389,4.079,486,4.154,487,6.705,488,4.867,489,5.955,490,5.955,491,5.955,492,4.867,493,3.333,494,3.333]],["title/components/ChatTopBarComponent.html",[45,0.169,79,0.747]],["body/components/ChatTopBarComponent.html",[3,0.192,4,0.167,5,0.167,7,0.877,8,0.553,10,0.61,13,0.409,15,0.546,16,0.022,17,0.464,18,0.445,20,0.445,22,0.366,24,0.445,25,0.192,26,0.01,27,0.849,34,1.138,43,0.014,44,0.014,45,0.262,46,0.74,47,1.204,48,0.928,49,0.928,50,0.928,51,0.928,53,1.919,54,1.815,56,1.273,58,1.273,60,0.217,61,0.567,67,0.928,68,1.273,69,1.273,70,0.928,71,1.564,72,0.928,73,0.928,74,0.698,75,0.928,76,0.698,77,1.731,78,0.928,79,1.247,80,1.517,81,0.928,82,0.698,83,0.75,84,0.928,85,0.74,86,1.453,87,0.698,88,0.928,89,0.74,90,0.619,91,0.698,92,0.928,93,0.698,94,0.928,95,0.698,96,0.928,97,0.698,98,0.928,99,0.698,100,0.928,101,0.74,102,1.273,103,1.247,104,0.928,105,0.74,106,0.928,107,0.698,108,0.928,109,0.74,110,0.698,111,0.928,112,0.74,113,0.928,114,0.928,115,0.928,116,0.928,153,4.693,256,0.582,279,1.226,314,1.138,369,1.536,372,1.564,377,4.247,386,2.657,387,2.318,391,2.791,402,1.652,406,5.05,420,2.034,495,2.996,496,5.498,497,4.816,498,2.154,499,4.816,500,3.186,501,4.816,502,3.51,503,3.51,504,2.404,505,3.51,506,2.657,507,3.51,508,3.51,509,5.917,510,4.816,511,4.816,512,4.816,513,4.816]],["title/components/ChatUserListComponent.html",[45,0.169,82,0.705]],["body/components/ChatUserListComponent.html",[3,0.112,4,0.097,5,0.097,7,0.511,8,0.457,10,0.409,13,0.406,15,0.502,16,0.022,17,0.465,18,0.409,19,1.074,20,0.409,22,0.372,24,0.189,25,0.112,26,0.006,27,0.569,34,1.348,37,1.127,42,0.483,43,0.009,44,0.009,45,0.191,46,0.431,47,1,48,0.54,49,0.54,50,0.54,51,0.54,53,1.792,54,1.695,56,0.853,58,0.853,60,0.2,61,0.38,64,1,67,0.54,68,0.853,69,0.853,70,0.54,71,1.201,72,0.54,73,0.54,74,0.406,75,0.54,76,0.406,77,1.533,78,0.54,79,0.431,80,0.431,81,0.54,82,0.903,83,0.922,84,0.54,85,0.68,86,1.057,87,0.406,88,0.54,89,0.431,90,0.36,91,0.406,92,0.54,93,0.406,94,0.54,95,0.406,96,0.54,97,0.406,98,0.54,99,0.406,100,0.54,101,0.431,102,0.853,103,0.843,104,0.54,105,0.431,106,0.54,107,0.406,108,0.54,109,0.431,110,0.406,111,0.54,112,0.431,113,0.54,114,0.54,115,0.54,116,0.54,135,0.962,145,1.547,148,1.4,155,4.119,157,1.745,158,1.4,159,1.282,165,0.714,178,0.962,184,2.443,231,0.756,239,1.066,241,1.685,256,0.339,261,2.318,262,2.008,271,0.638,279,0.714,280,1.066,281,1.68,292,1.184,309,0.903,314,0.945,329,1.4,332,1.127,333,2.633,348,1.282,349,1.782,350,1.547,351,1.567,358,1.622,359,1.282,369,1.118,372,1.201,377,4.119,386,1.547,387,1.78,391,1.87,399,3.745,402,0.962,408,0.903,413,1.282,417,1.547,420,1.87,427,1.426,428,3.601,455,2.318,457,1.519,460,1.1,461,0.85,462,0.85,468,1.4,478,1.282,480,2.211,483,1.745,484,1.745,485,2.154,498,1.567,500,1.184,506,2.443,514,1.745,515,4,516,3.228,517,3.414,518,4,519,4,520,4,521,4,522,3.878,523,3.228,524,2.74,525,2.633,526,3.228,527,2.044,528,3.228,529,2.044,530,2.044,531,2.044,532,1.87,533,2.044,534,2.044,535,2.044,536,1.282,537,1.547,538,2.044,539,1.745,540,2.044,541,1.745,542,3.028,543,1.282,544,2.443,545,2.044,546,2.044,547,1.745,548,1.282,549,2.211,550,2.044,551,2.755,552,2.044,553,1.745,554,2.443,555,1.282,556,1.745,557,1.745,558,4.947,559,1.745,560,2.044,561,3.228,562,2.044,563,3.228,564,3.228,565,2.044,566,1.745,567,2.044,568,2.044,569,3.228,570,2.044,571,2.044,572,1.426,573,1.4,574,2.044,575,2.044,576,2.044,577,1.519,578,2.044,579,1.87,580,2.755,581,1.745,582,2.044,583,1.745,584,1.4,585,2.044,586,2.443,587,2.044,588,1.4,589,1.745,590,2.044,591,1.547,592,1.4,593,2.044,594,2.044,595,2.211,596,2.044,597,2.044,598,2.044,599,2.044,600,2.044,601,2.044,602,1.745,603,1.547,604,2.044,605,2.044,606,2.044,607,2.044,608,1.4,609,1.4,610,2.044,611,1.745,612,1.547,613,2.044,614,1.745,615,0.962,616,2.044,617,1.745,618,2.044,619,3.228,620,3.228,621,3.908,622,3.228,623,5.258,624,3.228,625,3.228,626,3.228,627,3.228,628,3.228,629,3.228,630,3.228,631,3.228,632,3.228,633,2.755,634,3.228,635,3.228,636,3.228,637,1.738,638,1.745,639,2.044,640,1.745,641,2.443,642,1.745,643,2.044,644,1.745,645,1.547,646,1.4,647,4,648,1.547,649,2.044,650,2.044,651,2.044,652,2.044,653,2.044,654,2.044,655,1.738,656,1.745,657,2.025,658,1.282,659,1.547]],["title/components/ChatUserModalComponent.html",[45,0.169,85,0.747]],["body/components/ChatUserModalComponent.html",[3,0.287,4,0.153,5,0.153,7,0.803,8,0.528,10,0.574,13,0.415,15,0.499,16,0.022,17,0.382,18,0.407,20,0.665,22,0.324,24,0.297,25,0.176,26,0.009,27,0.798,32,1.419,43,0.013,44,0.013,45,0.271,46,0.677,47,1.132,48,0.849,49,0.849,50,0.849,51,0.849,53,1.901,54,1.798,56,1.197,58,1.197,60,0.199,61,0.533,67,0.849,68,1.197,69,1.197,70,0.849,71,1.505,72,0.849,73,0.849,74,0.639,75,0.849,76,0.639,77,1.702,78,0.849,79,0.677,80,0.677,81,0.849,82,0.639,83,0.914,84,0.849,85,1.2,86,1.386,87,0.639,88,0.849,89,0.677,90,0.566,91,0.639,92,0.849,93,0.639,94,0.849,95,0.639,96,0.849,97,0.639,98,0.849,99,0.639,100,0.849,101,0.677,102,1.197,103,0.954,104,0.849,105,0.677,106,0.849,107,0.639,108,0.849,109,0.677,110,0.639,111,0.849,112,0.677,113,0.849,114,1.386,115,0.849,116,0.849,158,4.266,178,1.511,241,1.337,256,0.532,271,1.003,277,1.003,280,1.06,289,3.427,294,1.861,314,1.472,332,1.581,336,3.299,337,2.18,366,2.623,369,1.465,372,1.505,403,2.2,445,3.864,453,3.427,498,1.258,500,1.861,536,2.015,548,2.015,586,2.431,592,2.2,660,5.316,661,2.015,662,3.591,663,3.101,664,2.679,665,5.694,666,5.694,667,3.212,668,4.475,669,4.112,670,3.212,671,2.431,672,3.212,673,3.212,674,2.431,675,3.427,676,2.741,677,3.212,678,1.861,679,4.475,680,2.741,681,2.741,682,3.212,683,3.212,684,2.741,685,3.212,686,3.969,687,2.741,688,4.527,689,4.527,690,4.527,691,4.527,692,4.527,693,2.623,694,4.527,695,4.527,696,4.527,697,4.527]],["title/injectables/DataService.html",[276,0.837,698,2.054]],["body/injectables/DataService.html",[3,0.243,4,0.212,5,0.212,10,0.713,13,0.427,16,0.022,17,0.375,19,1.049,20,0.713,22,0.414,24,0.41,25,0.243,26,0.017,33,2.573,42,1.049,43,0.017,44,0.017,55,1.74,60,0.274,61,0.662,63,1.571,64,1.11,165,1.551,241,1.311,242,2.785,271,2.026,276,1.329,277,1.386,278,1.846,281,1.642,297,2.089,299,2.826,300,2.868,307,3.323,309,2.728,312,2.39,323,2.573,324,2.573,327,2.573,328,2.573,349,1.386,387,1.74,402,2.089,498,1.74,566,3.79,615,2.089,698,3.259,699,3.79,700,6.173,701,6.696,702,4.44,703,5.624,704,4.44,705,3.79,706,4.44,707,3.79,708,3.361,709,4.44,710,4.44,711,2.785,712,3.361,713,4.44,714,4.44,715,4.44,716,4.44,717,4.44,718,4.44]],["title/classes/Directory.html",[26,0.01,90,0.625]],["body/classes/Directory.html",[3,0.262,4,0.229,5,0.229,8,0.483,13,0.462,15,0.747,16,0.022,17,0.564,18,0.609,25,0.262,26,0.014,43,0.017,44,0.017,60,0.297,61,0.696,63,2.061,90,1.041,232,4.84,256,0.796,664,3.385,719,2.413,720,4.693,721,4.099,722,6.032,723,3.97,724,5.907,725,5.907,726,4.803,727,4.803,728,4.803,729,4.803,730,4.803]],["title/components/DirectoryComponent.html",[45,0.169,87,0.705]],["body/components/DirectoryComponent.html",[3,0.18,4,0.157,5,0.157,7,0.821,8,0.534,10,0.583,13,0.419,15,0.511,16,0.022,17,0.449,18,0.417,19,0.777,20,0.583,22,0.398,24,0.304,25,0.18,26,0.01,27,0.811,35,2.488,43,0.014,44,0.014,45,0.253,46,0.693,47,1.15,48,0.869,49,0.869,50,0.869,51,0.869,53,1.906,54,1.803,56,1.216,58,1.216,60,0.203,61,0.542,64,0.821,67,0.869,68,1.216,69,1.216,70,0.869,71,1.52,72,0.869,73,0.869,74,0.653,75,0.869,76,0.653,77,1.438,78,0.869,79,0.693,80,0.693,81,0.869,82,0.653,83,0.673,84,0.869,85,0.693,86,1.403,87,1.144,88,0.869,89,0.97,90,1.159,91,0.653,92,0.869,93,0.653,94,0.869,95,0.653,96,0.869,97,0.653,98,0.869,99,0.653,100,0.869,101,0.693,102,1.216,103,0.97,104,0.869,105,0.693,106,0.869,107,0.653,108,0.869,109,0.693,110,0.653,111,0.869,112,0.693,113,0.869,114,0.869,115,0.869,116,0.869,135,1.547,159,2.062,161,2.805,162,2.251,177,2.805,178,1.547,231,1.215,239,1.085,256,0.545,279,1.148,280,1.085,281,1.215,314,1.359,349,1.658,369,1.483,372,1.52,471,2.062,478,2.062,498,1.288,524,3.152,525,3.333,577,1.547,588,2.251,595,2.251,603,3.483,698,1.904,720,2.251,731,2.805,732,5.31,733,4.602,734,6.055,735,4.532,736,4.909,737,3.287,738,4.532,739,3.608,740,4.602,741,3.287,742,3.287,743,3.287,744,3.331,745,2.062,746,2.488,747,2.251,748,2.805,749,2.805,750,3.287,751,3.287,752,2.488,753,3.287,754,2.805,755,3.927,756,2.805,757,2.805,758,2.488,759,2.805,760,2.805,761,2.805,762,2.805,763,2.805,764,2.805,765,2.805,766,2.805,767,2.805,768,4.602,769,3.483,770,4.602,771,4.602,772,4.602,773,4.602,774,2.488,775,1.904]],["title/components/DirectoryModalComponent.html",[45,0.169,89,0.747]],["body/components/DirectoryModalComponent.html",[3,0.163,4,0.142,5,0.142,7,0.747,8,0.507,10,0.545,13,0.434,15,0.464,16,0.022,17,0.466,18,0.379,20,0.639,22,0.387,24,0.276,25,0.163,26,0.009,27,0.758,37,1.044,43,0.013,44,0.013,45,0.24,46,0.63,47,1.075,48,0.79,49,0.79,50,0.79,51,0.79,53,1.886,54,1.784,56,1.137,58,1.137,60,0.185,61,0.506,67,0.79,68,1.137,69,1.137,70,0.79,71,1.457,72,0.79,73,0.79,74,0.594,75,0.79,76,0.594,77,1.377,78,0.79,79,0.63,80,0.63,81,0.79,82,0.594,83,0.639,84,0.79,85,0.63,86,1.332,87,0.594,88,0.79,89,1.162,90,1.184,91,0.594,92,0.79,93,0.594,94,0.79,95,0.594,96,0.79,97,0.594,98,0.79,99,0.594,100,0.79,101,0.63,102,1.137,103,0.906,104,0.79,105,0.63,106,0.79,107,0.594,108,0.79,109,0.63,110,0.594,111,0.79,112,0.63,113,0.79,114,1.332,115,0.79,116,0.79,135,1.406,162,4.393,178,1.406,180,2.55,181,2.55,232,4,256,0.713,271,0.933,277,0.933,280,1.42,314,1.302,320,1.609,369,1.408,372,1.457,457,2.748,460,2.315,471,2.698,477,1.874,478,2.698,525,1.731,536,1.874,548,1.874,559,4.3,584,2.046,648,2.262,661,1.874,662,3.451,663,2.945,664,2.371,669,4,671,3.255,686,3.255,720,2.046,722,5.191,723,3.384,735,4.3,738,4.3,739,3.457,744,3.161,745,3.457,747,2.046,748,2.55,752,4.421,774,2.262,775,2.492,776,5.474,777,5.511,778,3.774,779,2.55,780,2.945,781,2.988,782,2.55,783,2.988,784,2.988,785,2.55,786,2.988,787,2.988,788,2.046,789,2.262,790,2.988,791,2.046,792,2.262,793,2.945,794,2.988,795,2.988,796,2.988,797,2.988,798,2.988,799,2.988,800,2.988,801,2.988,802,2.55,803,2.988,804,2.988,805,2.988,806,2.988,807,3.67,808,4.3,809,2.945,810,2.55,811,2.55,812,2.55,813,2.55]],["title/injectables/DirectoryService.html",[276,0.837,739,2.223]],["body/injectables/DirectoryService.html",[3,0.213,4,0.186,5,0.186,8,0.622,10,0.655,13,0.457,15,0.96,16,0.022,17,0.543,18,0.783,19,1.222,20,0.735,21,3.123,22,0.382,24,0.36,25,0.213,26,0.011,33,2.259,34,1.371,37,1.806,42,1.222,43,0.015,44,0.015,55,1.528,60,0.241,61,0.609,63,1.09,64,1.292,90,1.188,165,1.362,246,2.671,256,0.646,271,2.062,276,1.222,277,1.217,278,1.621,279,1.362,297,1.835,308,2.952,309,2.729,312,2.784,314,1.222,330,3.361,332,1.362,333,3.361,337,1.621,345,2.784,349,1.217,351,2.026,408,2.285,494,2.671,498,2.273,549,3.541,577,1.835,608,2.671,612,2.952,615,2.729,705,3.328,723,2.259,739,3.244,747,2.671,802,4.951,807,3.328,814,3.328,815,5.801,816,5.17,817,5.17,818,5.17,819,5.17,820,5.17,821,3.9,822,5.17,823,3.9,824,3.9,825,5.17,826,3.9,827,5.17,828,4.951,829,5.17,830,3.9,831,3.328,832,3.9,833,3.9,834,3.328,835,4.951,836,3.9,837,3.9,838,3.9,839,2.952,840,3.9,841,2.446,842,3.9,843,3.9]],["title/components/FinderComponent.html",[45,0.169,91,0.705]],["body/components/FinderComponent.html",[3,0.179,4,0.156,5,0.156,7,0.818,8,0.462,10,0.582,13,0.367,16,0.022,19,0.774,20,0.415,22,0.328,24,0.303,25,0.179,26,0.01,27,0.809,34,0.774,42,0.774,43,0.014,44,0.014,45,0.252,46,0.69,47,1.147,48,0.865,49,0.865,50,0.865,51,0.865,53,1.905,54,1.802,56,1.213,58,1.213,60,0.202,61,0.54,63,1.282,64,0.818,65,2.879,67,0.865,68,1.213,69,1.213,70,0.865,71,1.518,72,0.865,73,0.865,74,0.651,75,0.865,76,0.651,77,1.435,78,0.865,79,0.69,80,0.69,81,0.865,82,0.651,83,0.671,84,0.865,85,0.69,86,1.4,87,0.651,88,0.865,89,0.69,90,0.577,91,1.142,92,0.865,93,0.651,94,0.865,95,0.651,96,0.865,97,0.651,98,0.865,99,0.651,100,0.865,101,0.69,102,1.213,103,0.967,104,0.865,105,0.69,106,0.865,107,0.651,108,0.865,109,0.69,110,0.651,111,0.865,112,0.69,113,0.865,114,0.865,115,0.865,116,0.865,231,1.211,236,3.629,239,1.081,256,0.878,277,1.022,280,1.081,314,1.084,369,1.48,372,1.518,455,3.327,457,2.845,459,4.011,460,2.471,461,2.203,462,2.203,485,2.471,532,1.897,542,4.577,543,2.054,621,3.143,637,1.763,641,2.478,645,2.478,655,2.471,657,2.879,658,2.879,659,2.478,711,2.054,712,2.478,775,1.897,844,2.794,845,5.299,846,4.589,847,3.474,848,4.589,849,3.274,850,2.054,851,3.917,852,2.478,853,3.274,854,3.274,855,3.274,856,2.794,857,2.794,858,2.478,859,2.794,860,2.478,861,2.794,862,2.794,863,2.794,864,2.794,865,2.794,866,2.794,867,2.794,868,2.794,869,2.794,870,4.011,871,3.474,872,3.474,873,3.474,874,3.474,875,4.589,876,3.274,877,3.274,878,4.589,879,2.794,880,3.474,881,2.478,882,2.478]],["title/injectables/GlobalHttpService.html",[276,0.837,300,1.566]],["body/injectables/GlobalHttpService.html",[3,0.259,4,0.226,5,0.226,8,0.478,10,0.743,13,0.406,15,0.738,16,0.022,17,0.401,18,0.602,20,0.602,22,0.411,24,0.439,25,0.259,26,0.014,34,1.122,42,1.122,43,0.017,44,0.017,55,1.861,60,0.294,63,1.639,165,1.659,239,1.936,256,0.787,276,1.386,278,1.974,287,2.556,297,2.234,300,2.592,307,3.579,308,3.594,309,2.937,312,3.158,332,1.659,351,1.861,372,1.255,387,1.861,402,2.234,408,2.098,427,2.592,588,3.252,698,2.751,719,2.386,746,3.594,883,5.432,884,4.053,885,4.749,886,4.749,887,4.749,888,4.749,889,4.749,890,4.053,891,4.749,892,2.979,893,3.594,894,4.053,895,4.749,896,3.594,897,4.749,898,4.749]],["title/components/LoginComponent.html",[45,0.169,93,0.705]],["body/components/LoginComponent.html",[3,0.191,4,0.108,5,0.108,7,0.567,8,0.523,10,0.444,13,0.396,15,0.353,16,0.022,17,0.406,18,0.288,19,1.011,20,0.444,22,0.354,24,0.21,25,0.124,26,0.01,27,0.618,32,2.125,34,1.228,37,1.223,43,0.01,44,0.01,45,0.204,46,0.478,47,0.876,48,1.13,49,0.6,50,0.6,51,0.6,53,1.821,54,1.722,56,0.926,58,0.926,60,0.14,61,0.413,64,0.876,67,0.6,68,0.926,69,0.926,70,1.13,71,1.271,72,0.6,73,0.6,74,0.451,75,0.6,76,0.451,77,1.202,78,0.6,79,0.478,80,0.478,81,0.6,82,0.451,83,0.831,84,0.6,85,0.478,86,1.13,87,0.451,88,0.6,89,0.478,90,0.4,91,0.451,92,0.6,93,0.956,94,0.6,95,0.451,96,0.6,97,0.451,98,0.6,99,0.451,100,0.6,101,0.478,102,0.926,103,0.738,104,0.6,105,0.478,106,0.6,107,0.451,108,0.6,109,0.478,110,0.451,111,0.6,112,0.478,113,0.6,114,0.6,115,0.6,116,0.6,135,1.068,139,2.399,165,0.793,224,1.068,231,1.778,234,3.425,239,1.412,241,1.42,247,2.197,256,0.376,258,3.294,261,2.478,262,2.125,270,2.798,275,1.554,279,0.793,280,1.412,281,1.295,282,2.76,287,2.589,289,4.157,290,2.99,294,1.315,314,1.011,320,2.957,326,1.554,332,1.494,335,1.554,336,1.315,337,0.944,345,2.798,349,1.787,351,0.889,358,2.416,365,1.937,366,2.03,369,1.195,372,1.271,387,1.884,391,2.478,402,1.068,408,1.003,413,1.424,415,2.399,427,1.548,428,2.399,461,0.944,462,1.456,463,1.554,464,1.554,504,1.554,543,2.197,557,1.937,572,1.548,573,1.554,577,1.068,579,2.478,584,1.554,602,1.937,615,2.855,678,1.315,693,1.315,708,1.718,744,2.683,745,3.017,778,3.294,780,2.93,788,1.554,791,1.554,792,1.718,793,2.399,809,3.294,841,1.424,892,3.017,899,1.937,900,4.277,901,3.503,902,4.277,903,4.277,904,4.277,905,1.937,906,2.27,907,2.27,908,2.27,909,2.27,910,2.27,911,2.27,912,1.424,913,3.515,914,3.92,915,3.017,916,2.27,917,1.937,918,3.503,919,2.27,920,2.99,921,1.937,922,1.554,923,2.651,924,2.27,925,1.937,926,2.27,927,2.27,928,1.937,929,2.651,930,2.99,931,1.937,932,1.718,933,1.937,934,1.718,935,2.99,936,1.937,937,1.937,938,1.937,939,2.27,940,5.197,941,2.27,942,2.99,943,2.27,944,2.27,945,1.937,946,2.99,947,2.27,948,2.27,949,2.27,950,3.651,951,2.27,952,2.27,953,2.27,954,2.27,955,2.27,956,2.27,957,2.27,958,2.27,959,2.27,960,1.937,961,2.27,962,2.27,963,3.503,964,2.27,965,1.718,966,2.27,967,2.27,968,2.27,969,2.27,970,3.503,971,2.27,972,1.937,973,2.27,974,2.27,975,1.937,976,1.937,977,2.27,978,2.27,979,2.651,980,2.99,981,2.651,982,4.809,983,4.687,984,3.503,985,3.503,986,3.503,987,2.99,988,3.503,989,2.651,990,3.503]],["title/classes/Message.html",[26,0.01,991,1.908]],["body/classes/Message.html",[3,0.265,4,0.231,5,0.231,13,0.484,16,0.022,17,0.591,18,0.927,22,0.367,25,0.265,26,0.014,43,0.017,44,0.017,60,0.3,61,0.7,63,1.66,83,0.849,379,3.228,655,3.199,719,2.436,991,3.199,992,4.138,993,4.4,994,4.069,995,3.722,996,5.941,997,4.497,998,5.941,999,4.849,1000,4.849,1001,4.849,1002,4.849,1003,4.849,1004,4.849,1005,4.849,1006,4.849,1007,4.849,1008,4.849,1009,4.849,1010,4.849]],["title/components/OverviewComponent.html",[45,0.169,95,0.705]],["body/components/OverviewComponent.html",[3,0.188,4,0.164,5,0.164,7,0.859,8,0.547,10,0.602,13,0.406,15,0.534,16,0.022,17,0.29,18,0.436,19,0.812,20,0.602,22,0.294,24,0.318,25,0.188,26,0.01,27,0.837,34,0.812,43,0.014,44,0.014,45,0.259,46,0.725,47,1.187,48,0.909,49,0.909,50,0.909,51,0.909,53,1.915,54,1.811,56,1.255,58,1.255,60,0.213,61,0.559,64,0.859,65,2.979,67,0.909,68,1.255,69,1.255,70,0.909,71,1.55,72,0.909,73,0.909,74,0.684,75,0.909,76,0.684,77,1.466,78,0.909,79,0.725,80,0.725,81,0.909,82,0.684,83,0.689,84,0.909,85,0.725,86,1.437,87,0.684,88,0.909,89,0.725,90,0.606,91,0.684,92,0.909,93,0.684,94,0.909,95,1.166,96,0.909,97,0.684,98,0.909,99,0.684,100,0.909,101,0.725,102,1.255,103,1.001,104,0.909,105,0.725,106,0.909,107,0.684,108,0.909,109,0.725,110,0.684,111,0.909,112,0.725,113,0.909,114,0.909,115,0.909,116,0.909,236,2.355,238,2.979,241,1.016,249,2.157,256,0.57,261,1.992,262,2.403,279,1.201,284,1.347,314,1.285,369,1.52,372,1.55,403,2.355,455,3.151,457,2.896,459,3.594,460,2.556,461,1.43,462,1.43,477,2.157,485,3.158,537,2.603,621,4.017,637,2.928,641,2.603,645,2.603,646,3.252,655,1.851,659,3.594,678,1.992,775,2.751,847,3.594,870,4.44,871,3.594,872,3.594,873,3.594,874,3.594,880,4.117,881,3.594,882,2.603,1011,2.935,1012,5.439,1013,4.748,1014,5.866,1015,2.935,1016,4.748,1017,3.439,1018,3.439,1019,2.935,1020,3.439,1021,3.439,1022,3.439,1023,4.748,1024,2.935,1025,3.439,1026,3.439]],["title/components/ProfilComponent.html",[45,0.169,97,0.705]],["body/components/ProfilComponent.html",[3,0.178,4,0.155,5,0.155,7,0.814,8,0.607,10,0.579,13,0.365,15,0.506,16,0.022,17,0.386,18,0.413,20,0.413,22,0.354,24,0.301,25,0.178,26,0.01,27,0.806,34,0.77,43,0.013,44,0.013,45,0.252,46,0.687,47,1.143,48,0.861,49,0.861,50,0.861,51,0.861,53,1.904,54,1.801,56,1.208,58,1.208,60,0.201,61,0.538,67,0.861,68,1.208,69,1.208,70,0.861,71,1.514,72,0.861,73,0.861,74,0.648,75,0.861,76,0.648,77,1.432,78,0.861,79,0.687,80,0.687,81,0.861,82,0.648,83,0.765,84,0.861,85,0.687,86,1.396,87,0.648,88,0.861,89,0.687,90,0.574,91,0.648,92,0.861,93,0.648,94,0.861,95,0.648,96,0.861,97,1.139,98,0.861,99,0.648,100,0.861,101,0.687,102,1.208,103,0.964,104,0.861,105,0.687,106,0.861,107,0.648,108,0.861,109,0.687,110,0.648,111,0.861,112,0.687,113,0.861,114,0.861,115,0.861,116,0.861,249,3.594,256,0.758,261,2.649,262,2.532,275,2.231,280,1.51,281,1.204,284,1.792,294,2.649,314,1.08,359,3.594,369,1.476,372,1.514,387,2.245,391,3.061,402,1.533,413,2.868,415,3.132,417,2.466,420,1.887,461,1.354,462,1.901,504,2.231,506,2.466,517,3.903,551,2.78,609,3.132,913,2.649,979,3.461,1015,2.78,1027,2.78,1028,5.284,1029,4.572,1030,4.572,1031,3.257,1032,3.257,1033,3.903,1034,4.572,1035,5.729,1036,4.572,1037,5.729,1038,4.572,1039,4.572,1040,5.729,1041,5.729,1042,5.729,1043,3.132,1044,3.257]],["title/components/RegisterComponent.html",[45,0.169,99,0.705]],["body/components/RegisterComponent.html",[3,0.212,4,0.075,5,0.075,7,0.391,8,0.62,10,0.329,13,0.444,15,0.603,16,0.022,17,0.489,18,0.492,19,1.018,20,0.624,21,1.794,22,0.365,24,0.145,25,0.085,26,0.008,27,0.458,32,2.176,33,2.249,34,1.098,37,1.623,42,1.018,43,0.008,44,0.008,45,0.159,46,0.33,47,0.649,48,0.881,49,0.413,50,0.413,51,0.413,53,1.709,54,1.617,56,0.687,58,0.687,60,0.097,61,0.306,63,1.676,64,0.97,67,0.413,68,0.687,69,0.881,70,1.301,71,1.026,72,0.413,73,0.413,74,0.311,75,0.413,76,0.311,77,0.97,78,0.413,79,0.33,80,0.548,81,0.413,82,0.311,83,0.717,84,0.413,85,0.33,86,0.881,87,0.311,88,0.413,89,0.33,90,0.276,91,0.311,92,0.413,93,0.311,94,0.413,95,0.311,96,0.413,97,0.311,98,0.413,99,0.772,100,0.413,101,0.33,102,0.687,103,0.702,104,0.413,105,0.33,106,0.413,107,0.311,108,0.413,109,0.548,110,0.311,111,0.413,112,0.33,113,0.413,114,0.413,115,0.413,116,0.413,135,0.736,139,3.182,159,0.981,165,0.546,174,1.335,178,0.736,197,1.071,215,1.071,224,0.736,231,1.821,234,1.505,235,2.915,239,1.821,241,1.629,247,1.63,249,0.981,256,0.259,258,2.658,259,2.523,260,2.938,261,1.931,262,1.715,270,1.399,271,1.041,275,1.071,277,0.488,279,0.546,280,1.766,281,0.961,284,1.306,294,0.906,295,1.184,300,0.691,309,0.691,314,1.163,320,2.651,332,0.907,336,1.505,337,0.65,345,1.399,348,0.981,349,1.767,354,0.981,358,1.675,366,0.906,369,0.931,372,1.026,387,1.521,391,1.931,399,3.517,402,0.736,408,0.691,415,1.071,420,1.931,426,1.335,427,1.903,428,2.95,442,1.335,457,1.223,458,1.335,461,0.65,462,1.08,463,1.071,464,1.071,470,1.184,498,1.018,500,0.906,504,1.071,524,2.283,525,2.249,543,1.63,544,1.967,572,1.148,573,1.071,577,2.027,579,1.505,584,1.779,608,1.071,611,1.335,615,2.027,637,1.399,644,2.218,678,0.906,693,1.505,698,2.249,708,1.184,711,0.981,712,1.184,723,1.505,744,2.091,745,2.435,746,1.184,749,2.218,769,3.26,778,2.658,780,2.283,788,1.071,789,1.184,791,1.071,793,3.182,809,2.658,841,0.981,850,0.981,851,2.218,856,1.335,857,3.313,858,1.184,859,1.335,860,3.727,861,1.335,862,1.335,863,1.335,864,1.335,865,2.218,866,1.335,867,1.335,868,1.335,869,1.335,893,1.184,896,1.184,905,1.335,913,1.931,914,4.04,915,2.702,917,1.335,920,1.335,921,1.335,923,2.523,925,1.335,928,1.335,929,1.184,930,2.218,931,1.335,932,1.184,933,1.335,934,1.184,935,1.335,936,1.335,937,1.335,938,1.335,942,2.218,945,1.335,946,2.844,960,1.335,979,1.967,980,2.218,981,3.517,987,2.218,995,2.853,1043,1.071,1045,1.335,1046,3.333,1047,2.598,1048,3.882,1049,3.333,1050,4.307,1051,3.333,1052,3.333,1053,5.155,1054,3.333,1055,2.598,1056,3.882,1057,2.598,1058,2.598,1059,3.882,1060,2.598,1061,4.176,1062,3.333,1063,2.598,1064,1.564,1065,1.564,1066,2.598,1067,1.564,1068,1.564,1069,1.564,1070,1.564,1071,2.598,1072,1.564,1073,1.564,1074,1.564,1075,1.564,1076,1.564,1077,1.564,1078,1.564,1079,1.564,1080,2.598,1081,1.564,1082,1.564,1083,1.564,1084,2.598,1085,2.598,1086,1.564,1087,1.564,1088,1.564,1089,1.564,1090,4.647,1091,1.564,1092,1.184,1093,3.333,1094,2.218,1095,1.967,1096,1.184,1097,1.564,1098,1.335,1099,1.967,1100,1.564,1101,1.564,1102,1.335,1103,1.564,1104,1.564,1105,1.184,1106,1.564,1107,1.564,1108,1.184,1109,1.564,1110,1.564,1111,1.564,1112,1.564,1113,1.335,1114,1.564,1115,1.564,1116,1.184,1117,1.564,1118,1.184,1119,1.564,1120,1.184,1121,1.564,1122,1.184,1123,1.564,1124,1.184,1125,1.564,1126,1.184,1127,1.564,1128,1.564,1129,1.564,1130,1.564,1131,1.564,1132,1.564,1133,1.564,1134,1.564,1135,1.564,1136,3.333,1137,1.564,1138,1.564,1139,1.564,1140,1.564,1141,1.564,1142,1.564,1143,1.564,1144,1.335,1145,1.564,1146,1.184,1147,1.564,1148,1.564,1149,1.564,1150,1.564,1151,1.564,1152,1.564,1153,1.335,1154,1.564,1155,2.598,1156,1.564,1157,1.564,1158,1.564,1159,3.676,1160,1.564,1161,1.564,1162,1.564,1163,1.564,1164,1.564,1165,1.564,1166,1.564,1167,1.564,1168,1.564,1169,1.564,1170,1.564,1171,1.564,1172,1.564,1173,1.564,1174,1.564,1175,2.598,1176,2.598,1177,2.218,1178,1.564,1179,1.564,1180,1.564,1181,1.564,1182,1.564,1183,1.564,1184,1.564,1185,1.564,1186,1.564,1187,1.564,1188,1.564,1189,1.564,1190,1.564,1191,1.564,1192,2.598,1193,1.967,1194,2.598,1195,2.598,1196,2.598,1197,2.598,1198,2.598,1199,3.882,1200,2.598,1201,2.598,1202,2.218,1203,1.564,1204,3.313,1205,2.598,1206,2.598,1207,2.598,1208,2.598,1209,2.598,1210,2.598,1211,1.967,1212,1.564,1213,1.564]],["title/classes/ResponseApiUser.html",[26,0.01,1214,2.427]],["body/classes/ResponseApiUser.html",[3,0.285,4,0.248,5,0.248,8,0.524,13,0.429,15,0.81,16,0.021,17,0.524,18,0.66,22,0.322,25,0.285,26,0.015,43,0.018,44,0.018,60,0.322,61,0.731,83,0.888,256,0.863,493,4.538,498,2.596,664,3.118,719,2.617,1214,4.249,1215,5.655,1216,4.445,1217,4.445,1218,6.204,1219,5.208,1220,5.208,1221,5.208]],["title/classes/Role.html",[26,0.01,1222,2.427]],["body/classes/Role.html",[3,0.21,4,0.183,5,0.183,8,0.387,9,2.634,13,0.354,15,0.598,16,0.022,17,0.433,18,0.487,19,0.909,21,2.758,22,0.317,25,0.21,26,0.018,27,0.678,32,1.699,34,1.211,42,0.909,43,0.015,44,0.015,60,0.238,61,0.603,63,2.031,64,0.961,83,0.649,239,1.27,241,1.814,247,2.413,256,0.849,273,2.413,282,1.933,284,2.008,287,2.071,292,2.968,299,1.933,332,2.012,349,1.201,351,1.507,379,2.895,427,1.699,532,2.229,555,3.214,572,1.699,664,2.711,693,2.968,711,2.413,719,1.933,839,2.912,892,2.413,913,3.338,914,2.634,915,2.413,991,3.307,993,2.634,994,2.634,995,2.229,997,2.912,1043,3.509,1061,2.912,1096,2.912,1099,2.912,1105,2.912,1108,3.878,1116,2.912,1118,2.912,1120,2.912,1122,2.912,1124,2.912,1126,2.912,1222,4.207,1223,2.912,1224,5.46,1225,4.373,1226,5.123,1227,3.283,1228,3.283,1229,3.283,1230,4.373,1231,3.283,1232,2.912,1233,4.373,1234,3.283,1235,3.283,1236,3.283,1237,4.917,1238,3.283,1239,4.917,1240,3.283,1241,3.283,1242,3.283,1243,3.283,1244,3.283,1245,3.283,1246,3.283,1247,3.283,1248,4.373,1249,3.283,1250,3.283,1251,4.373,1252,3.283,1253,3.283,1254,2.912,1255,3.283,1256,3.283,1257,2.912,1258,3.283,1259,3.283]],["title/classes/Room.html",[26,0.01,379,1.781]],["body/classes/Room.html",[3,0.271,4,0.236,5,0.236,13,0.467,16,0.022,17,0.57,18,0.91,22,0.401,25,0.271,26,0.015,43,0.018,44,0.018,60,0.306,61,0.709,63,1.682,83,0.891,379,3.024,719,2.489,991,3.631,993,4.441,994,4.441,1260,4.227,1261,6.484,1262,6.484,1263,6.484,1264,4.953,1265,4.953,1266,4.953,1267,4.953,1268,4.953,1269,4.953]],["title/components/SideBarLeftComponent.html",[45,0.169,101,0.747]],["body/components/SideBarLeftComponent.html",[3,0.149,4,0.13,5,0.13,7,0.679,8,0.404,10,0.509,13,0.33,16,0.022,19,0.642,20,0.344,22,0.168,24,0.251,25,0.149,26,0.008,27,0.708,43,0.012,44,0.012,45,0.227,46,0.573,47,1.003,48,0.718,49,0.718,50,0.718,51,0.718,53,1.865,54,1.764,56,1.061,58,1.061,60,0.168,61,0.473,64,0.679,65,2.518,67,0.718,68,1.061,69,1.061,70,0.718,71,1.393,72,0.718,73,0.718,74,0.54,75,0.718,76,0.54,77,1.471,78,0.718,79,0.573,80,0.573,81,0.718,82,0.54,83,0.605,84,0.718,85,0.573,86,1.261,87,0.54,88,0.718,89,0.573,90,0.479,91,0.54,92,0.718,93,0.54,94,0.718,95,0.54,96,0.718,97,0.54,98,0.718,99,0.54,100,0.718,101,1.111,102,1.686,103,1.46,104,0.718,105,0.573,106,0.718,107,0.54,108,0.718,109,0.573,110,0.54,111,0.718,112,0.573,113,0.718,114,0.718,115,0.718,116,0.718,184,3.038,207,3.989,236,2.749,249,2.518,256,0.791,284,1.065,314,0.948,359,2.518,369,1.333,372,1.393,455,3.257,457,2.769,460,3.168,461,2.53,462,2.597,463,1.862,464,1.862,465,3.426,466,4.073,468,3.268,475,4.498,477,1.705,480,1.862,485,1.463,621,3.609,633,3.426,637,2.569,638,3.426,640,4.073,646,2.749,655,3.277,656,3.426,657,3.527,658,3.527,775,2.326,847,3.038,870,3.989,871,3.038,872,3.989,873,3.038,874,3.038,880,4.607,881,3.989,882,2.058,1019,2.32,1024,3.426,1193,3.989,1270,3.989,1271,2.32,1272,4.772,1273,4.014,1274,4.014,1275,2.718,1276,4.014,1277,5.27,1278,4.014,1279,4.014,1280,4.014,1281,4.014,1282,4.014,1283,4.014,1284,4.014,1285,4.014,1286,4.772,1287,4.772,1288,2.718,1289,2.718,1290,4.014,1291,4.014,1292,4.014,1293,2.718,1294,2.718,1295,2.718,1296,2.718,1297,2.718,1298,2.718,1299,2.718,1300,2.718,1301,2.718]],["title/components/SideBarRightComponent.html",[45,0.169,105,0.747]],["body/components/SideBarRightComponent.html",[3,0.213,4,0.186,5,0.186,7,0.973,8,0.52,10,0.655,13,0.357,16,0.022,20,0.493,22,0.241,24,0.36,25,0.213,26,0.011,27,0.911,43,0.015,44,0.015,45,0.276,46,0.821,47,1.291,48,1.029,49,1.029,50,1.029,51,1.029,53,1.938,54,1.832,56,1.365,58,1.365,60,0.241,67,1.029,68,1.365,69,1.365,70,1.029,71,1.632,72,1.029,73,1.029,74,0.774,75,1.029,76,0.774,77,1.543,78,1.029,79,0.821,80,0.821,81,1.029,82,0.774,83,0.735,84,1.029,85,0.821,86,1.532,87,0.774,88,1.029,89,0.821,90,0.686,91,0.774,92,1.029,93,0.774,94,1.029,95,0.774,96,1.029,97,0.774,98,1.029,99,0.774,100,1.029,101,0.821,102,1.83,103,1.518,104,1.029,105,1.301,106,1.029,107,0.774,108,1.029,109,0.821,110,0.774,111,1.029,112,0.821,113,1.029,114,1.029,115,1.029,116,1.029,209,4.387,256,0.96,314,1.22,369,1.619,372,1.632,455,2.256,461,1.619,462,1.619,471,3.24,637,2.096,646,2.667,655,2.096,657,2.443,658,2.443,1270,4.387,1302,3.323,1303,5.796,1304,5.165,1305,3.894,1306,3.894]],["title/interceptors/TokenInterceptor.html",[1307,3.025,1308,2.427]],["body/interceptors/TokenInterceptor.html",[3,0.181,4,0.158,5,0.158,8,0.466,10,0.586,13,0.32,15,0.719,16,0.022,17,0.391,18,0.586,20,0.42,22,0.399,24,0.306,25,0.253,26,0.014,27,0.584,30,2.827,31,2.827,32,2.356,34,1.526,42,1.26,43,0.014,44,0.014,60,0.205,80,0.698,103,0.698,165,1.157,197,2.269,211,2.269,231,1.711,239,1.094,241,1.705,242,3.809,256,0.549,259,4.036,260,4.369,262,2.55,271,1.665,276,1.093,277,1.445,279,1.157,280,1.094,281,1.225,282,3.161,284,1.298,287,2.491,294,1.919,295,2.507,333,1.919,337,1.924,344,2.507,349,1.896,351,1.298,352,2.903,354,2.903,356,2.507,404,2.507,408,1.464,413,2.903,427,1.464,537,2.507,543,2.078,577,1.559,589,2.827,591,2.507,609,2.269,615,2.509,758,3.502,841,2.903,981,2.507,989,2.507,991,2.871,1094,2.827,1095,2.507,1144,2.827,1146,2.507,1159,2.827,1204,2.827,1308,3.953,1309,3.313,1310,2.507,1311,4.627,1312,3.313,1313,3.313,1314,4.627,1315,4.627,1316,6.072,1317,4.551,1318,5.772,1319,3.313,1320,4.627,1321,3.949,1322,4.627,1323,3.313,1324,4.627,1325,4.627,1326,2.269,1327,3.313,1328,2.269,1329,2.827,1330,5.772,1331,4.627,1332,3.313,1333,3.313,1334,3.313,1335,3.313,1336,3.313,1337,3.313,1338,3.313,1339,3.313,1340,5.332,1341,4.627,1342,3.313,1343,3.313,1344,3.313,1345,3.313,1346,4.627,1347,3.313,1348,3.313,1349,3.313,1350,3.313,1351,3.313,1352,3.313,1353,2.827,1354,4.627,1355,3.313,1356,3.313,1357,3.313,1358,3.313,1359,4.627,1360,3.313,1361,3.313,1362,3.313,1363,3.313,1364,3.313,1365,3.313,1366,3.313,1367,3.313,1368,3.313,1369,3.313,1370,3.313,1371,4.627,1372,3.313,1373,3.313,1374,3.313,1375,3.313,1376,4.627,1377,3.313,1378,3.313,1379,3.313,1380,3.313,1381,3.313,1382,3.313,1383,3.313,1384,3.313,1385,4.627,1386,3.313,1387,2.827,1388,2.827,1389,2.827,1390,2.827,1391,2.827,1392,2.827,1393,2.827,1394,2.827,1395,2.827]],["title/injectables/TokenService.html",[276,0.837,1326,2.427]],["body/injectables/TokenService.html",[3,0.202,4,0.176,5,0.176,8,0.501,10,0.631,13,0.45,15,0.774,16,0.022,17,0.477,18,0.631,19,0.872,20,0.799,22,0.39,24,0.341,25,0.202,26,0.011,34,1.177,37,1.289,42,1.491,43,0.015,44,0.015,55,1.446,60,0.228,61,0.587,63,1.576,64,0.922,83,0.842,165,1.289,231,1.842,234,3.268,235,3.789,239,1.994,241,1.784,270,3.037,271,2.075,276,1.177,277,1.152,278,1.534,281,2.086,282,2.503,292,2.138,297,1.736,299,2.503,300,2.669,301,4.27,303,5.155,304,4.27,305,4.252,306,4.252,307,3.037,317,4.252,318,4.252,320,3.252,321,3.771,323,2.138,324,2.138,325,3.771,326,2.527,327,2.138,328,2.138,329,2.527,330,2.138,331,2.527,332,1.289,333,3.268,335,3.412,336,3.5,337,2.071,338,3.771,339,2.793,340,2.527,341,3.149,342,2.793,343,3.149,344,2.793,345,1.986,346,3.149,347,2.793,348,2.314,349,1.555,350,3.771,351,1.952,352,3.125,353,4.252,354,3.539,355,3.149,356,2.793,357,3.149,358,1.854,359,3.539,360,2.793,1326,3.412,1396,3.149,1397,3.689,1398,3.689,1399,3.689,1400,3.689,1401,3.689,1402,3.689,1403,3.689,1404,3.689]],["title/classes/User.html",[26,0.01,83,0.449]],["body/classes/User.html",[3,0.165,4,0.144,5,0.144,9,2.071,13,0.497,16,0.022,17,0.609,18,0.932,21,2.731,22,0.268,25,0.165,26,0.016,27,0.533,32,1.336,34,1.025,42,0.714,43,0.013,44,0.013,60,0.187,61,0.511,63,2.05,83,0.702,239,0.998,241,1.636,247,1.897,256,0.84,273,2.721,282,2.548,284,1.185,287,1.628,292,2.513,299,1.519,332,1.771,349,0.944,351,1.185,379,2.784,427,1.336,532,1.752,555,2.721,572,1.336,664,1.423,693,2.513,711,1.897,719,1.519,839,2.289,892,1.897,913,3.399,914,3.474,915,3.182,991,3.287,993,3.474,994,3.474,995,2.513,997,3.839,1043,3.795,1061,3.839,1096,2.289,1099,2.289,1105,3.839,1108,4.194,1113,3.702,1116,3.839,1118,3.839,1120,3.839,1122,3.839,1124,3.839,1126,2.289,1222,4.018,1223,2.289,1224,3.702,1225,2.581,1227,2.581,1228,2.581,1229,2.581,1230,3.702,1231,2.581,1232,2.289,1233,3.702,1234,2.581,1235,2.581,1236,2.581,1237,4.329,1238,2.581,1239,4.329,1240,4.329,1241,4.329,1242,4.329,1243,4.329,1244,4.329,1245,2.581,1246,2.581,1247,2.581,1248,3.702,1249,2.581,1250,2.581,1251,3.702,1252,2.581,1253,2.581,1254,2.289,1255,2.581,1256,2.581,1257,2.289,1258,2.581,1259,2.581,1405,4.337,1406,3.024,1407,3.024,1408,3.024,1409,3.024,1410,3.024,1411,3.024,1412,3.024,1413,3.024,1414,3.024,1415,3.024,1416,3.024,1417,3.024,1418,3.024,1419,3.024,1420,3.024,1421,3.024,1422,3.024,1423,3.024,1424,3.024,1425,3.024,1426,3.024]],["title/components/UserComponent.html",[45,0.169,107,0.705]],["body/components/UserComponent.html",[3,0.206,4,0.18,5,0.18,7,0.944,8,0.575,10,0.641,13,0.395,15,0.587,16,0.022,17,0.428,18,0.479,20,0.479,22,0.313,24,0.349,25,0.206,26,0.011,27,0.892,34,0.893,43,0.015,44,0.015,45,0.272,46,0.796,47,1.265,48,0.998,49,0.998,50,0.998,51,0.998,53,1.932,54,1.827,56,1.338,58,1.338,60,0.234,61,0.596,67,0.998,68,1.338,69,1.338,70,0.998,71,1.612,72,0.998,73,0.998,74,0.751,75,0.998,76,0.751,77,1.524,78,0.998,79,0.796,80,0.796,81,0.998,82,0.751,83,0.806,84,0.998,85,0.796,86,1.509,87,0.751,88,0.998,89,0.796,90,0.666,91,0.751,92,0.998,93,0.751,94,0.998,95,0.751,96,0.998,97,0.751,98,0.998,99,0.751,100,0.998,101,0.796,102,1.338,103,1.067,104,0.998,105,0.796,106,0.998,107,1.213,108,0.998,109,0.796,110,0.751,111,0.998,112,0.796,113,0.998,114,0.998,115,0.998,116,0.998,256,0.626,279,1.319,314,1.196,369,1.595,372,1.612,387,2.565,402,1.777,549,2.587,554,3.832,577,1.777,1098,3.224,1427,3.224,1428,5.709,1429,5.062,1430,5.709,1431,3.777,1432,5.062,1433,3.777,1434,3.777,1435,3.777,1436,3.777,1437,3.777,1438,3.777,1439,3.777,1440,3.777,1441,5.062,1442,5.062,1443,5.062]],["title/guards/UserGuard.html",[229,2.427,252,2.427]],["body/guards/UserGuard.html",[3,0.269,4,0.234,5,0.234,8,0.495,10,0.759,13,0.34,15,0.764,16,0.022,17,0.415,18,0.623,20,0.623,22,0.399,24,0.454,25,0.269,26,0.014,27,0.866,42,1.161,43,0.018,44,0.018,55,1.926,60,0.304,224,2.313,229,4.103,253,3.366,255,5.221,265,3.72,266,5.092,267,4.892,268,5.092,270,3.225,271,2.018,272,4.535,273,3.758,274,4.892,276,1.415,277,1.534,278,2.043,284,1.926,1444,4.194,1445,4.915]],["title/components/UserModalComponent.html",[45,0.169,109,0.747]],["body/components/UserModalComponent.html",[3,0.181,4,0.158,5,0.158,7,0.828,8,0.537,9,3.953,10,0.586,13,0.369,15,0.515,16,0.022,17,0.391,18,0.42,20,0.42,22,0.33,24,0.306,25,0.181,26,0.01,27,0.816,42,0.783,43,0.016,44,0.014,45,0.254,46,0.698,47,1.156,48,0.875,49,0.875,50,0.875,51,0.875,53,1.908,54,1.804,56,1.223,58,1.223,60,0.205,61,0.545,67,0.875,68,1.223,69,1.223,70,0.875,71,1.525,72,0.875,73,0.875,74,0.659,75,0.875,76,0.659,77,1.443,78,0.875,79,0.698,80,0.698,81,0.875,82,0.659,83,0.859,84,0.875,85,0.698,86,1.409,87,0.659,88,0.875,89,0.698,90,0.584,91,0.659,92,0.875,93,0.659,94,0.875,95,0.659,96,0.875,97,0.659,98,0.875,99,0.659,100,0.875,101,0.698,102,1.223,103,0.975,104,0.875,105,0.698,106,0.875,107,0.659,108,0.875,109,1.217,110,0.659,111,0.875,112,0.698,113,0.875,114,1.409,115,0.875,116,0.875,178,1.559,215,3.953,256,0.549,314,1.093,369,1.49,372,1.525,480,2.269,498,2.262,525,1.919,536,2.078,548,2.078,661,2.078,662,3.652,663,3.169,664,2.509,669,2.269,674,2.507,675,2.507,680,2.827,723,2.681,785,2.827,860,3.502,995,3.344,1033,3.949,1092,4.369,1193,4.369,1211,3.502,1217,2.827,1446,3.313,1447,2.827,1448,3.313,1449,3.313,1450,3.313,1451,3.313,1452,3.313,1453,3.313,1454,4.627,1455,4.627,1456,4.627,1457,4.627,1458,4.627,1459,5.772,1460,3.169,1461,4.627,1462,3.949,1463,4.627,1464,4.627,1465,3.169,1466,4.627,1467,4.627,1468,4.627,1469,4.627,1470,4.627]],["title/injectables/UserService.html",[276,0.837,387,1.389]],["body/injectables/UserService.html",[3,0.128,4,0.112,5,0.112,8,0.439,10,0.455,13,0.452,15,0.678,16,0.022,17,0.445,18,0.553,19,1.156,20,0.757,22,0.369,24,0.217,25,0.128,26,0.007,33,1.358,34,1.314,37,1.943,42,1.574,43,0.011,44,0.011,55,0.918,60,0.145,61,0.423,63,0.655,64,1.222,83,0.776,90,0.413,165,0.818,231,2.311,234,2.08,235,3.068,241,1.764,246,1.605,271,2.112,276,0.848,277,0.732,278,0.974,280,1.615,281,1.327,282,2.192,297,1.103,299,1.804,300,2.161,301,1.774,304,3.702,307,2.349,309,1.035,314,0.554,320,1.261,321,1.774,323,1.358,324,1.358,325,1.774,326,1.605,327,1.358,328,1.358,329,1.605,331,2.459,332,0.818,333,2.834,335,3.349,337,0.974,338,1.774,340,1.605,345,2.349,347,1.774,348,1.47,349,1.527,351,1.407,352,1.47,354,1.47,358,1.177,360,1.774,387,1.407,403,1.605,409,4.174,414,3.064,420,2.834,453,2.717,493,1.605,494,1.605,498,0.918,500,2.08,522,2,544,2.717,553,2,554,2.717,555,1.47,556,2,572,1.586,579,1.358,580,2,581,3.064,583,2,586,1.774,592,3.349,608,2.459,612,1.774,614,2,615,2.617,617,2,678,1.358,684,2,707,2,723,2.528,747,1.605,789,2.717,828,4.174,831,2,834,2,835,2,850,1.47,912,1.47,913,2.08,915,1.47,922,2.988,950,2,975,3.064,976,2,1177,3.064,1202,2,1214,2.459,1254,1.774,1317,3.724,1328,1.605,1329,2,1353,2,1471,2,1472,4.891,1473,4.363,1474,4.363,1475,4.363,1476,4.363,1477,4.891,1478,4.363,1479,2.343,1480,2.343,1481,3.59,1482,2.343,1483,2.343,1484,2.343,1485,2.343,1486,3.59,1487,2.343,1488,2.343,1489,3.59,1490,3.59,1491,2.343,1492,4.363,1493,2.343,1494,2.343,1495,2.343,1496,2.343,1497,4.891,1498,2.343,1499,2.343,1500,2.343,1501,2.343,1502,2.343,1503,2.343,1504,2.343,1505,2.343,1506,2,1507,2.343,1508,2.343,1509,2.343,1510,2.343,1511,2.343,1512,2.343,1513,2.343,1514,2.343,1515,4.363,1516,2.343,1517,2.343,1518,3.59,1519,3.59,1520,2.343,1521,2.343,1522,3.59,1523,2.343,1524,2.343,1525,2.343,1526,3.59,1527,3.59,1528,3.59,1529,2.343,1530,2.343,1531,2.343,1532,2.343,1533,2.343,1534,2.343,1535,2.343,1536,2.343,1537,4.363,1538,2.343,1539,2.343,1540,2.343,1541,2.343,1542,2.343,1543,2.343,1544,2.343,1545,2.343,1546,2.343,1547,2.343,1548,2.343,1549,2.343,1550,2.343,1551,2.343,1552,2.343,1553,2.343,1554,2.343,1555,2.343,1556,4.891,1557,2.343,1558,2.343,1559,2.343,1560,2.343,1561,2.343,1562,2.343,1563,4.363,1564,2.343,1565,2.343,1566,2.343,1567,2.343]],["title/components/WeatherComponent.html",[45,0.169,110,0.705]],["body/components/WeatherComponent.html",[3,0.154,4,0.134,5,0.134,7,0.705,8,0.491,10,0.523,13,0.395,15,0.439,16,0.022,17,0.412,18,0.358,19,0.975,20,0.523,22,0.369,24,0.261,25,0.154,26,0.008,27,0.727,32,1.247,35,2.136,42,0.667,43,0.012,44,0.012,45,0.232,46,0.595,47,1.031,48,0.746,49,0.746,50,0.746,51,0.746,53,1.874,54,1.772,56,1.09,58,1.09,60,0.174,61,0.486,63,0.788,64,1.031,67,0.746,68,1.09,69,1.09,70,0.746,71,1.418,72,0.746,73,0.746,74,0.561,75,0.746,76,0.561,77,1.341,78,0.746,79,0.595,80,0.595,81,0.746,82,0.561,83,0.618,84,0.746,85,0.595,86,1.289,87,0.561,88,0.746,89,0.595,90,0.497,91,0.561,92,0.746,93,0.561,94,0.746,95,0.561,96,0.746,97,0.561,98,0.746,99,0.561,100,0.746,101,0.595,102,1.09,103,0.869,104,0.746,105,0.595,106,0.746,107,0.561,108,0.746,109,0.595,110,1.067,111,0.746,112,0.869,113,1.289,114,0.746,115,0.746,116,0.746,159,1.77,165,0.985,178,1.328,218,1.932,222,2.408,224,1.328,231,1.525,239,0.931,241,0.833,246,1.932,256,0.467,279,0.985,280,1.362,281,1.043,309,2.371,312,2.625,314,1.268,330,3.108,331,1.932,332,1.441,345,2.221,349,1.782,369,1.362,372,1.418,379,2.073,408,1.247,416,2.408,433,2.136,457,1.328,461,1.173,462,1.173,468,1.932,485,2.221,494,1.932,498,1.616,524,3.34,525,3.307,572,2.155,573,1.932,577,2.295,588,1.932,595,1.932,603,3.691,615,1.941,637,1.519,655,2.221,657,2.588,658,1.77,736,4.579,752,3.123,754,2.408,755,3.521,756,2.408,757,3.521,758,2.136,759,2.408,760,2.408,761,2.408,762,2.408,763,2.408,764,2.408,765,2.408,766,2.408,767,2.408,858,2.136,879,2.408,892,2.588,912,1.77,965,3.123,1460,3.674,1465,4.083,1506,2.408,1568,2.408,1569,4.876,1570,4.125,1571,4.876,1572,2.821,1573,3.366,1574,4.125,1575,3.521,1576,2.821,1577,2.821,1578,3.521,1579,4.125,1580,4.125,1581,3.123,1582,4.125,1583,4.125,1584,3.521,1585,2.821,1586,3.123,1587,3.521,1588,2.136,1589,2.408,1590,2.821,1591,2.821,1592,2.821,1593,2.821,1594,2.821,1595,2.821,1596,2.821,1597,2.821,1598,2.821,1599,2.408,1600,2.821,1601,2.821,1602,2.821,1603,2.821,1604,2.821,1605,2.821,1606,2.821,1607,2.821,1608,2.821,1609,2.821,1610,2.821,1611,4.125,1612,4.125,1613,4.125,1614,4.125,1615,4.125,1616,2.821]],["title/components/WeatherModalComponent.html",[45,0.169,112,0.747]],["body/components/WeatherModalComponent.html",[3,0.244,4,0.116,5,0.116,7,0.61,8,0.45,10,0.469,13,0.418,15,0.379,16,0.022,17,0.454,18,0.309,19,1.057,20,0.469,21,2.689,22,0.349,24,0.226,25,0.133,26,0.007,27,0.653,32,1.078,33,2.145,34,0.875,37,0.852,42,0.875,43,0.011,44,0.011,45,0.256,46,0.514,47,0.925,48,0.645,49,0.645,50,0.645,51,0.645,53,1.839,54,1.74,56,0.979,58,0.979,60,0.151,61,0.436,63,0.682,64,1.118,67,0.645,68,0.979,69,0.979,70,0.645,71,1.32,72,0.645,73,0.645,74,0.485,75,0.645,76,0.485,77,1.248,78,0.645,79,0.514,80,0.514,81,0.645,82,0.485,83,0.567,84,0.645,85,0.514,86,1.182,87,0.485,88,0.645,89,0.514,90,0.43,91,0.485,92,0.645,93,0.485,94,0.645,95,0.485,96,0.645,97,0.485,98,0.645,99,0.485,100,0.645,101,0.514,102,0.979,103,0.78,104,0.645,105,0.514,106,0.645,107,0.485,108,0.645,109,0.514,110,0.485,111,0.645,112,1.053,113,1.637,114,1.32,115,0.645,116,0.645,135,1.148,165,0.852,178,1.148,218,4.243,231,1.369,232,1.671,239,1.477,241,1.787,256,0.404,271,1.397,279,0.852,280,1.477,281,1.369,284,0.956,309,2.207,312,2.409,314,1.057,320,1.993,330,2.592,336,3.111,337,2.076,340,2.536,349,1.972,358,2.509,369,1.25,372,1.32,408,1.977,427,1.636,433,1.847,457,2.526,460,1.993,461,1.015,462,1.015,471,2.323,477,1.531,478,2.323,498,1.451,500,1.414,532,2.145,536,1.531,547,2.083,548,2.807,549,2.536,572,1.078,577,1.148,595,1.671,615,1.148,648,1.847,661,1.531,662,3.064,663,2.536,664,2.105,668,3.819,669,3.421,671,1.847,674,1.847,675,2.803,676,2.083,678,2.145,679,4.263,681,2.083,686,2.803,687,2.083,693,1.414,744,2.807,745,3.133,774,1.847,775,2.145,778,3.421,779,2.083,780,2.536,782,2.083,788,1.671,791,1.671,792,1.847,793,3.421,809,2.536,810,2.083,811,2.083,812,2.083,813,2.083,850,1.531,894,2.083,912,1.531,922,1.671,923,2.803,929,1.847,934,1.847,965,2.803,972,2.083,995,1.414,1102,2.083,1257,1.847,1447,2.083,1460,3.421,1465,3.421,1573,3.133,1575,3.819,1581,3.781,1584,2.083,1586,2.803,1587,3.16,1588,4.689,1589,2.083,1599,2.083,1617,4.474,1618,4.474,1619,4.474,1620,2.44,1621,2.44,1622,3.819,1623,3.819,1624,2.44,1625,2.44,1626,3.703,1627,2.44,1628,2.44,1629,2.44,1630,2.44,1631,2.44,1632,2.44,1633,2.44,1634,2.44,1635,2.44,1636,2.44,1637,2.44,1638,2.44,1639,2.44,1640,2.44,1641,2.44,1642,3.703,1643,2.44,1644,2.44,1645,3.703,1646,3.703,1647,2.44,1648,2.44,1649,2.44,1650,2.44,1651,2.44,1652,2.44,1653,2.44,1654,2.44,1655,2.44,1656,2.44,1657,2.44,1658,2.44,1659,2.44,1660,3.703,1661,2.44,1662,2.44,1663,3.703,1664,2.44,1665,2.44,1666,3.703,1667,2.44,1668,2.44,1669,2.44,1670,2.44,1671,3.703]],["title/injectables/WeatherService.html",[276,0.837,1573,2.223]],["body/injectables/WeatherService.html",[3,0.209,4,0.182,5,0.182,8,0.513,10,0.646,13,0.454,15,0.792,16,0.022,17,0.539,18,0.646,19,1.356,20,0.776,21,3.713,22,0.379,24,0.353,25,0.209,26,0.011,37,1.78,42,1.204,43,0.015,44,0.015,55,1.496,60,0.236,61,0.6,63,1.927,64,1.434,165,1.333,242,3.198,271,1.992,276,1.204,277,1.192,278,1.587,279,1.333,297,1.796,299,2.561,300,2.706,307,3.09,309,2.536,312,2.055,323,2.212,324,2.212,327,2.212,328,2.212,408,2.252,572,2.252,850,2.395,893,3.859,1460,3.491,1465,4.195,1573,3.198,1581,4.636,1586,3.859,1622,4.351,1623,5.227,1672,3.258,1673,5.739,1674,5.739,1675,5.739,1676,5.098,1677,5.098,1678,5.098,1679,3.817,1680,5.098,1681,5.098,1682,3.817,1683,3.817,1684,5.098,1685,3.817,1686,5.098,1687,5.098,1688,3.817,1689,5.098,1690,3.817,1691,3.817,1692,3.817,1693,3.817,1694,3.817,1695,5.739,1696,5.098,1697,3.817,1698,3.817,1699,3.817,1700,5.098,1701,5.098,1702,3.817,1703,3.817,1704,3.817,1705,3.817,1706,3.817,1707,3.817,1708,3.817]],["title/coverage.html",[1709,4.138]],["body/coverage.html",[0,2.381,1,2.181,5,0.166,6,2.967,16,0.022,17,0.294,26,0.019,37,1.214,43,0.014,44,0.014,45,0.344,46,0.733,52,2.967,74,0.691,76,0.691,79,0.733,80,1.008,82,0.691,83,0.783,85,0.733,87,0.691,89,0.733,90,0.613,91,0.691,93,0.691,95,0.691,97,0.691,99,0.691,101,0.733,103,1.242,105,0.733,107,0.691,109,0.733,110,0.691,112,0.733,151,2.381,153,2.632,155,2.381,158,2.381,162,2.381,207,2.632,209,2.632,211,2.381,215,2.381,218,2.381,225,2.381,227,2.381,229,2.381,252,3.747,254,2.967,262,1.536,276,1.575,298,2.967,300,1.536,368,2.967,375,2.967,377,3.747,378,2.967,379,1.747,387,1.362,389,2.381,485,3.999,486,2.967,493,2.381,495,2.967,514,2.967,660,2.967,661,3.697,698,2.014,699,2.967,720,2.381,721,2.967,731,2.967,739,2.181,776,2.967,814,2.967,844,2.967,852,2.632,883,2.967,884,2.967,899,2.967,991,1.872,992,2.967,1011,2.967,1027,2.967,1045,2.967,1092,2.632,1214,2.381,1215,2.967,1216,2.967,1222,2.381,1223,3.622,1260,2.967,1270,3.622,1271,2.967,1302,2.967,1307,2.967,1308,2.381,1310,3.622,1326,2.381,1328,3.277,1396,2.967,1427,2.967,1444,2.967,1471,2.967,1568,2.967,1573,2.181,1578,2.967,1588,2.632,1672,2.967,1709,2.967,1710,3.476,1711,3.476,1712,3.476,1713,5.47,1714,4.784,1715,5.893,1716,3.476,1717,6.543,1718,4.784,1719,6.543,1720,3.476,1721,3.476,1722,3.476,1723,3.476,1724,3.476,1725,5.893,1726,6.179,1727,3.476,1728,5.47,1729,3.476,1730,3.476,1731,3.476,1732,3.476,1733,3.476,1734,3.476,1735,2.967,1736,2.967,1737,2.967,1738,3.476,1739,3.476]],["title/dependencies.html",[120,2.922,1740,2.236]],["body/dependencies.html",[16,0.022,24,0.471,43,0.018,44,0.018,120,3.488,132,5.224,135,2.396,145,4.633,148,4.192,201,3.855,202,4.346,224,2.396,277,1.59,539,4.346,541,4.346,1741,5.093,1742,7.262,1743,5.093,1744,5.224,1745,5.093,1746,5.093,1747,5.093,1748,5.093,1749,5.093,1750,5.093,1751,5.093,1752,5.093,1753,5.093,1754,5.093,1755,5.093,1756,5.093,1757,5.093,1758,5.093,1759,5.093,1760,5.093]],["title/index.html",[60,0.183,1761,2.955,1762,2.955]],["body/index.html",[4,0.225,8,0.474,16,0.017,27,0.831,37,1.646,43,0.017,44,0.017,45,0.302,65,2.957,90,0.831,128,3.568,201,5.328,238,2.957,293,4.023,342,4.42,470,5.256,579,2.731,769,3.568,896,3.568,1462,4.023,1740,3.568,1744,4.023,1763,5.839,1764,4.713,1765,6.343,1766,6.343,1767,4.713,1768,5.839,1769,6.815,1770,4.713,1771,4.713,1772,4.713,1773,4.713,1774,4.713,1775,4.713,1776,4.713,1777,4.713,1778,4.713,1779,4.713,1780,6.343,1781,6.343,1782,4.713,1783,6.63,1784,4.713,1785,4.713,1786,4.713,1787,5.839,1788,5.839,1789,6.63,1790,5.839,1791,4.713,1792,4.713,1793,4.713,1794,4.713,1795,5.839,1796,4.713,1797,4.713,1798,4.713,1799,4.713,1800,4.713,1801,6.343,1802,4.713,1803,4.713,1804,4.713,1805,4.713]],["title/modules.html",[119,3.041]],["body/modules.html",[16,0.019,43,0.019,44,0.019,118,3.895,119,3.568,125,3.568,148,3.895,1806,5.688,1807,5.688,1808,6.532,1809,5.688,1810,5.688]],["title/overview.html",[238,3.041]],["body/overview.html",[0,2.918,1,3.798,16,0.022,43,0.016,44,0.016,46,1.451,47,1.065,74,1.204,76,1.204,79,1.276,82,1.204,85,1.276,87,1.204,89,1.276,91,1.204,93,1.204,95,1.204,97,1.204,99,1.204,101,1.276,105,1.276,107,1.204,109,1.276,110,1.204,112,1.276,118,5.161,119,2.673,120,3.752,121,3.636,122,3.636,123,3.636,124,3.636,125,3.798,126,4.676,127,3.636,128,3.225,223,2.918,238,2.673,253,2.918,297,2.005,435,3.636,719,2.141,1153,3.636,1811,4.261,1812,5.478,1813,4.261,1814,4.261]],["title/properties.html",[61,0.502,1740,2.236]],["body/properties.html",[16,0.02,43,0.019,44,0.019,61,0.679,579,3.341,1815,5.766]],["title/routes.html",[223,3.321]],["body/routes.html",[16,0.019,43,0.019,44,0.019,223,3.976]],["title/miscellaneous/variables.html",[1816,2.522,1817,3.641]],["body/miscellaneous/variables.html",[16,0.021,17,0.379,19,1.061,26,0.006,32,2.969,34,0.932,43,0.009,44,0.009,60,0.124,64,1.123,211,2.175,239,1.72,240,1.709,241,2.161,242,1.256,284,1.244,287,1.078,332,1.378,337,0.832,349,1.627,351,1.546,352,1.256,358,1.595,366,2.286,404,1.516,427,1.403,532,1.16,542,1.516,555,3.426,572,0.885,591,4.134,592,4.539,609,1.371,642,1.709,664,0.942,841,1.992,852,2.404,890,2.71,912,2.476,922,1.371,932,1.516,983,1.709,989,1.516,1095,1.516,1146,1.516,1211,1.516,1232,1.516,1308,2.175,1310,1.516,1321,1.709,1328,3.076,1387,1.709,1388,1.709,1389,1.709,1390,1.709,1391,1.709,1392,1.709,1393,1.709,1394,1.709,1395,1.709,1735,1.709,1736,1.709,1737,1.709,1816,1.709,1817,1.709,1818,2.002,1819,2.002,1820,2.002,1821,2.002,1822,3.175,1823,3.175,1824,3.175,1825,3.175,1826,2.002,1827,2.002,1828,3.175,1829,2.002,1830,2.002,1831,2.002,1832,4.491,1833,2.002,1834,2.002,1835,2.002,1836,3.946,1837,5.978,1838,3.946,1839,2.002,1840,2.002,1841,2.002,1842,2.002,1843,5.665,1844,3.946,1845,2.002,1846,4.491,1847,3.175,1848,3.175,1849,3.175,1850,2.002,1851,2.002,1852,2.002,1853,2.002,1854,3.175,1855,3.946,1856,3.175,1857,4.491,1858,2.002,1859,2.002,1860,2.002,1861,2.002,1862,2.002,1863,3.946,1864,3.175,1865,3.946,1866,2.002,1867,2.002,1868,3.175,1869,3.946,1870,2.002,1871,3.175,1872,2.002,1873,2.002,1874,2.002,1875,3.175,1876,2.002,1877,2.002,1878,2.002,1879,2.002,1880,2.002,1881,6.298,1882,2.002,1883,2.002,1884,2.002,1885,2.002,1886,2.002,1887,2.002,1888,2.002,1889,2.002,1890,2.002,1891,2.002,1892,2.002,1893,2.002,1894,2.002,1895,2.002,1896,2.002,1897,2.002,1898,3.175,1899,3.946,1900,3.175,1901,2.002,1902,2.002,1903,2.002,1904,4.491,1905,2.002,1906,2.002,1907,2.002,1908,6.942,1909,2.002,1910,3.175,1911,3.175,1912,2.002,1913,2.002,1914,2.002,1915,2.002,1916,3.175,1917,2.002,1918,2.002,1919,2.002,1920,2.002,1921,3.175,1922,2.002,1923,2.002,1924,2.002,1925,2.002,1926,2.002,1927,2.002,1928,2.002,1929,2.002,1930,3.175,1931,4.491,1932,3.175,1933,2.002,1934,3.175,1935,4.897,1936,2.002,1937,3.175,1938,2.002,1939,3.175,1940,2.002,1941,2.002,1942,2.002,1943,2.002,1944,2.002,1945,3.946,1946,2.002,1947,3.175,1948,2.002,1949,2.002,1950,2.002,1951,2.002,1952,2.002,1953,3.175,1954,2.002,1955,4.491,1956,2.002,1957,2.002,1958,4.897,1959,3.946,1960,2.002,1961,3.175,1962,2.002,1963,2.002,1964,4.491,1965,2.002,1966,2.002,1967,2.002,1968,2.002,1969,2.002,1970,2.002,1971,2.002,1972,3.175,1973,2.002,1974,2.002,1975,2.002,1976,2.002,1977,2.002,1978,2.002,1979,3.175,1980,2.002,1981,4.491,1982,2.002,1983,2.002,1984,3.946,1985,2.002,1986,2.002,1987,3.175,1988,2.002,1989,2.002,1990,3.175,1991,2.002,1992,2.002,1993,2.002,1994,2.002,1995,2.002,1996,2.002,1997,2.002,1998,2.002,1999,2.002,2000,2.002,2001,2.002,2002,2.002,2003,2.002,2004,2.002,2005,2.002,2006,2.002,2007,2.002,2008,2.002,2009,3.175,2010,2.002,2011,2.002,2012,2.002,2013,2.002,2014,2.002,2015,2.002,2016,2.002,2017,2.002,2018,3.175,2019,2.002,2020,2.002,2021,2.002,2022,2.002,2023,3.175,2024,2.002,2025,2.002,2026,2.002,2027,2.002,2028,3.175,2029,2.002,2030,2.002,2031,2.002,2032,2.002,2033,2.002,2034,2.002,2035,2.002,2036,2.002,2037,2.002,2038,5.835,2039,2.002,2040,2.002,2041,2.002,2042,2.002,2043,2.002,2044,2.002,2045,2.002,2046,2.002,2047,2.002,2048,2.002,2049,2.002,2050,2.002,2051,2.002,2052,2.002,2053,2.002,2054,2.002,2055,2.002,2056,2.002,2057,2.002,2058,2.002,2059,2.002,2060,2.002,2061,2.002,2062,2.002,2063,2.002,2064,3.175,2065,2.002,2066,2.002,2067,2.002,2068,2.002,2069,2.002,2070,2.002,2071,2.002,2072,2.002,2073,2.002,2074,2.002,2075,2.002,2076,3.175,2077,2.002,2078,2.002,2079,2.002,2080,2.002,2081,2.002,2082,3.175,2083,2.002,2084,2.002,2085,2.002,2086,2.002,2087,3.175,2088,2.002,2089,2.002,2090,2.002,2091,2.002,2092,2.002,2093,2.002,2094,2.002,2095,2.002,2096,2.002,2097,2.002,2098,2.002,2099,2.002,2100,2.002,2101,2.002,2102,2.002,2103,3.946,2104,2.002,2105,2.002,2106,2.002,2107,2.002,2108,2.002,2109,2.002,2110,2.002,2111,2.002,2112,2.002,2113,2.002,2114,3.175,2115,2.002,2116,2.002,2117,3.175,2118,2.002,2119,2.002,2120,2.002,2121,2.002,2122,2.002,2123,2.002,2124,3.175,2125,2.002,2126,2.002,2127,2.002,2128,2.002,2129,2.002,2130,2.002,2131,2.002,2132,2.002,2133,2.002,2134,2.002,2135,2.002,2136,2.002,2137,2.002,2138,2.002,2139,2.002,2140,2.002,2141,2.002,2142,2.002,2143,2.002,2144,2.002,2145,2.002,2146,2.002,2147,2.002,2148,2.002,2149,2.002,2150,2.002,2151,2.002,2152,2.002,2153,2.002,2154,2.002,2155,2.002,2156,5.665,2157,2.002,2158,2.002,2159,2.002,2160,2.002,2161,2.002,2162,2.002,2163,2.002,2164,2.002,2165,2.002,2166,2.002,2167,2.002,2168,2.002,2169,2.002,2170,2.002,2171,2.002,2172,2.002,2173,2.002,2174,2.002,2175,2.002,2176,2.002,2177,2.002,2178,2.002,2179,2.002,2180,2.002,2181,2.002,2182,2.002,2183,2.002,2184,2.002,2185,2.002,2186,3.175,2187,2.002,2188,2.002,2189,2.002,2190,2.002,2191,2.002,2192,2.002,2193,2.002,2194,2.002,2195,2.002,2196,2.002,2197,2.002,2198,2.002,2199,2.002,2200,3.946,2201,2.002,2202,2.002,2203,2.002,2204,2.002,2205,2.002,2206,2.002,2207,3.175,2208,2.002,2209,2.002,2210,3.175,2211,2.002,2212,2.002,2213,2.002,2214,2.002,2215,2.002,2216,2.002,2217,2.002,2218,2.002,2219,2.002,2220,2.002,2221,2.002,2222,2.002,2223,2.002,2224,2.002,2225,2.002,2226,2.002,2227,2.002,2228,2.002,2229,2.002,2230,2.002,2231,2.002]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":485,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1815,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":654,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["0/1",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1153,"title":{},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["1/14",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["100",{"_index":460,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherModalComponent.html":{}}}],["1000ms",{"_index":755,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["100vh",{"_index":646,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{}}}],["100vw",{"_index":459,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{}}}],["11",{"_index":1578,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["12",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["13.0.0",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["14.2.4",{"_index":1744,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["150px",{"_index":810,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["16",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1811,"title":{},"body":{"overview.html":{}}}],["1ere",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1px",{"_index":651,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["2",{"_index":435,"title":{},"body":{"components/ChatRoomComponent.html":{},"overview.html":{}}}],["2.10.2",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":442,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/RegisterComponent.html":{}}}],["200px",{"_index":882,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["205",{"_index":1290,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["20px",{"_index":478,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["280px",{"_index":1296,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["2eme",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["3",{"_index":1814,"title":{},"body":{"overview.html":{}}}],["300px",{"_index":649,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["30px",{"_index":1616,"title":{},"body":{"components/WeatherComponent.html":{}}}],["30vh",{"_index":878,"title":{},"body":{"components/FinderComponent.html":{}}}],["311b92",{"_index":1300,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["4.3.1",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1372,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["401",{"_index":1377,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["448aff",{"_index":476,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["5.2.0",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1212,"title":{},"body":{"components/RegisterComponent.html":{}}}],["500px",{"_index":648,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["5px",{"_index":1301,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["5vh",{"_index":876,"title":{},"body":{"components/FinderComponent.html":{}}}],["6",{"_index":1813,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["70vh",{"_index":456,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["74100",{"_index":1582,"title":{},"body":{"components/WeatherComponent.html":{}}}],["8",{"_index":1812,"title":{},"body":{"overview.html":{}}}],["800px",{"_index":1026,"title":{},"body":{"components/OverviewComponent.html":{}}}],["9",{"_index":797,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["90",{"_index":458,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/RegisterComponent.html":{}}}],["_.]{2",{"_index":798,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["__values",{"_index":538,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["_apiurl",{"_index":1472,"title":{},"body":{"injectables/UserService.html":{}}}],["_backend",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["_backend:backendservice",{"_index":1020,"title":{},"body":{"components/OverviewComponent.html":{}}}],["_backendservice",{"_index":1314,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["_chatservice",{"_index":388,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["_dataservice",{"_index":1062,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_directoryservice",{"_index":738,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{}}}],["_disposeviewrepeaterstrategy",{"_index":1268,"title":{},"body":{"classes/Room.html":{}}}],["_fb",{"_index":780,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["_filter",{"_index":1055,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_filter(value",{"_index":865,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["_http",{"_index":312,"title":{},"body":{"injectables/BackendService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["_id",{"_index":994,"title":{},"body":{"classes/Message.html":{},"classes/Role.html":{},"classes/Room.html":{},"classes/User.html":{}}}],["_id?:string",{"_index":1005,"title":{},"body":{"classes/Message.html":{}}}],["_matdialog",{"_index":524,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherComponent.html":{}}}],["_matdialogref",{"_index":668,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["_route",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_router",{"_index":310,"title":{},"body":{"injectables/BackendService.html":{}}}],["_snackbar",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["_userservice",{"_index":391,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["_userservice!:userservice",{"_index":710,"title":{},"body":{"injectables/DataService.html":{}}}],["_weatherservice",{"_index":1575,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["a:hover",{"_index":1293,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["acceder",{"_index":1231,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["accessible",{"_index":888,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["accessors",{"_index":1060,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accompagnateur",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accompagnement",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account_circle",{"_index":1282,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["account_circleprofil",{"_index":871,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["accès",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["acrobatiques",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":842,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["activatedroutesnapshot",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["activit",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activités",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["add",{"_index":769,"title":{},"body":{"components/DirectoryComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["adddirectory",{"_index":816,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["adddirectory(dir",{"_index":820,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["addskills",{"_index":1056,"title":{},"body":{"components/RegisterComponent.html":{}}}],["administrateur",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administratifs",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adresse.data.gouv.fr/search",{"_index":1684,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adresse.data.gouv.fr/search/?q",{"_index":1587,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["affecter",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["affiche",{"_index":581,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["afterclose",{"_index":1593,"title":{},"body":{"components/WeatherComponent.html":{}}}],["afterclosed",{"_index":1595,"title":{},"body":{"components/WeatherComponent.html":{}}}],["age",{"_index":9,"title":{},"body":{"pipes/AgePipe.html":{},"classes/Role.html":{},"classes/User.html":{},"components/UserModalComponent.html":{}}}],["agent",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agents",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agepipe",{"_index":1,"title":{"pipes/AgePipe.html":{}},"body":{"pipes/AgePipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["agetoday",{"_index":41,"title":{},"body":{"pipes/AgePipe.html":{}}}],["agrigole",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aide",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajoute",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["alias",{"_index":1141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["align",{"_index":468,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherComponent.html":{}}}],["alimentaires",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["all_inboxdrop",{"_index":1284,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["amet",{"_index":630,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["ameublement",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analyste",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":1765,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1269,"title":{},"body":{"classes/Room.html":{}}}],["angular/cdk/dialog",{"_index":1449,"title":{},"body":{"components/UserModalComponent.html":{}}}],["angular/common",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["angular/material/datepicker",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["angular/material/form",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/DirectoryModalComponent.html":{}}}],["angular/material/grid",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["angular/material/toolbar",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"components/WeatherComponent.html":{},"dependencies.html":{}}}],["animateur",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annecy",{"_index":1609,"title":{},"body":{"components/WeatherComponent.html":{}}}],["annemasse",{"_index":1583,"title":{},"body":{"components/WeatherComponent.html":{}}}],["annuler",{"_index":686,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["anticipe",{"_index":759,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["api",{"_index":493,"title":{},"body":{"injectables/ChatService.html":{},"classes/ResponseApiUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["api.appspot.com/jokes/programming/ten",{"_index":491,"title":{},"body":{"injectables/ChatService.html":{}}}],["api.open",{"_index":1692,"title":{},"body":{"injectables/WeatherService.html":{}}}],["api_url:'https://digifab",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["app.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":46,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appel",{"_index":416,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/WeatherComponent.html":{}}}],["append",{"_index":1355,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["append('hourly",{"_index":1702,"title":{},"body":{"injectables/WeatherService.html":{}}}],["append('latitude",{"_index":1704,"title":{},"body":{"injectables/WeatherService.html":{}}}],["append('longitude",{"_index":1705,"title":{},"body":{"injectables/WeatherService.html":{}}}],["append('timezone",{"_index":1706,"title":{},"body":{"injectables/WeatherService.html":{}}}],["application",{"_index":1774,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":118,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":125,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appuie",{"_index":444,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["apres",{"_index":757,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["après",{"_index":602,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{}}}],["architecte",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1784,"title":{},"body":{"index.html":{}}}],["artistique",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assimilés",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assistance",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assistant",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associées",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assujetties",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assujettis",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atteind",{"_index":1348,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["atteindre",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["attend",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["attendre",{"_index":1500,"title":{},"body":{"injectables/UserService.html":{}}}],["attrape",{"_index":1366,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["attribut",{"_index":749,"title":{},"body":{"components/DirectoryComponent.html":{},"components/RegisterComponent.html":{}}}],["attributs",{"_index":1233,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["au",{"_index":337,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["audiovisuel",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aura",{"_index":1504,"title":{},"body":{"injectables/UserService.html":{}}}],["auteur",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":225,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorisation",{"_index":1352,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["auto",{"_index":480,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{},"components/UserModalComponent.html":{}}}],["automatically",{"_index":1775,"title":{},"body":{"index.html":{}}}],["automatiques",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automobiles",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autre",{"_index":1146,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["autres",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aux",{"_index":1232,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["auxiliaires",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1810,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["avataruser",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["avec",{"_index":693,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"components/WeatherModalComponent.html":{}}}],["avoir",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["aéronautique",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aéroportuaire",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":333,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["backendservice",{"_index":262,"title":{"injectables/BackendService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["background",{"_index":466,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["badrequest",{"_index":1373,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bar",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["bar'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["bar.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":497,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["bar.component.scss",{"_index":496,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["bar.component.ts",{"_index":495,"title":{},"body":{"components/ChatTopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:15",{"_index":502,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["bar.component.ts:16",{"_index":501,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["bar.component.ts:20",{"_index":503,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["bar/chat",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/ChatTopBarComponent.html":{},"coverage.html":{}}}],["barre",{"_index":569,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["base",{"_index":331,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{}}}],["bases",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1690,"title":{},"body":{"injectables/WeatherService.html":{}}}],["bd",{"_index":1185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bearer",{"_index":356,"title":{},"body":{"injectables/BackendService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{}}}],["beaut",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":1497,"title":{},"body":{"injectables/UserService.html":{}}}],["bert",{"_index":1580,"title":{},"body":{"components/WeatherComponent.html":{}}}],["between",{"_index":1287,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["bic",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bien",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bijoux",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billets",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bnc",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":1181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bois",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bon",{"_index":1387,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"classes/Role.html":{},"classes/User.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":650,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["bouchers",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boulangers",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bout",{"_index":434,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["bouton",{"_index":445,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserModalComponent.html":{}}}],["break",{"_index":1376,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["brevet",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bricolage",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":1808,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1783,"title":{},"body":{"index.html":{}}}],["bulletins",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["business",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":813,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["bâtiments",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c'est",{"_index":587,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["calcul",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate:[authguard",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":1200,"title":{},"body":{"components/RegisterComponent.html":{}}}],["capabilities",{"_index":1799,"title":{},"body":{"index.html":{}}}],["capitaine",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["car",{"_index":1353,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["caractere",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["caricaturiste",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cartographe",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1371,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["catcherror",{"_index":1325,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["catcherror((error",{"_index":1368,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["catégorie",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ce",{"_index":838,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["center",{"_index":657,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{}}}],["ces",{"_index":1254,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["cet",{"_index":610,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["cette",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"classes/Role.html":{},"injectables/TokenService.html":{},"classes/User.html":{}}}],["ceux",{"_index":1252,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["chaine",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["change",{"_index":1777,"title":{},"body":{"index.html":{}}}],["chaque",{"_index":1144,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["charcutiers",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charg",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charpentier",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chat",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["chat'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["chat.component.html",{"_index":371,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":370,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.guard",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chat.herokuapp.com",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chatchat",{"_index":872,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["chatcomponent",{"_index":74,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatguard",{"_index":227,"title":{"guards/ChatGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ChatGuard.html":{},"coverage.html":{}}}],["chatroom",{"_index":454,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["chatroomcomponent",{"_index":76,"title":{"components/ChatRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":389,"title":{"injectables/ChatService.html":{}},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"coverage.html":{}}}],["chattopbarcomponent",{"_index":79,"title":{"components/ChatTopBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatuserlistcomponent",{"_index":82,"title":{"components/ChatUserListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatusermodalcomponent",{"_index":85,"title":{"components/ChatUserModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chauffeurs",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":1804,"title":{},"body":{"index.html":{}}}],["chef",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chefs",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chemin",{"_index":808,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["children",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chip.name",{"_index":1201,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chipl",{"_index":474,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["chipr",{"_index":481,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["chirurgical",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chocolatiers",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choice",{"_index":1794,"title":{},"body":{"index.html":{}}}],["choisi",{"_index":684,"title":{},"body":{"components/ChatUserModalComponent.html":{},"injectables/UserService.html":{}}}],["choisir",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["chose",{"_index":31,"title":{},"body":{"pipes/AgePipe.html":{},"interceptors/TokenInterceptor.html":{}}}],["ciseleur",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":1118,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["class",{"_index":26,"title":{"classes/Directory.html":{},"classes/Message.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"classes/User.html":{}},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":719,"title":{},"body":{"classes/Directory.html":{},"injectables/GlobalHttpService.html":{},"classes/Message.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"classes/User.html":{},"overview.html":{}}}],["cle",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["clean",{"_index":363,"title":{},"body":{"injectables/BackendService.html":{}}}],["cleartoken",{"_index":302,"title":{},"body":{"injectables/BackendService.html":{}}}],["cli",{"_index":1766,"title":{},"body":{"index.html":{}}}],["cliqu",{"_index":590,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["cliquer",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["clone",{"_index":1346,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["clone=request",{"_index":1380,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["clone=requete.clone",{"_index":1381,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["cloner",{"_index":1351,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["close",{"_index":1663,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["cluster_appmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["clés",{"_index":1166,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coach",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1462,"title":{},"body":{"components/UserModalComponent.html":{},"index.html":{}}}],["coiffeurs",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cole",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":475,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["color:#83b9ff",{"_index":482,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["coloriste",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":464,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["command",{"_index":1795,"title":{},"body":{"index.html":{}}}],["comme",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["commerce",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commercial",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commerciaux",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commissions",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common:'nompays",{"_index":1147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["communication",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compagnie",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["competence",{"_index":1136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["component",{"_index":45,"title":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["components",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"overview.html":{}}}],["components/chat",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/chat/chat.component",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/directory/directory.component",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/finder/finder.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/overview/overview.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/profil/profil.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/register/register.component",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/side",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user/user.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/weather/weather.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["compris",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comptable",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compte",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["concepteur",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concessionnaires",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":1210,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirme",{"_index":1194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmer",{"_index":1205,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpass",{"_index":1155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1112,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confiseurs",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confort",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conférence",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conférencier",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{}}}],["connecte",{"_index":353,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["connexion",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["consectetur",{"_index":631,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["conseil",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conserver",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(\"stor",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('envoyer",{"_index":1184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('token",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log('user",{"_index":1533,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(clone",{"_index":1358,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["console.log(data",{"_index":767,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["console.log(form",{"_index":1178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(job",{"_index":855,"title":{},"body":{"components/FinderComponent.html":{}}}],["console.log(request.url",{"_index":1347,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["console.log(response",{"_index":584,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(responsefrommodal",{"_index":761,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["console.log(responsefromservergps",{"_index":1651,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["console.log(resultfromweathermodal",{"_index":1602,"title":{},"body":{"components/WeatherComponent.html":{}}}],["console.log(this._http.get(this.url",{"_index":1610,"title":{},"body":{"components/WeatherComponent.html":{}}}],["console.log(this.data",{"_index":1450,"title":{},"body":{"components/UserModalComponent.html":{}}}],["console.log(this.directories",{"_index":751,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["console.log(this.infos",{"_index":681,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["console.log(this.option",{"_index":1134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.profilform.value",{"_index":1167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.userform.value",{"_index":1182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(value.data",{"_index":1440,"title":{},"body":{"components/UserComponent.html":{}}}],["console.warn(\"chat",{"_index":423,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["console.warn(\"info",{"_index":424,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["console.warn(\"test\"+this.test",{"_index":508,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["console.warn(data",{"_index":715,"title":{},"body":{"injectables/DataService.html":{}}}],["console.warn(event",{"_index":447,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["console.warn(response",{"_index":506,"title":{},"body":{"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{}}}],["console.warn(response.value",{"_index":418,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["console.warn(this.myprofil",{"_index":565,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["console.warn(this.users",{"_index":568,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["console.warn(val",{"_index":563,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["consommer",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["constante",{"_index":1591,"title":{},"body":{"components/WeatherComponent.html":{}}}],["construction",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["constructor(@inject(data",{"_index":713,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":680,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/UserModalComponent.html":{}}}],["constructor(_backend",{"_index":1015,"title":{},"body":{"components/OverviewComponent.html":{},"components/ProfilComponent.html":{}}}],["constructor(_backendservice",{"_index":1312,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["constructor(_fb",{"_index":779,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["constructor(_http",{"_index":308,"title":{},"body":{"injectables/BackendService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{}}}],["constructor(_matdialog",{"_index":737,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["constructor(_route",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_userservice",{"_index":386,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{}}}],["constructor(_weatherservice",{"_index":1572,"title":{},"body":{"components/WeatherComponent.html":{}}}],["constructor(data",{"_index":1217,"title":{},"body":{"classes/ResponseApiUser.html":{},"components/UserModalComponent.html":{}}}],["constructor(data:user",{"_index":1220,"title":{},"body":{"classes/ResponseApiUser.html":{}}}],["constructor(infos",{"_index":667,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["constructor(isadmin",{"_index":1225,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["constructor(nom",{"_index":724,"title":{},"body":{"classes/Directory.html":{}}}],["constructor(private",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(protected",{"_index":895,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["constructor(route",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(userservice",{"_index":1431,"title":{},"body":{"components/UserComponent.html":{}}}],["construis",{"_index":1101,"title":{},"body":{"components/RegisterComponent.html":{}}}],["construit",{"_index":1386,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["consultant",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["container",{"_index":637,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{}}}],["content",{"_index":655,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{}}}],["content?:string",{"_index":1010,"title":{},"body":{"classes/Message.html":{}}}],["contenue",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["contrat",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["convertit",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["coordinateur",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coordonnee.jobtitle",{"_index":1040,"title":{},"body":{"components/ProfilComponent.html":{}}}],["coordonnee.location",{"_index":1042,"title":{},"body":{"components/ProfilComponent.html":{}}}],["coordonnee.rating",{"_index":1039,"title":{},"body":{"components/ProfilComponent.html":{}}}],["coordonnee.societyname",{"_index":1037,"title":{},"body":{"components/ProfilComponent.html":{}}}],["coordonnee.wage",{"_index":1041,"title":{},"body":{"components/ProfilComponent.html":{}}}],["coordonnées",{"_index":1643,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["copie",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["copiste",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correction",{"_index":1129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["correspondants",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countriename.name.common",{"_index":1149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["countries",{"_index":1048,"title":{},"body":{"components/RegisterComponent.html":{}}}],["countriesfiltre",{"_index":1049,"title":{},"body":{"components/RegisterComponent.html":{}}}],["country",{"_index":1116,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["courant",{"_index":1021,"title":{},"body":{"components/OverviewComponent.html":{}}}],["cours",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courses",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courtiers",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["couvreur",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1709,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1581,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["create",{"_index":807,"title":{},"body":{"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{}}}],["create_new_folder",{"_index":768,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["cree",{"_index":892,"title":{},"body":{"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"components/WeatherComponent.html":{}}}],["critures",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["croisés",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["créateur",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["créer",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["cuir",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":1473,"title":{},"body":{"injectables/UserService.html":{}}}],["céramiste",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'abord",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["d'alarme",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'animaux",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'art",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'autres",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'enquête",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'entreprise",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'exposition",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'intérieur",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'invention",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'oeuvre",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'ordinateurs",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'origine",{"_index":578,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["d'utilisateur",{"_index":1203,"title":{},"body":{"components/RegisterComponent.html":{}}}],["d'échecs",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'électrocardiologie",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'équipements",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d\\'utilisateur",{"_index":1213,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dans",{"_index":427,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["danse",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":498,"title":{},"body":{"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["data.dateofbirth",{"_index":1468,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.description",{"_index":766,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["data.first_name",{"_index":509,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["data.infos.city",{"_index":1466,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.country",{"_index":1467,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.dateofbirth",{"_index":1458,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.email",{"_index":1459,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.firstname",{"_index":1454,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.lastname",{"_index":1455,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.street",{"_index":1461,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.username",{"_index":1457,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.infos.zipcode",{"_index":1464,"title":{},"body":{"components/UserModalComponent.html":{}}}],["data.last_name",{"_index":510,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["data.path",{"_index":765,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["data:user",{"_index":1219,"title":{},"body":{"classes/ResponseApiUser.html":{}}}],["data:{index:user",{"_index":600,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["datagps",{"_index":1617,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["datalogin",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["dataservice",{"_index":698,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["datauser",{"_index":1430,"title":{},"body":{"components/UserComponent.html":{}}}],["date",{"_index":995,"title":{},"body":{"classes/Message.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["date().getfullyear",{"_index":40,"title":{},"body":{"pipes/AgePipe.html":{}}}],["date(value).getfullyear",{"_index":38,"title":{},"body":{"pipes/AgePipe.html":{}}}],["date?:date",{"_index":1009,"title":{},"body":{"classes/Message.html":{}}}],["dateofbirth",{"_index":1113,"title":{},"body":{"components/RegisterComponent.html":{},"classes/User.html":{}}}],["dateofbirth?:string",{"_index":1245,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["date|age",{"_index":1209,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dd/mm/yyyy",{"_index":1469,"title":{},"body":{"components/UserModalComponent.html":{}}}],["ddd",{"_index":467,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["de",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["debut",{"_index":1362,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["declarations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":1096,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["decoration",{"_index":1291,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["decorators",{"_index":674,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defaut",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{},"components/WeatherComponent.html":{}}}],["defined",{"_index":13,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["dehors",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deja",{"_index":1505,"title":{},"body":{"injectables/UserService.html":{}}}],["delay",{"_index":1628,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["delay(2500",{"_index":1648,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["delete_forever",{"_index":1196,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dependencies",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":555,"title":{},"body":{"components/ChatUserListComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":722,"title":{},"body":{"classes/Directory.html":{},"components/DirectoryModalComponent.html":{}}}],["designer",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dessin",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dessinateur",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deux",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["deuxieme",{"_index":1665,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["dev",{"_index":1771,"title":{},"body":{"index.html":{}}}],["development",{"_index":1767,"title":{},"body":{"index.html":{}}}],["devient",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["devine",{"_index":1228,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["dialcode",{"_index":1243,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["dialog_data",{"_index":1448,"title":{},"body":{"components/UserModalComponent.html":{}}}],["dialogref",{"_index":752,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherComponent.html":{}}}],["dialogref.afterclosed().subscribe((responsefrommodal",{"_index":760,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["dialogref.afterclosed().subscribe((resultfromweathermodal",{"_index":1601,"title":{},"body":{"components/WeatherComponent.html":{}}}],["different",{"_index":1160,"title":{},"body":{"components/RegisterComponent.html":{}}}],["digilab",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"index.html":{}}}],["dilogref",{"_index":1662,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["dir",{"_index":802,"title":{},"body":{"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{}}}],["dire",{"_index":607,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["directement",{"_index":343,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["directeur",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":463,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["direction:column",{"_index":1044,"title":{},"body":{"components/ProfilComponent.html":{}}}],["directive",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["directives",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1782,"title":{},"body":{"index.html":{}}}],["directories",{"_index":734,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["directories!:any",{"_index":750,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["directory",{"_index":90,"title":{"classes/Directory.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"index.html":{}}}],["directory'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["directory(data.nom",{"_index":764,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["directory(nom",{"_index":803,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["directory.component.html",{"_index":733,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["directory.component.scss",{"_index":732,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["directorycomponent",{"_index":87,"title":{"components/DirectoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directoryform",{"_index":735,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{}}}],["directorymodalcomponent",{"_index":89,"title":{"components/DirectoryModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directoryservice",{"_index":739,"title":{"injectables/DirectoryService.html":{}},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"coverage.html":{}}}],["dirsubject",{"_index":815,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["display",{"_index":461,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["disposition",{"_index":1393,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dist",{"_index":1786,"title":{},"body":{"index.html":{}}}],["dites",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["divers",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentaliste",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["dois",{"_index":1342,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["doit",{"_index":28,"title":{},"body":{"pipes/AgePipe.html":{}}}],["dolor",{"_index":628,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["dom",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["domicile",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":697,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["donnee",{"_index":1481,"title":{},"body":{"injectables/UserService.html":{}}}],["donnees",{"_index":500,"title":{},"body":{"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{}}}],["donnees.first_name",{"_index":512,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["donnees.last_name",{"_index":513,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["données",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["dont",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drafts",{"_index":1280,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["drawer",{"_index":624,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["driven",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ds",{"_index":856,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["du",{"_index":358,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["duplicata",{"_index":546,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["duplique",{"_index":560,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["duration",{"_index":1162,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dynamic",{"_index":541,"title":{},"body":{"components/ChatUserListComponent.html":{},"dependencies.html":{}}}],["débroussaillage",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["déchets",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["déclare",{"_index":1250,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["décorateur",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["déménagement",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dépendantes",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["déplacements",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dératisation",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["désinfection",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["désinsectisation",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["développeur",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’animaux",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’assurance",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’auto",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’enfant",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’enseignement",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’esthétique",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’information",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’un",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’une",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d’établissements",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":1192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["e2e",{"_index":1792,"title":{},"body":{"index.html":{}}}],["ebéniste",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["economiste",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ecoute",{"_index":1335,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ecrivain",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["educateur",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eee",{"_index":472,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["electricien",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["elle",{"_index":1650,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["email",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["emailleur",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emporter",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["en",{"_index":592,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["encore",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["end",{"_index":470,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["endroit",{"_index":1388,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["enfants",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["enquêteur",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enregistre",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["ensemblier",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":449,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["enteranimationduration",{"_index":754,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["entraineur",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entre",{"_index":446,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["entretien",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":1328,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url}api/users",{"_index":1492,"title":{},"body":{"injectables/UserService.html":{}}}],["envoi",{"_index":835,"title":{},"body":{"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["envoie",{"_index":335,"title":{},"body":{"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["envoyer",{"_index":453,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/UserService.html":{}}}],["equivaut",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["ergonome",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ergotherapeute",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erreur",{"_index":1374,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["erreurs",{"_index":1367,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["error.status",{"_index":1370,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["errorpass",{"_index":1050,"title":{},"body":{"components/RegisterComponent.html":{}}}],["est",{"_index":415,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["esthéticienne",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esthétique",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["et",{"_index":32,"title":{},"body":{"pipes/AgePipe.html":{},"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["etalagiste",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ete",{"_index":404,"title":{},"body":{"components/ChatRoomComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["etes",{"_index":690,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["etudes",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe/berlin",{"_index":1707,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":397,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["event.code",{"_index":448,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["example",{"_index":647,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["execute",{"_index":1790,"title":{},"body":{"index.html":{}}}],["exemple",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["exercent",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exitanimationduration",{"_index":756,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["expert",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exploitants",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":25,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["exporter",{"_index":1383,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["exports",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extends",{"_index":299,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"classes/Role.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["extra",{"_index":632,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["f5f5f5",{"_index":1297,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["fabrication",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faire",{"_index":1592,"title":{},"body":{"components/WeatherComponent.html":{}}}],["fait",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":532,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["faudra",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["faut",{"_index":716,"title":{},"body":{"injectables/DataService.html":{}}}],["favorite",{"_index":1197,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fermer",{"_index":682,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["fermeture",{"_index":603,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["feronnier",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/DirectoryModalComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1778,"title":{},"body":{"index.html":{}}}],["filterdata",{"_index":1057,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filterdata(ladata",{"_index":1066,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filteredoptions",{"_index":1051,"title":{},"body":{"components/RegisterComponent.html":{}}}],["filtervalue",{"_index":866,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["filtr",{"_index":575,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["filtrer",{"_index":859,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["financier",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finder",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["finder'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["finder.component.html",{"_index":846,"title":{},"body":{"components/FinderComponent.html":{}}}],["finder.component.scss",{"_index":845,"title":{},"body":{"components/FinderComponent.html":{}}}],["findercomponent",{"_index":91,"title":{"components/FinderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["first",{"_index":1797,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":1043,"title":{},"body":{"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["fixes",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":462,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["floatlabeltype",{"_index":1452,"title":{},"body":{"components/UserModalComponent.html":{}}}],["floraux",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fluid",{"_index":1024,"title":{},"body":{"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["flux",{"_index":1502,"title":{},"body":{"injectables/UserService.html":{}}}],["fois",{"_index":1336,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["folder",{"_index":770,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["folder_opendirectory",{"_index":873,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["forestier",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forestiers",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":320,"title":{},"body":{"injectables/BackendService.html":{},"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{}}}],["form.cp",{"_index":1645,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["form.rue",{"_index":1668,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["form.ville",{"_index":1646,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["formarray",{"_index":1090,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formateur",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formation",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":745,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["formcontrol",{"_index":399,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/RegisterComponent.html":{}}}],["formdirectory",{"_index":827,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["formgroup",{"_index":744,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["formsmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["formulaire",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["formulaires",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"components/WeatherModalComponent.html":{}}}],["formuser",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["friendid",{"_index":996,"title":{},"body":{"classes/Message.html":{}}}],["friendid?:user",{"_index":1008,"title":{},"body":{"classes/Message.html":{}}}],["friendsid",{"_index":1244,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["fruit",{"_index":1199,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fruits",{"_index":1198,"title":{},"body":{"components/RegisterComponent.html":{}}}],["full",{"_index":812,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["further",{"_index":1800,"title":{},"body":{"index.html":{}}}],["fusion",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fusionner",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["garde",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1780,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1764,"title":{},"body":{"index.html":{}}}],["genere",{"_index":1390,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gestion",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestionnaire",{"_index":1331,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["getcoordinates",{"_index":1676,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcoordinates(rue",{"_index":1678,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcountries",{"_index":701,"title":{},"body":{"injectables/DataService.html":{}}}],["getcountry",{"_index":1186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getdirectory",{"_index":817,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["getdirectory(id",{"_index":822,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["getemail",{"_index":1237,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["getfloatlabelvalue",{"_index":1451,"title":{},"body":{"components/UserModalComponent.html":{}}}],["getitem",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["getlatlong(ville",{"_index":1608,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getmessages",{"_index":487,"title":{},"body":{"injectables/ChatService.html":{}}}],["getmeteo",{"_index":1677,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getmeteo(longitude",{"_index":1681,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getprofile",{"_index":1477,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofile():observable",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["getprofilelist",{"_index":307,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/GlobalHttpService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["getprofileusercurrent",{"_index":303,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["getskills",{"_index":1088,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getter",{"_index":1139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getting",{"_index":1761,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":304,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["gettoken():string",{"_index":1402,"title":{},"body":{"injectables/TokenService.html":{}}}],["getusercurrent",{"_index":409,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/UserService.html":{}}}],["getuserlist",{"_index":566,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/DataService.html":{}}}],["getusers",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserslist",{"_index":1478,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserslist():observable",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":327,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["globalhttpservice",{"_index":300,"title":{"injectables/GlobalHttpService.html":{}},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["globalhttpservice:17",{"_index":324,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["go",{"_index":1803,"title":{},"body":{"index.html":{}}}],["gps",{"_index":1652,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["gps.longitude",{"_index":1656,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["grace",{"_index":1661,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["graph",{"_index":1809,"title":{},"body":{"modules.html":{}}}],["graphiste",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphologue",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group(un",{"_index":1103,"title":{},"body":{"components/RegisterComponent.html":{}}}],["groupes",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":252,"title":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["guide",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gées",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["géobiologiste",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["géologue",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["géomètre",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gérant",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["habillement",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handicapées",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":1344,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["headers",{"_index":354,"title":{},"body":{"injectables/BackendService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":455,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{}}}],["help",{"_index":1801,"title":{},"body":{"index.html":{}}}],["helpers/auth.guard",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["helpers/token.interceptor",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["heritage",{"_index":1126,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["herite",{"_index":1230,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["hero",{"_index":1207,"title":{},"body":{"components/RegisterComponent.html":{}}}],["heure",{"_index":1639,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["hh:mm",{"_index":1470,"title":{},"body":{"components/UserModalComponent.html":{}}}],["hi",{"_index":688,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["hidden",{"_index":645,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{}}}],["historien",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holding",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hommes",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["horizontalposition",{"_index":1161,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hotesse",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["http.service",{"_index":328,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["http.service.ts",{"_index":884,"title":{},"body":{"injectables/GlobalHttpService.html":{},"coverage.html":{}}}],["http.service.ts:17",{"_index":886,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["http.service.ts:9",{"_index":885,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["http://localhost:3000/api/users",{"_index":325,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1773,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1321,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":309,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1322,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpevent",{"_index":1323,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":1318,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":326,"title":{},"body":{"injectables/BackendService.html":{},"components/LoginComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["httpheaders().append(\"authorization",{"_index":355,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["httpheaders({'myheader",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":1324,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpparams",{"_index":1689,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparams().append(\"q",{"_index":1697,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httprequest",{"_index":1316,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["https://api",{"_index":1586,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["https://api.open",{"_index":1686,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://geocoding",{"_index":1691,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://official",{"_index":489,"title":{},"body":{"injectables/ChatService.html":{}}}],["https://picsum.photos/200",{"_index":1100,"title":{},"body":{"components/RegisterComponent.html":{}}}],["https://reqres.in/api/posts",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["https://reqres.in/api/users",{"_index":829,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["https://restcountries.com/v3.1/all",{"_index":703,"title":{},"body":{"injectables/DataService.html":{}}}],["huissieur",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["héritent",{"_index":889,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["ici",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["iciici",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["id",{"_index":824,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["id:[this.getrandominit",{"_index":792,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/WeatherModalComponent.html":{}}}],["identifiant",{"_index":1375,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["identifier",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":712,"title":{},"body":{"injectables/DataService.html":{},"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["il",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":877,"title":{},"body":{"components/FinderComponent.html":{}}}],["img",{"_index":879,"title":{},"body":{"components/FinderComponent.html":{},"components/WeatherComponent.html":{}}}],["imgurl",{"_index":1249,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["implemente",{"_index":832,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["implementer",{"_index":1236,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["implements",{"_index":27,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"index.html":{}}}],["import",{"_index":22,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["important",{"_index":880,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["importe",{"_index":1098,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["importer",{"_index":833,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["impose",{"_index":1680,"title":{},"body":{"injectables/WeatherService.html":{}}}],["imposer",{"_index":839,"title":{},"body":{"injectables/DirectoryService.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["inbox",{"_index":1277,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["index",{"_index":60,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["indique",{"_index":361,"title":{},"body":{"injectables/BackendService.html":{}}}],["industriel",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["industrielle",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indépendant",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["infographiste",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["informations",{"_index":1202,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["informatique",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infos",{"_index":336,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"components/WeatherModalComponent.html":{}}}],["infos.user.email",{"_index":696,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["infos.user.firstname",{"_index":694,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["infos.user.lastname",{"_index":695,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["infos:any",{"_index":677,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["infouser",{"_index":382,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["inférence",{"_index":1227,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["ingénieur",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inherit",{"_index":1299,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["inherited",{"_index":323,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["initialise",{"_index":707,"title":{},"body":{"injectables/DataService.html":{},"injectables/UserService.html":{}}}],["initialiser",{"_index":789,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":548,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":675,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["injectable",{"_index":276,"title":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":297,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["injecte",{"_index":1694,"title":{},"body":{"injectables/WeatherService.html":{}}}],["input",{"_index":406,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{}}}],["inputs",{"_index":499,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["inscrire",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["inserer",{"_index":1343,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["installation",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installer",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["instancie",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["intercept",{"_index":1311,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":1315,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercepte",{"_index":1339,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":1307,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1309,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercpteur",{"_index":1384,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":1239,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["interfaces",{"_index":1255,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["intermédiaires",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internet",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interprète",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inventeur",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inventoriste",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["investigateur",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["io",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["ipsum",{"_index":627,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["isactive",{"_index":1035,"title":{},"body":{"components/ProfilComponent.html":{}}}],["isadmin",{"_index":1224,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["isloggedin",{"_index":1242,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["isobservable",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["iswait",{"_index":1618,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["item.description",{"_index":773,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["item.email",{"_index":636,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["item.first_name",{"_index":689,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["item.firstname",{"_index":634,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["item.lastname",{"_index":635,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["item.nom",{"_index":771,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["item.path",{"_index":772,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["item.punchline",{"_index":452,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["item.setup",{"_index":451,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["item.tolocalelowercase().indexof(ladata.tolowercase",{"_index":1152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["item:hover",{"_index":1288,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["items",{"_index":656,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["iuser",{"_index":1256,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["j'ai",{"_index":589,"title":{},"body":{"components/ChatUserListComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["j'ecris",{"_index":571,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["j'envoi",{"_index":612,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["j'envoie",{"_index":683,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["j'initialise",{"_index":1590,"title":{},"body":{"components/WeatherComponent.html":{}}}],["j'utilise",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["jardinage",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["je",{"_index":577,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["job",{"_index":852,"title":{},"body":{"components/FinderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobs",{"_index":875,"title":{},"body":{"components/FinderComponent.html":{}}}],["joke",{"_index":490,"title":{},"body":{"injectables/ChatService.html":{}}}],["joueur",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["journaliste",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["journaux",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["json.parse(localstorage.getitem('digichat",{"_index":1403,"title":{},"body":{"injectables/TokenService.html":{}}}],["json.parse(newdata",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["json.parse(newtoken",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(datalogin",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(user",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["judiciaire",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["justice",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["justify",{"_index":658,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherComponent.html":{}}}],["karma",{"_index":1791,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":395,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["kiosques",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["l'abonnement",{"_index":1435,"title":{},"body":{"components/UserComponent.html":{}}}],["l'adresse",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["l'api",{"_index":544,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["l'attribut",{"_index":708,"title":{},"body":{"injectables/DataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["l'email",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["l'heure",{"_index":1637,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["l'info",{"_index":613,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["l'input",{"_index":407,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["l'objet",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["l'observable",{"_index":553,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["l'on",{"_index":891,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["l'url",{"_index":705,"title":{},"body":{"injectables/DataService.html":{},"injectables/DirectoryService.html":{}}}],["l'utilisateur",{"_index":403,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserModalComponent.html":{},"components/OverviewComponent.html":{},"injectables/UserService.html":{}}}],["la",{"_index":349,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["ladata",{"_index":1068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["langues",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":1108,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["latitude",{"_index":1623,"title":{},"body":{"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["laveries",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["le",{"_index":34,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["leader",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lecteur",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":465,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["left'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["left.component",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["left.component.html",{"_index":1273,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["left.component.scss",{"_index":1272,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["left.component.ts",{"_index":1271,"title":{},"body":{"components/SideBarLeftComponent.html":{},"coverage.html":{}}}],["left.component.ts:10",{"_index":1274,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["left.component.ts:13",{"_index":1275,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["left/side",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarLeftComponent.html":{},"coverage.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["les",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["leur",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leurs",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libres",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libérale",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["licier",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lien",{"_index":836,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["ligne",{"_index":1171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["lignes",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["list",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["list'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["list.component",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":516,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.scss",{"_index":515,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts",{"_index":514,"title":{},"body":{"components/ChatUserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:108",{"_index":529,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:20",{"_index":533,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:22",{"_index":531,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:25",{"_index":535,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:27",{"_index":530,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:32",{"_index":534,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:34",{"_index":526,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list.component.ts:39",{"_index":527,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["list/chat",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatUserListComponent.html":{},"coverage.html":{}}}],["liste",{"_index":554,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["littéraire",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["livraison",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local_post_office",{"_index":1034,"title":{},"body":{"components/ProfilComponent.html":{}}}],["localisation",{"_index":1673,"title":{},"body":{"injectables/WeatherService.html":{}}}],["localit",{"_index":1671,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["localstorage",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('token",{"_index":347,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('user",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.getitem('user')?.tostring",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem('digichat",{"_index":364,"title":{},"body":{"injectables/BackendService.html":{}}}],["localstorage.setitem('digichat",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["localstorage.setitem('user",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":234,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["login(loginvalues",{"_index":1484,"title":{},"body":{"injectables/UserService.html":{}}}],["login(loginvalues:any):observable",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.html",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":93,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginvalues",{"_index":1486,"title":{},"body":{"injectables/UserService.html":{}}}],["logistique",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":1023,"title":{},"body":{"components/OverviewComponent.html":{}}}],["loguer",{"_index":583,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["longitude",{"_index":1622,"title":{},"body":{"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["lorem",{"_index":626,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["loterie",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loto",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l’impôt",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ma",{"_index":1599,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["mail",{"_index":1193,"title":{},"body":{"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/UserModalComponent.html":{}}}],["mailvalue",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["mains",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maintenance",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maison",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maitre",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage_accountsprofil",{"_index":1283,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["management",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mandataires",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manipulateur",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mannequin",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manutentionnaires",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":850,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["map((response",{"_index":1532,"title":{},"body":{"injectables/UserService.html":{}}}],["map(value",{"_index":863,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["maquettiste",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["march",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marchands",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marchés",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":775,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherModalComponent.html":{}}}],["margin:0",{"_index":638,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["maritime",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marketing",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["master",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat",{"_index":881,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["mat_dialog_data",{"_index":536,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["matautocompletemodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":44,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipinputevent",{"_index":1091,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matchipsmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":525,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{}}}],["matdialogmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/DirectoryComponent.html":{}}}],["matdialogref",{"_index":669,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["matdrawer",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfield",{"_index":786,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["matformfieldmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor(math.random",{"_index":438,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["maticonmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["matsnackbarmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":811,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["maçon",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["membre",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meme",{"_index":894,"title":{},"body":{"injectables/GlobalHttpService.html":{},"components/WeatherModalComponent.html":{}}}],["menu",{"_index":870,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["menuisier",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mere",{"_index":1127,"title":{},"body":{"components/RegisterComponent.html":{}}}],["message",{"_index":991,"title":{"classes/Message.html":{}},"body":{"classes/Message.html":{},"classes/Role.html":{},"classes/Room.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["messagesid",{"_index":1261,"title":{},"body":{"classes/Room.html":{}}}],["met",{"_index":841,"title":{},"body":{"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["meteo",{"_index":1571,"title":{},"body":{"components/WeatherComponent.html":{}}}],["meteo.com/v1/forecast",{"_index":1687,"title":{},"body":{"injectables/WeatherService.html":{}}}],["meteo.com/v1/search?name",{"_index":1693,"title":{},"body":{"injectables/WeatherService.html":{}}}],["meteo.cp",{"_index":1613,"title":{},"body":{"components/WeatherComponent.html":{}}}],["meteo.rue",{"_index":1612,"title":{},"body":{"components/WeatherComponent.html":{}}}],["meteo.temperature",{"_index":1615,"title":{},"body":{"components/WeatherComponent.html":{}}}],["meteo.ville",{"_index":1614,"title":{},"body":{"components/WeatherComponent.html":{}}}],["methode",{"_index":408,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["methodes",{"_index":1251,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["methods",{"_index":10,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["mettant",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mettre",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["min",{"_index":477,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/DirectoryModalComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherModalComponent.html":{}}}],["miscellaneous",{"_index":1816,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["moa",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherComponent.html":{}}}],["modal.component.html",{"_index":663,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component.scss",{"_index":662,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component.ts",{"_index":661,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:11",{"_index":670,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["modal.component.ts:13",{"_index":1446,"title":{},"body":{"components/UserModalComponent.html":{}}}],["modal.component.ts:15",{"_index":676,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component.ts:16",{"_index":785,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/UserModalComponent.html":{}}}],["modal.component.ts:17",{"_index":671,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1447,"title":{},"body":{"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal.component.ts:20",{"_index":784,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1624,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["modal.component.ts:22",{"_index":673,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["modal.component.ts:23",{"_index":781,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1620,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["modal.component.ts:28",{"_index":1625,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["modal.component.ts:29",{"_index":672,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1621,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["modal.component.ts:36",{"_index":783,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["modal.component.ts:47",{"_index":782,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modal/chat",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"coverage.html":{}}}],["modal/directory",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"coverage.html":{}}}],["modal/user",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"coverage.html":{}}}],["modal/weather",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["modale",{"_index":595,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["modalref",{"_index":597,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["modalref.afterclosed().subscribe((responsefrommodal",{"_index":605,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["modals/chat",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/ChatUserListComponent.html":{}}}],["modals/directory",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/DirectoryComponent.html":{}}}],["modals/user",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["modals/weather",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":622,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["model",{"_index":747,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["model.ts",{"_index":721,"title":{},"body":{"classes/Directory.html":{},"coverage.html":{}}}],["model.ts:2",{"_index":726,"title":{},"body":{"classes/Directory.html":{}}}],["model.ts:3",{"_index":727,"title":{},"body":{"classes/Directory.html":{}}}],["model.ts:4",{"_index":725,"title":{},"body":{"classes/Directory.html":{}}}],["modelage",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/directory",{"_index":831,"title":{},"body":{"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["models/response",{"_index":1499,"title":{},"body":{"injectables/UserService.html":{}}}],["models/user",{"_index":329,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["modifier",{"_index":1341,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["module",{"_index":117,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modèle",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modéliste",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mon",{"_index":1102,"title":{},"body":{"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["moniteur",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["montagne",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1802,"title":{},"body":{"index.html":{}}}],["mosaiste",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mot",{"_index":1204,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["motocycles",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mots",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moyenne",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":1395,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["musicothérapeute",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["musique",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mycontrol",{"_index":1052,"title":{},"body":{"components/RegisterComponent.html":{}}}],["myheaders",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["myobject",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["myprofil",{"_index":517,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{}}}],["myprofil!:any",{"_index":1032,"title":{},"body":{"components/ProfilComponent.html":{}}}],["myprofil.firstname",{"_index":619,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["myprofil.lastname",{"_index":620,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["médecin",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["médiateur",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["médical",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ménagers",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["méteo",{"_index":1611,"title":{},"body":{"components/WeatherComponent.html":{}}}],["méthode",{"_index":339,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"injectables/TokenService.html":{}}}],["métreur",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n'avez",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["n'implemente",{"_index":1258,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["n'êtes",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["n\\'avez",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["nageur",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naissance",{"_index":1208,"title":{},"body":{"components/RegisterComponent.html":{}}}],["name",{"_index":8,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["nationale",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naturaliste",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naturopathe",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["naval",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navbar",{"_index":1025,"title":{},"body":{"components/OverviewComponent.html":{}}}],["navigate",{"_index":1772,"title":{},"body":{"index.html":{}}}],["ne",{"_index":1354,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["need",{"_index":1796,"title":{},"body":{"index.html":{}}}],["nettoyage",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":37,"title":{},"body":{"pipes/AgePipe.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["newmessage",{"_index":383,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["newobject",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["newtkn",{"_index":346,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["newtkn.token",{"_index":1404,"title":{},"body":{"injectables/TokenService.html":{}}}],["newtoken",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":1317,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["next.handle(clone",{"_index":1382,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(clone).pipe",{"_index":1364,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":1363,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":372,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["ngx",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["nom",{"_index":723,"title":{},"body":{"classes/Directory.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":1292,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["noteur",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notifications_active",{"_index":1281,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["notre",{"_index":344,"title":{},"body":{"injectables/BackendService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{}}}],["nous",{"_index":893,"title":{},"body":{"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"injectables/WeatherService.html":{}}}],["nouveau",{"_index":1145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nouvel",{"_index":1097,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nouvelle",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["now",{"_index":1638,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["now.gethours",{"_index":1640,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["null",{"_index":317,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["number",{"_index":21,"title":{},"body":{"pipes/AgePipe.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["nutritionniste",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["négociants",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n’exercent",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this.user",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["objet",{"_index":345,"title":{},"body":{"injectables/BackendService.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{}}}],["objets",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["obligatoire",{"_index":1257,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"components/WeatherModalComponent.html":{}}}],["oblige",{"_index":1235,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["obliger",{"_index":1503,"title":{},"body":{"injectables/UserService.html":{}}}],["observable",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["observe",{"_index":1537,"title":{},"body":{"injectables/UserService.html":{}}}],["occultes",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["oncancel",{"_index":665,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["onclick",{"_index":384,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["onclosemodal",{"_index":777,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["ondisconect",{"_index":1014,"title":{},"body":{"components/OverviewComponent.html":{}}}],["oninit",{"_index":369,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["onopenmodal",{"_index":523,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["onopenmodal(i:number",{"_index":593,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["onopenmodal(user",{"_index":528,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["onsendmessage",{"_index":385,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["onsendmessage(event",{"_index":394,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["onsubmit",{"_index":778,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["onvalidate",{"_index":666,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["open(nommodat",{"_index":596,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["opendialog",{"_index":736,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["opened",{"_index":847,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["opened=false",{"_index":854,"title":{},"body":{"components/FinderComponent.html":{}}}],["opened=true",{"_index":1019,"title":{},"body":{"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["operateur",{"_index":1365,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["option",{"_index":1053,"title":{},"body":{"components/RegisterComponent.html":{}}}],["option.tolowercase().includes(filtervalue",{"_index":869,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["optional",{"_index":18,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":1054,"title":{},"body":{"components/RegisterComponent.html":{}}}],["organisation",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ostéopathe",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ou",{"_index":591,"title":{},"body":{"components/ChatUserListComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["ouvre",{"_index":594,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["ouvrir",{"_index":1594,"title":{},"body":{"components/WeatherComponent.html":{}}}],["overflow",{"_index":641,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{}}}],["overview",{"_index":238,"title":{"overview.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/OverviewComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["overview.component.html",{"_index":1013,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1012,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview/register",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcomponent",{"_index":95,"title":{"components/OverviewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ownersid",{"_index":1262,"title":{},"body":{"classes/Room.html":{}}}],["package",{"_index":1740,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packager",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["padding",{"_index":659,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{}}}],["padding:0",{"_index":640,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["page",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["panelclass",{"_index":1163,"title":{},"body":{"components/RegisterComponent.html":{}}}],["par",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DirectoryService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{}}}],["param",{"_index":1695,"title":{},"body":{"injectables/WeatherService.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["parametre",{"_index":586,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/UserService.html":{}}}],["params",{"_index":1700,"title":{},"body":{"injectables/WeatherService.html":{}}}],["paramsdata",{"_index":1696,"title":{},"body":{"injectables/WeatherService.html":{}}}],["paramsweather",{"_index":1701,"title":{},"body":{"injectables/WeatherService.html":{}}}],["parapsychologiques",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":679,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["parler",{"_index":692,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["partout",{"_index":1394,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pas",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["passe",{"_index":1159,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["password",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["path",{"_index":232,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Directory.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["patternvalidator",{"_index":787,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["paul",{"_index":1579,"title":{},"body":{"components/WeatherComponent.html":{}}}],["pays",{"_index":860,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{},"components/UserModalComponent.html":{}}}],["paysagiste",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peintre",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permet",{"_index":340,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{}}}],["person_searchfinder",{"_index":874,"title":{},"body":{"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["personne",{"_index":350,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/TokenService.html":{}}}],["personnes",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petit",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petits",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peut",{"_index":1340,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["pharmacie",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":1124,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["photographe",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photographiques",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photojournalisme",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photos",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pigiste",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilote",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":0,"title":{"pipes/AgePipe.html":{}},"body":{"pipes/AgePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(take(1",{"_index":1647,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["pipes",{"_index":2,"title":{},"body":{"pipes/AgePipe.html":{}}}],["pipes/age.pipe",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":23,"title":{},"body":{"pipes/AgePipe.html":{}}}],["pizza",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placiers",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1793,"title":{},"body":{"index.html":{}}}],["platformbrowserdynamic",{"_index":540,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["plats",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plombier",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plusieurs",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["poissonnier",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popperjs/core",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["porteurs",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["positionne",{"_index":1333,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["possible",{"_index":1660,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["post(urlapi",{"_index":837,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["postale",{"_index":1463,"title":{},"body":{"components/UserModalComponent.html":{}}}],["postdata",{"_index":818,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["postdata(ce",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["postdata(formdirectory",{"_index":825,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["postdata(formuser",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["postes",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postloginuser",{"_index":305,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["postloginuser(form",{"_index":318,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["postuser",{"_index":306,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["postuser(form",{"_index":321,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["potier",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pour",{"_index":332,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["pouvoir",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["pratique",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prenom",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["pres",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["presse",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prestations",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["principale",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["priv",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["prochain",{"_index":1501,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produits",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professeur",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profession",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnel",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professionnelle",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["profil'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["profil.component.html",{"_index":1029,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profil.component.scss",{"_index":1028,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profil.confirmpassword",{"_index":1156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["profil.password",{"_index":1154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["profilcomponent",{"_index":97,"title":{"components/ProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":359,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{},"components/SideBarLeftComponent.html":{},"injectables/TokenService.html":{}}}],["profileuser",{"_index":518,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["project",{"_index":1763,"title":{},"body":{"index.html":{}}}],["projet",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projeteur",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promenade",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["properties",{"_index":61,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"properties.html":{}}}],["propiete",{"_index":1140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["propriete",{"_index":1349,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["propriétaires",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":887,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["provide",{"_index":1389,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["provider",{"_index":1385,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["providers",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["préalable",{"_index":412,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["prédicateur",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prénom",{"_index":1033,"title":{},"body":{"components/ProfilComponent.html":{},"components/UserModalComponent.html":{}}}],["préparation",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prêts",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pseudo",{"_index":1456,"title":{},"body":{"components/UserModalComponent.html":{}}}],["psychanalyste",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psychologue",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psychomotricien",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psychosociologue",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["psychothérapeute",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":664,"title":{},"body":{"components/ChatUserModalComponent.html":{},"classes/Directory.html":{},"components/DirectoryModalComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/User.html":{},"components/UserModalComponent.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["publicit",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publiques",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["punchline",{"_index":440,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["push",{"_index":426,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/RegisterComponent.html":{}}}],["pâtissiers",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pénal",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qa",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qd",{"_index":1669,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["qu'il",{"_index":1360,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["qu'on",{"_index":608,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["qualit",{"_index":1211,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"miscellaneous/variables.html":{}}}],["qualites",{"_index":1195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["quand",{"_index":443,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["que",{"_index":588,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryComponent.html":{},"injectables/GlobalHttpService.html":{},"components/WeatherComponent.html":{}}}],["quel",{"_index":362,"title":{},"body":{"injectables/BackendService.html":{}}}],["quelque",{"_index":30,"title":{},"body":{"pipes/AgePipe.html":{},"interceptors/TokenInterceptor.html":{}}}],["qui",{"_index":351,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["rafting",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ramonage",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":993,"title":{},"body":{"classes/Message.html":{},"classes/Role.html":{},"classes/Room.html":{},"classes/User.html":{}}}],["reagi",{"_index":410,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["reagis",{"_index":1600,"title":{},"body":{"components/WeatherComponent.html":{}}}],["receivedmessagesid",{"_index":1241,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["recherche",{"_index":542,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"miscellaneous/variables.html":{}}}],["recois",{"_index":1598,"title":{},"body":{"components/WeatherComponent.html":{}}}],["recoit",{"_index":1094,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["recu",{"_index":547,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/WeatherModalComponent.html":{}}}],["recuper",{"_index":1636,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["recupere",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["recuperer",{"_index":678,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{}}}],["red",{"_index":1164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirige",{"_index":365,"title":{},"body":{"injectables/BackendService.html":{},"components/LoginComponent.html":{}}}],["reference",{"_index":1805,"title":{},"body":{"index.html":{}}}],["register",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["register(registervalues",{"_index":1487,"title":{},"body":{"injectables/UserService.html":{}}}],["register(registervalues:user):observable",{"_index":1535,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":1047,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1046,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.ts",{"_index":898,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["registercomponent",{"_index":99,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registervalues",{"_index":1489,"title":{},"body":{"injectables/UserService.html":{}}}],["relationnelle",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relieur",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":1776,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["removeskill",{"_index":1058,"title":{},"body":{"components/RegisterComponent.html":{}}}],["removeskill(skillindex",{"_index":1071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["renvoi",{"_index":1359,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["renvoie",{"_index":1169,"title":{},"body":{"components/RegisterComponent.html":{}}}],["repas",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponse",{"_index":433,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["reponses",{"_index":1474,"title":{},"body":{"injectables/UserService.html":{}}}],["request",{"_index":1320,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":1356,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":1357,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.url.includes(environment.api_url+\"api",{"_index":1350,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requete",{"_index":1330,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requette",{"_index":1332,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["reseaux",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizing",{"_index":625,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["responsable",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":420,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["response.body.token",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.createdat",{"_index":1176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.data",{"_index":1177,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["response.token",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["responseapiuser",{"_index":1214,"title":{"classes/ResponseApiUser.html":{}},"body":{"classes/ResponseApiUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["responsefrommodal",{"_index":606,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["responsefrommodal.data",{"_index":762,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["responsefromservergps.features[0].geometry.coordinates[0",{"_index":1653,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["responsefromservergps.features[0].geometry.coordinates[1",{"_index":1654,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["responsefromserverweather.hourly.temperature_2m[heure",{"_index":1667,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["restaurateur",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restcountries",{"_index":706,"title":{},"body":{"injectables/DataService.html":{}}}],["result",{"_index":559,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{}}}],["result[2].avatar",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["resultat",{"_index":35,"title":{},"body":{"pipes/AgePipe.html":{},"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["results",{"_index":43,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retour",{"_index":1259,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["retourne",{"_index":33,"title":{},"body":{"pipes/AgePipe.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/WeatherModalComponent.html":{}}}],["return",{"_index":42,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"pipes/AgePipe.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["revenu",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reçu",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(205",{"_index":1289,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["rgba(0",{"_index":653,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["right",{"_index":471,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/SideBarRightComponent.html":{},"components/WeatherModalComponent.html":{}}}],["right'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["right.component",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["right.component.html",{"_index":1304,"title":{},"body":{"components/SideBarRightComponent.html":{}}}],["right.component.scss",{"_index":1303,"title":{},"body":{"components/SideBarRightComponent.html":{}}}],["right.component.ts",{"_index":1302,"title":{},"body":{"components/SideBarRightComponent.html":{},"coverage.html":{}}}],["right.component.ts:12",{"_index":1306,"title":{},"body":{"components/SideBarRightComponent.html":{}}}],["right.component.ts:8",{"_index":1305,"title":{},"body":{"components/SideBarRightComponent.html":{}}}],["right/side",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/SideBarRightComponent.html":{},"coverage.html":{}}}],["role",{"_index":1222,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"classes/User.html":{},"coverage.html":{}}}],["room",{"_index":379,"title":{"classes/Room.html":{}},"body":{"components/ChatRoomComponent.html":{},"classes/Message.html":{},"classes/Role.html":{},"classes/Room.html":{},"classes/User.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["room'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["room.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["room.component.html",{"_index":381,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.scss",{"_index":380,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts",{"_index":378,"title":{},"body":{"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:17",{"_index":398,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:20",{"_index":400,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:23",{"_index":390,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:26",{"_index":392,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:44",{"_index":393,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:61",{"_index":396,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room/chat",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["roomid",{"_index":997,"title":{},"body":{"classes/Message.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["roomid?:room",{"_index":1007,"title":{},"body":{"classes/Message.html":{}}}],["root",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["route",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{}}}],["routenotfoundcomponent",{"_index":233,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["router",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WeatherComponent.html":{}}}],["routermodule.forroot(routes",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":223,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rue",{"_index":1460,"title":{},"body":{"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["rue},${cp},${ville",{"_index":1698,"title":{},"body":{"injectables/WeatherService.html":{}}}],["run",{"_index":1769,"title":{},"body":{"index.html":{}}}],["running",{"_index":1787,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"injectables/ChatService.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1629,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["réalisateur",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["récupération",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["récupérer",{"_index":341,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["rédacteur",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["réparation",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["répertoire",{"_index":1276,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["répétiteur",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["réseaux",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["résidence",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s'est",{"_index":582,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["salariés",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sam",{"_index":1084,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sans",{"_index":580,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["sauf",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":1779,"title":{},"body":{"index.html":{}}}],["sciences",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scientifique",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scolaire",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scroll",{"_index":643,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["scrollbar",{"_index":484,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{}}}],["scrum",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scénographe",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["se",{"_index":352,"title":{},"body":{"injectables/BackendService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":1285,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["searchbar",{"_index":519,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["secondaire",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seconde",{"_index":436,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["secrétaire",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectionner",{"_index":405,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["selector",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["self",{"_index":469,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sent",{"_index":1279,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["sentmessagesid",{"_index":1240,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["serve",{"_index":1770,"title":{},"body":{"index.html":{}}}],["server",{"_index":1768,"title":{},"body":{"index.html":{}}}],["serveur",{"_index":1658,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["service",{"_index":549,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/DirectoryService.html":{},"components/UserComponent.html":{},"components/WeatherModalComponent.html":{}}}],["service.methodedansservice.souscription(resultat",{"_index":552,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["services",{"_index":890,"title":{},"body":{"injectables/GlobalHttpService.html":{},"miscellaneous/variables.html":{}}}],["services/backend.service",{"_index":537,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/OverviewComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/chat.service",{"_index":401,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["services/token.service",{"_index":1327,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["services/weather.service",{"_index":1589,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["setitem(key",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["settimeout",{"_index":437,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["setup",{"_index":430,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["setusercurrent",{"_index":414,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/UserService.html":{}}}],["setusercurrent(user",{"_index":1490,"title":{},"body":{"injectables/UserService.html":{}}}],["seule",{"_index":1391,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["seulement",{"_index":1036,"title":{},"body":{"components/ProfilComponent.html":{}}}],["showfiller",{"_index":520,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["si",{"_index":413,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["side",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["sidebarleftcomponent",{"_index":101,"title":{"components/SideBarLeftComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarrightcomponent",{"_index":105,"title":{"components/SideBarRightComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":621,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["sit",{"_index":629,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["ski",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skillindex",{"_index":1073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["skills",{"_index":1061,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["skipper",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":1165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["snoozed",{"_index":1278,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["social",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sociétés",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soie",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soins",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soit",{"_index":758,"title":{},"body":{"components/DirectoryComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/WeatherComponent.html":{}}}],["solid",{"_index":652,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["son",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortcountries",{"_index":1059,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sortie",{"_index":1334,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["sortir",{"_index":1338,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["souscri",{"_index":1434,"title":{},"body":{"components/UserComponent.html":{}}}],["souscription",{"_index":1666,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["souscrire",{"_index":617,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["souscris",{"_index":604,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["souscrit",{"_index":1657,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["soutien",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1286,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["span",{"_index":774,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["speaker",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["split",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["sport",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sportif",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.ts",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.interceptor.ts",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat.guard.ts",{"_index":375,"title":{},"body":{"guards/ChatGuard.html":{},"coverage.html":{}}}],["src/app/chat.guard.ts:9",{"_index":376,"title":{},"body":{"guards/ChatGuard.html":{}}}],["src/app/components/chat",{"_index":377,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"coverage.html":{}}}],["src/app/components/chat/chat.component.ts",{"_index":368,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/components/chat/chat.component.ts:12",{"_index":374,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:8",{"_index":373,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/directory/directory.component.ts",{"_index":731,"title":{},"body":{"components/DirectoryComponent.html":{},"coverage.html":{}}}],["src/app/components/directory/directory.component.ts:18",{"_index":743,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["src/app/components/directory/directory.component.ts:22",{"_index":740,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["src/app/components/directory/directory.component.ts:28",{"_index":741,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["src/app/components/directory/directory.component.ts:33",{"_index":742,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["src/app/components/finder/finder.component.ts",{"_index":844,"title":{},"body":{"components/FinderComponent.html":{},"coverage.html":{}}}],["src/app/components/finder/finder.component.ts:13",{"_index":848,"title":{},"body":{"components/FinderComponent.html":{}}}],["src/app/components/finder/finder.component.ts:17",{"_index":849,"title":{},"body":{"components/FinderComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/overview/overview.component.ts",{"_index":1011,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/components/overview/overview.component.ts:12",{"_index":1016,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/components/overview/overview.component.ts:16",{"_index":1017,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/components/overview/overview.component.ts:21",{"_index":1018,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/components/profil/profil.component.ts",{"_index":1027,"title":{},"body":{"components/ProfilComponent.html":{},"coverage.html":{}}}],["src/app/components/profil/profil.component.ts:13",{"_index":1030,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:16",{"_index":1031,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1045,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:108",{"_index":1089,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:114",{"_index":1064,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:120",{"_index":1074,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:125",{"_index":1067,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:132",{"_index":1070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:24",{"_index":1075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:27",{"_index":1087,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:28",{"_index":1079,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:29",{"_index":1086,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:30",{"_index":1076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:31",{"_index":1077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:33",{"_index":1082,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:36",{"_index":1083,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:37",{"_index":1081,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:38",{"_index":1078,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:40",{"_index":1063,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:47",{"_index":1069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:94",{"_index":1072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:99",{"_index":1065,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/side",{"_index":1270,"title":{},"body":{"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.component.ts",{"_index":1427,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.component.ts:14",{"_index":1432,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:18",{"_index":1433,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/weather/weather.component.ts",{"_index":1568,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/components/weather/weather.component.ts:20",{"_index":1574,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/components/weather/weather.component.ts:25",{"_index":1576,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/components/weather/weather.component.ts:35",{"_index":1585,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/components/weather/weather.component.ts:43",{"_index":1577,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/helpers/auth.guard.ts",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/helpers/auth.guard.ts:11",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/helpers/auth.guard.ts:16",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/helpers/token.interceptor.ts",{"_index":1310,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/token.interceptor.ts:18",{"_index":1313,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/helpers/token.interceptor.ts:24",{"_index":1319,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/modals/chat",{"_index":660,"title":{},"body":{"components/ChatUserModalComponent.html":{},"coverage.html":{}}}],["src/app/modals/directory",{"_index":776,"title":{},"body":{"components/DirectoryModalComponent.html":{},"coverage.html":{}}}],["src/app/modals/user",{"_index":1092,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserModalComponent.html":{},"coverage.html":{}}}],["src/app/modals/weather",{"_index":1588,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["src/app/models/directory",{"_index":720,"title":{},"body":{"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"coverage.html":{}}}],["src/app/models/message.ts",{"_index":992,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/app/models/message.ts:10",{"_index":1000,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.ts:5",{"_index":999,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.ts:6",{"_index":1004,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.ts:7",{"_index":1003,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.ts:8",{"_index":1002,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.ts:9",{"_index":1001,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/response",{"_index":1215,"title":{},"body":{"classes/ResponseApiUser.html":{},"coverage.html":{}}}],["src/app/models/room.ts",{"_index":1260,"title":{},"body":{"classes/Room.html":{},"coverage.html":{}}}],["src/app/models/room.ts:10",{"_index":1265,"title":{},"body":{"classes/Room.html":{}}}],["src/app/models/room.ts:7",{"_index":1264,"title":{},"body":{"classes/Room.html":{}}}],["src/app/models/room.ts:8",{"_index":1266,"title":{},"body":{"classes/Room.html":{}}}],["src/app/models/room.ts:9",{"_index":1267,"title":{},"body":{"classes/Room.html":{}}}],["src/app/models/user",{"_index":504,"title":{},"body":{"components/ChatTopBarComponent.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/models/user.ts",{"_index":1223,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:20",{"_index":1425,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:21",{"_index":1412,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1415,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:23",{"_index":1407,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:24",{"_index":1406,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:25",{"_index":1416,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1411,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:27",{"_index":1420,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:28",{"_index":1421,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:29",{"_index":1418,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1414,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:31",{"_index":1424,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:32",{"_index":1409,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:33",{"_index":1408,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1423,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:35",{"_index":1426,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:36",{"_index":1417,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:37",{"_index":1410,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1422,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:39",{"_index":1419,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:40",{"_index":1413,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:41",{"_index":1405,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":1226,"title":{},"body":{"classes/Role.html":{}}}],["src/app/pipes/age.pipe.ts",{"_index":6,"title":{},"body":{"pipes/AgePipe.html":{},"coverage.html":{}}}],["src/app/pipes/age.pipe.ts:13",{"_index":14,"title":{},"body":{"pipes/AgePipe.html":{}}}],["src/app/services/backend.service",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/backend.service.ts",{"_index":298,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:18",{"_index":311,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:28",{"_index":322,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:33",{"_index":319,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:38",{"_index":316,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:50",{"_index":315,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:57",{"_index":313,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/chat.service.ts",{"_index":486,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/services/chat.service.ts:12",{"_index":492,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:15",{"_index":488,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/data.service",{"_index":746,"title":{},"body":{"components/DirectoryComponent.html":{},"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/data.service.ts",{"_index":699,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/services/data.service.ts:14",{"_index":704,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:28",{"_index":702,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/directory.service",{"_index":748,"title":{},"body":{"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{}}}],["src/app/services/directory.service.ts",{"_index":814,"title":{},"body":{"injectables/DirectoryService.html":{},"coverage.html":{}}}],["src/app/services/directory.service.ts:11",{"_index":830,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["src/app/services/directory.service.ts:12",{"_index":819,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["src/app/services/directory.service.ts:18",{"_index":826,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["src/app/services/directory.service.ts:26",{"_index":823,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["src/app/services/directory.service.ts:32",{"_index":821,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["src/app/services/global",{"_index":883,"title":{},"body":{"injectables/GlobalHttpService.html":{},"coverage.html":{}}}],["src/app/services/token.service.ts",{"_index":1396,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{}}}],["src/app/services/token.service.ts:15",{"_index":1401,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:20",{"_index":1400,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:25",{"_index":1399,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:30",{"_index":1398,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/token.service.ts:38",{"_index":1397,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/user.service",{"_index":402,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1471,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:102",{"_index":1483,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:115",{"_index":1491,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:120",{"_index":1482,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":1496,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":1495,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":1494,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:24",{"_index":1498,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:36",{"_index":1493,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:48",{"_index":1480,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:90",{"_index":1488,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:94",{"_index":1485,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:98",{"_index":1479,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/weather.service.ts",{"_index":1672,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/services/weather.service.ts:12",{"_index":1683,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:15",{"_index":1685,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:16",{"_index":1688,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:33",{"_index":1679,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:42",{"_index":1682,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/user.guard.ts",{"_index":1444,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/user.guard.ts:9",{"_index":1445,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/environments/environment",{"_index":1329,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/job",{"_index":853,"title":{},"body":{"components/FinderComponent.html":{}}}],["src/helpers/job.ts",{"_index":1737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":473,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["started",{"_index":1762,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":851,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["state",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["statements",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["stock",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["stored",{"_index":1785,"title":{},"body":{"index.html":{}}}],["street",{"_index":1120,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"injectables/GlobalHttpService.html":{},"classes/Message.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/Room.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["styles",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["styleurls",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["styliste",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sténotypiste",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":828,"title":{},"body":{"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["subscribe",{"_index":1670,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["subscribe(responsefromserverweather",{"_index":1664,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["super(_http",{"_index":334,"title":{},"body":{"injectables/BackendService.html":{}}}],["super(attribut",{"_index":1234,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["super(data",{"_index":714,"title":{},"body":{"injectables/DataService.html":{}}}],["support",{"_index":1806,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":366,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["surcharger",{"_index":709,"title":{},"body":{"injectables/DataService.html":{}}}],["surveillance",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1807,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1369,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["switchmap",{"_index":1626,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["switchmap((responsefromservergps",{"_index":1649,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["systemes",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["systèmes",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sécurit",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":428,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1627,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["taxe",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["team",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technique",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":1584,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["temperature_2m",{"_index":1703,"title":{},"body":{"injectables/WeatherService.html":{}}}],["template",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["templateurl",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["temporaires",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tennis",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terrasses",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":896,"title":{},"body":{"injectables/GlobalHttpService.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["test.email",{"_index":511,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["testeur",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":1798,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1789,"title":{},"body":{"index.html":{}}}],["text",{"_index":633,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/SideBarLeftComponent.html":{}}}],["textiles",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanatopracteurs",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thermicien",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._backend.cleartoken",{"_index":1022,"title":{},"body":{"components/OverviewComponent.html":{}}}],["this._backend.getprofileusercurrent().subscribe((response",{"_index":550,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this._backend.gettoken",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._backend.postloginuser(this.user).subscribe((response",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._backend.postuser(this.user).subscribe((response",{"_index":1183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._backendservice.gettoken",{"_index":1345,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this._chatservice.getmessages().subscribe((value",{"_index":421,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this._dataservice.getcountries().subscribe((countries",{"_index":1130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._dataservice.getprofilelist",{"_index":1128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._directoryservice.postdata(dir).subscribe(response",{"_index":804,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this._fb.group",{"_index":791,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["this._filter(value",{"_index":864,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["this._http.get(`${this._apiurl}/list",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.get(`${this._apiurl}/profile`,{observe",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.get(this._apiurl).pipe",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.get(this.url",{"_index":494,"title":{},"body":{"injectables/ChatService.html":{},"injectables/DirectoryService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{}}}],["this._http.get(this.urlcountry",{"_index":717,"title":{},"body":{"injectables/DataService.html":{}}}],["this._http.get(this.urldb",{"_index":360,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["this._http.get(this.urlgps",{"_index":1699,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this._http.get(this.urlmeteo",{"_index":1708,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this._http.post(`${this._apiurl}/login",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.post(`${this._apiurl}/register",{"_index":1536,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.post(this._apiurl",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.post(this.url",{"_index":840,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["this._http.post(this.urldb",{"_index":338,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["this._matdialog.open(chatusermodalcomponent",{"_index":598,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this._matdialog.open(directorymodalcomponent",{"_index":753,"title":{},"body":{"components/DirectoryComponent.html":{}}}],["this._matdialog.open(usermodalcomponent",{"_index":1175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._matdialog.open(weathercomponent",{"_index":1607,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this._matdialog.open(weathermodalcomponent",{"_index":1596,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this._matdialogref.close",{"_index":687,"title":{},"body":{"components/ChatUserModalComponent.html":{},"components/WeatherModalComponent.html":{}}}],["this._matdialogref.close(this.infos",{"_index":685,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["this._route.navigate(['login",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._router.navigate",{"_index":367,"title":{},"body":{"injectables/BackendService.html":{}}}],["this._snackbar.open(\"vous",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._snackbar.open('mot",{"_index":1158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._snackbar.open(message",{"_index":1379,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this._userservice",{"_index":718,"title":{},"body":{"injectables/DataService.html":{}}}],["this._userservice.getprofile().subscribe((response",{"_index":417,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{}}}],["this._userservice.getprofile().subscribe((val",{"_index":562,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this._userservice.getusercurrent().subscribe((response",{"_index":505,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["this._userservice.getusers().subscribe((result",{"_index":557,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{}}}],["this._userservice.getuserslist().subscribe((val",{"_index":567,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this._userservice.login(this.user).subscribe((response",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._userservice.postdata(form).subscribe((response",{"_index":1174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._userservice.register(this.user).subscribe((response",{"_index":1179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._userservice.setusercurrent(user",{"_index":618,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this._weatherservice.getcoordinates(form.rue",{"_index":1644,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this._weatherservice.getmeteo(gps.latitude",{"_index":1655,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.avatar",{"_index":1099,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.countries",{"_index":1131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.countries.map((countriename",{"_index":1148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.countriesfiltre",{"_index":1150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currentuser.asobservable",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuser.next(user",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["this.data",{"_index":507,"title":{},"body":{"components/ChatTopBarComponent.html":{}}}],["this.data=data",{"_index":1221,"title":{},"body":{"classes/ResponseApiUser.html":{}}}],["this.dataservice.getdata().subscribe((value",{"_index":1189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.datauser",{"_index":1437,"title":{},"body":{"components/UserComponent.html":{}}}],["this.description",{"_index":730,"title":{},"body":{"classes/Directory.html":{}}}],["this.dialogref.close",{"_index":806,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this.dialogref.close(response",{"_index":805,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this.directories.push(new",{"_index":763,"title":{},"body":{"components/DirectoryComponent.html":{},"components/WeatherComponent.html":{}}}],["this.directoryform",{"_index":790,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this.directoryform.getrawvalue",{"_index":801,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this.directoryform.value",{"_index":800,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["this.dirsubject.next(data",{"_index":843,"title":{},"body":{"injectables/DirectoryService.html":{}}}],["this.email",{"_index":1248,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["this.errorpass",{"_index":1157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.filteredoptions",{"_index":861,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["this.floatlabelcontrol.value",{"_index":1453,"title":{},"body":{"components/UserModalComponent.html":{}}}],["this.gettoken",{"_index":357,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{}}}],["this.idcurrent",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["this.infos.cp",{"_index":1632,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.infos.rue",{"_index":1631,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.infos.ville",{"_index":1633,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.infouser",{"_index":419,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.infouser.data",{"_index":425,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.isadmin",{"_index":1229,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["this.iswait",{"_index":1641,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.lastname",{"_index":1247,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["this.loginform",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.email",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.meteo",{"_index":1597,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.meteo.cp=resultfromweathermodal.formulaire.cp",{"_index":1605,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.meteo.rue=resultfromweathermodal.formulaire.rue",{"_index":1604,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.meteo.temperature=resultfromweathermodal.temperature",{"_index":1603,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.meteo.ville=resultfromweathermodal.formulaire.ville",{"_index":1606,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.myprofil",{"_index":551,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{}}}],["this.newmessage.reset",{"_index":432,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.newmessage.value",{"_index":431,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.nom",{"_index":728,"title":{},"body":{"classes/Directory.html":{}}}],["this.onclick",{"_index":450,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.option",{"_index":1132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.option?.filter(option",{"_index":868,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["this.options",{"_index":1188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.options.filter(item",{"_index":1151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.path",{"_index":729,"title":{},"body":{"classes/Directory.html":{}}}],["this.pays",{"_index":1190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.profileservice.getdata().subscribe(response",{"_index":1187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.profileuser",{"_index":585,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.results",{"_index":422,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.results.length",{"_index":439,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.results.push",{"_index":429,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.results[i].punchline",{"_index":441,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.route.navigate(['/overview",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.route.navigate(['overview",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.searchbar.valuechanges.subscribe((value",{"_index":570,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.skills.push(new",{"_index":1138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.skills.removeat(skillindex",{"_index":1137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.sortcountries",{"_index":1133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.tkn",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.city",{"_index":1119,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.country",{"_index":1117,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.dateofbirth",{"_index":1114,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.email",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.firstname",{"_index":1107,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.firstname=form.nom",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.lastname",{"_index":1109,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.password",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.phonenumber",{"_index":1125,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.skills",{"_index":1172,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.street",{"_index":1121,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.username",{"_index":1106,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.user.zipcode",{"_index":1123,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userarray",{"_index":561,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.userarray=result",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform",{"_index":1104,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.get('skills",{"_index":1142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.value",{"_index":1093,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform.value.skills",{"_index":1173,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userform?.get('country')?.valuechanges.pipe",{"_index":862,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["this.username",{"_index":1246,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["this.users",{"_index":558,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.users.filter((user",{"_index":574,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.users[i",{"_index":601,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["this.userservice.getuser().subscribe((value",{"_index":1439,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getusers().subscribe((value",{"_index":1436,"title":{},"body":{"components/UserComponent.html":{}}}],["this.usersubject.asobservable",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersubject.next(myobject",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersubject.next(newobject",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["this.weatherform",{"_index":1630,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["this.weatherform.value",{"_index":1635,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["title",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["titulaires",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tkn",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["today",{"_index":39,"title":{},"body":{"pipes/AgePipe.html":{}}}],["toggle",{"_index":623,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["toilettage",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toilettes",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"components/LoginComponent.html":{},"classes/Role.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["tokeninterceptor",{"_index":1308,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokeninterceptorprovider",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenservice",{"_index":1326,"title":{"injectables/TokenService.html":{}},"body":{"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["toolbar",{"_index":1298,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["top",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["topographe",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toto",{"_index":1085,"title":{},"body":{"components/RegisterComponent.html":{}}}],["toujours",{"_index":599,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["touristique",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tous",{"_index":348,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatUserListComponent.html":{},"components/RegisterComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["toute",{"_index":1095,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["toutes",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traducteur",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traiteurs",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transcripteur",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transfere",{"_index":1642,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["transfert",{"_index":1659,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["transform",{"_index":11,"title":{},"body":{"pipes/AgePipe.html":{}}}],["transform(value",{"_index":12,"title":{},"body":{"pipes/AgePipe.html":{}}}],["transforme",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["transformer",{"_index":29,"title":{},"body":{"pipes/AgePipe.html":{}}}],["travail",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["travaux",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["travers",{"_index":614,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["tre",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["tribunaux",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trier",{"_index":1143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["triés",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"components/WeatherModalComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":711,"title":{},"body":{"injectables/DataService.html":{},"components/FinderComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["tslib",{"_index":539,"title":{},"body":{"components/ChatUserListComponent.html":{},"dependencies.html":{}}}],["tu",{"_index":858,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherComponent.html":{}}}],["tutelle",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":17,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BackendService.html":{},"guards/ChatGuard.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"injectables/DataService.html":{},"classes/Directory.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"guards/UserGuard.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["télécommunications",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["un",{"_index":615,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/DirectoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["unauthorized",{"_index":1378,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["undefined",{"_index":1080,"title":{},"body":{"components/RegisterComponent.html":{}}}],["une",{"_index":572,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["uniquement",{"_index":411,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["unit",{"_index":1788,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1038,"title":{},"body":{"components/ProfilComponent.html":{}}}],["urbaniste",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":330,"title":{},"body":{"injectables/BackendService.html":{},"injectables/ChatService.html":{},"injectables/DirectoryService.html":{},"injectables/TokenService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["urlapi,objet",{"_index":834,"title":{},"body":{"injectables/DirectoryService.html":{},"injectables/UserService.html":{}}}],["urlcountry",{"_index":700,"title":{},"body":{"injectables/DataService.html":{}}}],["urldb",{"_index":301,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{}}}],["urlgps",{"_index":1674,"title":{},"body":{"injectables/WeatherService.html":{}}}],["urlmeteo",{"_index":1675,"title":{},"body":{"injectables/WeatherService.html":{}}}],["urlpost",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["urltree",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ChatGuard.html":{},"guards/UserGuard.html":{}}}],["use",{"_index":1781,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1392,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":83,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"classes/ResponseApiUser.html":{},"classes/Role.html":{},"classes/Room.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"injectables/TokenService.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["user.component.html",{"_index":1429,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.scss",{"_index":1428,"title":{},"body":{"components/UserComponent.html":{}}}],["user.email",{"_index":1443,"title":{},"body":{"components/UserComponent.html":{}}}],["user.first_name",{"_index":1441,"title":{},"body":{"components/UserComponent.html":{}}}],["user.first_name).tolowercase().includes(value.tolowercase",{"_index":576,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["user.guard",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user.last_name",{"_index":1442,"title":{},"body":{"components/UserComponent.html":{}}}],["user.ts",{"_index":1216,"title":{},"body":{"classes/ResponseApiUser.html":{},"coverage.html":{}}}],["user.ts:5",{"_index":1218,"title":{},"body":{"classes/ResponseApiUser.html":{}}}],["userarray",{"_index":521,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["usercomponent",{"_index":107,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userform",{"_index":857,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["userform.value",{"_index":1168,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userguard",{"_index":229,"title":{"guards/UserGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":998,"title":{},"body":{"classes/Message.html":{}}}],["userid?:user",{"_index":1006,"title":{},"body":{"classes/Message.html":{}}}],["userinfos",{"_index":545,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["userlog",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["usermodalcomponent",{"_index":109,"title":{"components/UserModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":1105,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["userobj",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.avatar",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.email",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.email.split(/[.@]/)[0",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.email.split(/[.@]/)[1",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.pass",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["userprofile",{"_index":1475,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":522,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":387,"title":{"injectables/UserService.html":{}},"body":{"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"injectables/GlobalHttpService.html":{},"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersid",{"_index":1263,"title":{},"body":{"classes/Room.html":{}}}],["usersub",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["usersubject",{"_index":1476,"title":{},"body":{"injectables/UserService.html":{}}}],["utilis",{"_index":897,"title":{},"body":{"injectables/GlobalHttpService.html":{}}}],["utilisateur",{"_index":611,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/RegisterComponent.html":{}}}],["utilisateurs",{"_index":556,"title":{},"body":{"components/ChatUserListComponent.html":{},"injectables/UserService.html":{}}}],["utilise",{"_index":609,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/ProfilComponent.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["utilisent",{"_index":1253,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["utiliser",{"_index":1238,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["va",{"_index":543,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["vais",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["val",{"_index":36,"title":{},"body":{"pipes/AgePipe.html":{}}}],["val.body",{"_index":564,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["valeur",{"_index":573,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherComponent.html":{}}}],["valeurs",{"_index":1634,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["validators",{"_index":788,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["validators.email",{"_index":1115,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(12",{"_index":1111,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":799,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["validators.minlength(8",{"_index":1110,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern('[a",{"_index":794,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["validators.required",{"_index":793,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["valider",{"_index":809,"title":{},"body":{"components/DirectoryModalComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WeatherModalComponent.html":{}}}],["value",{"_index":19,"title":{},"body":{"pipes/AgePipe.html":{},"components/AppComponent.html":{},"injectables/BackendService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUserListComponent.html":{},"injectables/DataService.html":{},"components/DirectoryComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"classes/Role.html":{},"components/SideBarLeftComponent.html":{},"injectables/TokenService.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["value.data",{"_index":1438,"title":{},"body":{"components/UserComponent.html":{}}}],["value.name",{"_index":1191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.tolowercase",{"_index":867,"title":{},"body":{"components/FinderComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["variable",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1817,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendeurs",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifier",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["vers",{"_index":1534,"title":{},"body":{"injectables/UserService.html":{}}}],["version",{"_index":579,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"index.html":{},"properties.html":{}}}],["verticalposition",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["vestiaires",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["veut",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["via",{"_index":342,"title":{},"body":{"injectables/BackendService.html":{},"injectables/TokenService.html":{},"index.html":{}}}],["vide",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["vient",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["vigilance",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vigile",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ville",{"_index":1465,"title":{},"body":{"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{}}}],["void",{"_index":314,"title":{},"body":{"injectables/BackendService.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"injectables/DirectoryService.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"injectables/UserService.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["voile",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["voit",{"_index":1337,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["vont",{"_index":616,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["votre",{"_index":1206,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vouloir",{"_index":691,"title":{},"body":{"components/ChatUserModalComponent.html":{}}}],["vous",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChatUserModalComponent.html":{},"components/LoginComponent.html":{}}}],["vu",{"_index":1361,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["véhicule",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["véhicules",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vérificateur",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["weather'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["weather.component.html",{"_index":1570,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1569,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathercomponent",{"_index":110,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherform",{"_index":1619,"title":{},"body":{"components/WeatherModalComponent.html":{}}}],["weathermodalcomponent",{"_index":112,"title":{"components/WeatherModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatTopBarComponent.html":{},"components/ChatUserListComponent.html":{},"components/ChatUserModalComponent.html":{},"components/DirectoryComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/SideBarRightComponent.html":{},"components/UserComponent.html":{},"components/UserModalComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservice",{"_index":1573,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["web",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webkit",{"_index":483,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{}}}],["webmaster",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":1294,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["width",{"_index":457,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUserListComponent.html":{},"components/DirectoryModalComponent.html":{},"components/FinderComponent.html":{},"components/OverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideBarLeftComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherModalComponent.html":{}}}],["width:100",{"_index":639,"title":{},"body":{"components/ChatUserListComponent.html":{}}}],["width:100vw",{"_index":1295,"title":{},"body":{"components/SideBarLeftComponent.html":{}}}],["width:auto",{"_index":479,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["works",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilComponent.html":{},"components/RegisterComponent.html":{}}}],["x",{"_index":644,"title":{},"body":{"components/ChatUserListComponent.html":{},"components/RegisterComponent.html":{}}}],["y",{"_index":642,"title":{},"body":{"components/ChatUserListComponent.html":{},"miscellaneous/variables.html":{}}}],["yoga",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":796,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["za",{"_index":795,"title":{},"body":{"components/DirectoryModalComponent.html":{}}}],["zipcode",{"_index":1122,"title":{},"body":{"components/RegisterComponent.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["zone.js",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/AgePipe.html":{"url":"pipes/AgePipe.html","title":"pipe - AgePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AgePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/age.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        age\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/age.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n\n\n@Pipe({\n  name: 'age'\n})\n\nexport class AgePipe implements PipeTransform {\n\n\n  // on doit transformer quelque chose, et on retourne le resultat\n  transform(value: any): number {\n    let val = new Date(value).getFullYear();\n    let today = new Date().getFullYear();\n    let ageToday = (today - val)\n\n    return ageToday;\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'digilab'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'digilab';\n}\n\n    \n\n    \n          -->\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAgePipe\n\nAgePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAgePipe->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatTopBarComponent\n\nChatTopBarComponent\n\nAppModule -->\n\nChatTopBarComponent->AppModule\n\n\n\n\n\nChatUserListComponent\n\nChatUserListComponent\n\nAppModule -->\n\nChatUserListComponent->AppModule\n\n\n\n\n\nChatUserModalComponent\n\nChatUserModalComponent\n\nAppModule -->\n\nChatUserModalComponent->AppModule\n\n\n\n\n\nDirectoryComponent\n\nDirectoryComponent\n\nAppModule -->\n\nDirectoryComponent->AppModule\n\n\n\n\n\nDirectoryModalComponent\n\nDirectoryModalComponent\n\nAppModule -->\n\nDirectoryModalComponent->AppModule\n\n\n\n\n\nFinderComponent\n\nFinderComponent\n\nAppModule -->\n\nFinderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nProfilComponent\n\nProfilComponent\n\nAppModule -->\n\nProfilComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSideBarLeftComponent\n\nSideBarLeftComponent\n\nAppModule -->\n\nSideBarLeftComponent->AppModule\n\n\n\n\n\nSideBarRightComponent\n\nSideBarRightComponent\n\nAppModule -->\n\nSideBarRightComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nUserModalComponent\n\nUserModalComponent\n\nAppModule -->\n\nUserModalComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nWeatherModalComponent\n\nWeatherModalComponent\n\nAppModule -->\n\nWeatherModalComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AgePipe\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ChatComponent\n                        \n                        \n                            ChatRoomComponent\n                        \n                        \n                            ChatTopBarComponent\n                        \n                        \n                            ChatUserListComponent\n                        \n                        \n                            ChatUserModalComponent\n                        \n                        \n                            DirectoryComponent\n                        \n                        \n                            DirectoryModalComponent\n                        \n                        \n                            FinderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            OverviewComponent\n                        \n                        \n                            ProfilComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SideBarLeftComponent\n                        \n                        \n                            SideBarRightComponent\n                        \n                        \n                            UserComponent\n                        \n                        \n                            UserModalComponent\n                        \n                        \n                            WeatherComponent\n                        \n                        \n                            WeatherModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport {MatDrawer, MatSidenavModule} from '@angular/material/sidenav'\nimport { NgModule, ɵisObservable } from '@angular/core';\n\nimport { AgePipe } from './pipes/age.pipe';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { ChatTopBarComponent } from './components/chat-top-bar/chat-top-bar.component';\nimport { ChatUserListComponent } from './components/chat-user-list/chat-user-list.component';\nimport { ChatUserModalComponent } from './modals/chat-user-modal/chat-user-modal.component';\nimport { DirectoryComponent } from './components/directory/directory.component';\nimport { DirectoryModalComponent } from './modals/directory-modal/directory-modal.component';\nimport { FinderComponent } from './components/finder/finder.component';\nimport { HttpClientModule } from '@angular/common/http'\nimport { LoginComponent } from './components/login/login.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input'\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { ProfilComponent } from './components/profil/profil.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SideBarLeftComponent } from './components/side-bar-left/side-bar-left.component';\nimport { SideBarRightComponent } from './components/side-bar-right/side-bar-right.component';\nimport { TokenInterceptorProvider } from './helpers/token.interceptor';\nimport { UserComponent } from './components/user/user.component';\nimport { UserModalComponent } from './modals/user-modal/user-modal.component'\nimport { WeatherComponent } from './components/weather/weather.component';\nimport { WeatherModalComponent } from './modals/weather-modal/weather-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    RegisterComponent,\n    AgePipe,\n    DirectoryComponent,\n    WeatherComponent,\n    UserModalComponent,\n    DirectoryModalComponent,\n    WeatherModalComponent,\n    OverviewComponent,\n    SideBarLeftComponent,\n    SideBarRightComponent,\n    ChatComponent,\n    ProfilComponent,\n    ChatUserListComponent,\n    ChatRoomComponent,\n    ChatTopBarComponent,\n    ChatUserModalComponent,\n    FinderComponent\n  ],\n  imports: [\n    MatListModule,\n    MatDatepickerModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    BrowserModule,\n    MatIconModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule,\n    MatListModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule\n  ],\n\n  providers: [TokenInterceptorProvider],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './helpers/auth.guard';\nimport { ChatComponent } from './components/chat/chat.component';\nimport { ChatGuard } from './chat.guard';\nimport { ChatRoomComponent } from './components/chat-room/chat-room.component';\nimport { ChatUserListComponent } from './components/chat-user-list/chat-user-list.component';\nimport { DirectoryComponent } from './components/directory/directory.component';\nimport { FinderComponent } from './components/finder/finder.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { ProfilComponent } from './components/profil/profil.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserComponent } from './components/user/user.component';\nimport { UserGuard } from './user.guard';\nimport { WeatherComponent } from './components/weather/weather.component';\n\nconst routes: Routes = [\n\n  {\n    path: '', component: LoginComponent\n    //  path: '**', component: RouteNotFoundComponent\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'finder', component: FinderComponent ,canActivate:[AuthGuard]},\n  {\n    path: 'overview', component: OverviewComponent, canActivate:[AuthGuard],\n    // les enfants de overview il faudra mettre overview/register par exemple\n    children: [\n      // { path: 'login', component: LoginComponent },\n      // { path: 'register', component: RegisterComponent },\n      { path: 'directory', component: DirectoryComponent, canActivate:[AuthGuard] },\n      {\n        path: 'chat', component: ChatComponent, canActivate:[AuthGuard]\n      },\n\n      { path: 'profil', component: ProfilComponent, canActivate:[AuthGuard] },\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/helpers/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: Router, _snackBar: MatSnackBar, _backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n\nimport { BackendService } from 'src/app/services/backend.service';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _route: Router,\n    private _snackBar: MatSnackBar,\n    private _backend: BackendService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n    // * on recupere le token\n    const token = this._backend.getToken()\n    if (token) {\n      // *\n      return true;\n    } else {\n      this._snackBar.open(\"Vous n'êtes pas connecté, vous n'avez pas accès à cette page\", 'ok', { verticalPosition: 'top' })\n      return this._route.navigate(['login'])\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearToken\n                            \n                            \n                                getProfileUserCurrent\n                            \n                            \n                                getToken\n                            \n                            \n                                postLoginUser\n                            \n                            \n                                postUser\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearToken\n                        \n                    \n                \n            \n            \n                \nclearToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileUserCurrent\n                        \n                    \n                \n            \n            \n                \ngetProfileUserCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postLoginUser\n                        \n                    \n                \n            \n            \n                \npostLoginUser(form: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUser\n                        \n                    \n                \n            \n            \n                \npostUser(form: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        urlDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { GlobalHttpService } from './global-http.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService extends GlobalHttpService {\n\n\n\n\n  //* url de base pour le backend\n  urlDB = 'http://localhost:3000/api/users'\n  constructor(_http: HttpClient, private _router: Router) {\n    super(_http);\n\n\n  }\n\n\n\n  // * envoie les infos register au backend >>>>>>>> route /register\n  postUser(form: User): Observable {\n    return this._http.post(this.urlDB + \"/register\", form)\n  }\n\n  // * envoie les infos login au backend >>>>>>>>>> route /login\n  postLoginUser(form: User): Observable {\n    return this._http.post(this.urlDB + \"/login\", form)\n  }\n\n  // Cette méthode permet de récupérer le token via register\n  getToken(): string | null {\n    // on recupere directement notre objet\n    const newTkn = localStorage.getItem('token')\n    if (newTkn) {\n      return newTkn\n    }\n\n    return null\n\n  }\n\n  // * on recupere tous les infos de la personne qui se connecte\n  getProfileUserCurrent(): Observable {\n    const headers = new HttpHeaders().append(\"Authorization\", `Bearer ${this.getToken()}`)\n    // * on recupere les infos du profile de la personne qui se connecte >>>>>>>> route profile\n    return this._http.get(this.urlDB + \"/profile\", { headers: headers })\n  }\n\n  // *\n  clearToken() {\n    // * on indique quel token on clean\n    localStorage.removeItem('digichat-token')\n    // *on redirige sur login\n    this._router.navigate((['/']))\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat/chat.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                ./chat.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat/chat.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n\n      \n    \n    \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ChatGuard.html":{"url":"guards/ChatGuard.html","title":"guard - ChatGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ChatGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/chat.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return true;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatRoomComponent.html":{"url":"components/ChatRoomComponent.html","title":"component - ChatRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-room/chat-room.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-room\n            \n\n            \n                styleUrls\n                ./chat-room.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-room.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                infoUser\n                            \n                            \n                                newMessage\n                            \n                            \n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onSendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-room/chat-room.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendMessage\n                        \n                    \n                \n            \n            \n                \nonSendMessage(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        infoUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-room/chat-room.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-room/chat-room.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-room/chat-room.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ChatService } from './../../services/chat.service';\nimport { FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss']\n})\n\nexport class ChatRoomComponent implements OnInit {\n\n\n  // l'utilisateur qui a ete selectionner , pour @Input\n  infoUser!: any\n\n  //  formControl de l'input\n  newMessage: FormControl = new FormControl()\n\n\n  results: any[] = []\n  constructor(private _userService: UserService, private _chatService: ChatService) { }\n\n  ngOnInit(): void {\n\n    // la methode getUserCurrent reagi uniquement au préalable si la méthode SetUserCurrent est appelé\n    this._userService.getProfile().subscribe((response: any) => {\n      console.warn(response.value)\n      this.infoUser = response\n\n      this._chatService.getMessages().subscribe((value: any) => {\n        this.results = value\n        console.warn(\"chat room =======================\"+value)\n      })\n\n      // console.warn(\"info user\" + this.infoUser.data)\n    })\n\n\n  }\n\n  onClick() {\n\n    // on push dans le tableau\n    this.results.push({ setup: this.newMessage.value })\n    this.newMessage.reset()\n    // reponse au bout de 2 seconde\n\n    setTimeout(() => {\n      let i = Math.floor(Math.random() * this.results.length);\n\n      this.results.push({ punchline: this.results[i].punchline })\n    }, 2000);\n\n\n  }\n\n  // quand on appuie sur le bouton entre\n  onSendMessage(event: KeyboardEvent) {\n\n    console.warn(event)\n    if (event.code === \"Enter\") {\n      this.onClick()\n\n      setTimeout(() => {\n        let i = Math.floor(Math.random() * this.results.length);\n\n        this.results.push({ punchline: this.results[i].punchline })\n      }, 2000);\n    }\n\n  }\n\n\n}\n\n\n    \n\n    \n         \n\n\n  \n     -->\n    \n       -->\n      \n         {{item.setup}} \n         -->\n      \n       -->\n      \n         {{item.punchline}} \n      \n\n    \n  \n\n\n\n  \n    \n      \n\n        \n      \n    \n    \n       Envoyer\n    \n  \n\n\n\n    \n\n    \n                \n                    ./chat-room.component.scss\n                \n                .chatroom {\n  height: 70vh;\n  width: 90%\n}\n\n.chat {\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n\n}\n\n.left {\n  // background: #ddd;\n  align-self: end;\n\n}\n\n.right {\n  // background: #eee;\n  align-self: start;\n\n}\n\n.chipL {\n  background-color: #448aff;\n  min-height: 20px;\n  width:auto;\n  height: auto;\n}\n\n.chipR {\n  background-color:#83b9ff;\n  min-height: 20px;\n  width:auto;\n  height: auto;\n}\n\n::-webkit-scrollbar {\n  width: 0\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        -->           -->               {{item.setup}}          -->             -->               {{item.punchline}}                                                      Envoyer      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://official-joke-api.appspot.com/jokes/programming/ten'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/chat.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { GlobalHttpService } from './global-http.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService extends GlobalHttpService {\n\n\n  // url API\n   url = 'https://official-joke-api.appspot.com/jokes/programming/ten'\n\n\n  getMessages(): Observable {\n\n    return this._http.get(this.url)\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatTopBarComponent.html":{"url":"components/ChatTopBarComponent.html","title":"component - ChatTopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatTopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-top-bar/chat-top-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-top-bar\n            \n\n            \n                styleUrls\n                ./chat-top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                donnees\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-top-bar/chat-top-bar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        donnees\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-top-bar/chat-top-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-top-bar/chat-top-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-top-bar/chat-top-bar.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Input } from '@angular/core'\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-chat-top-bar',\n  templateUrl: './chat-top-bar.component.html',\n  styleUrls: ['./chat-top-bar.component.scss']\n})\nexport class ChatTopBarComponent implements OnInit {\n\n\n  @Input() donnees!: any;\n  data!: any\n\n  constructor(private _userService: UserService) { }\n\n  ngOnInit(): void {\n\n    this._userService.getUserCurrent().subscribe((response: any) => {\n      console.warn(response)\n      this.data = response\n\n    })\n\n    // console.warn(\"test\"+this.test)\n\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n     {{data.first_name}} \n\n    \n       {{data.last_name}} \n\n    \n    le input \n    {{test.email}}\n  \n\n{{data.first_name}}  -->\n\n\n\n  \n    \n     {{donnees.first_name}} \n     {{donnees.last_name}} \n \n\n  \n\n\n    \n\n    \n                \n                    ./chat-top-bar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{data.first_name}}            {{data.last_name}}         le input     {{test.email}}  {{data.first_name}}  -->           {{donnees.first_name}}      {{donnees.last_name}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatTopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatUserListComponent.html":{"url":"components/ChatUserListComponent.html","title":"component - ChatUserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatUserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-user-list/chat-user-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-user-list\n            \n\n            \n                styleUrls\n                ./chat-user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                myProfil\n                            \n                            \n                                profileUser\n                            \n                            \n                                searchBar\n                            \n                            \n                                showFiller\n                            \n                            \n                                userArray\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOpenModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _matDialog: MatDialog, _backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-user-list/chat-user-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenModal\n                        \n                    \n                \n            \n            \n                \nonOpenModal(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-user-list/chat-user-list.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        myProfil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFiller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/chat-user-list/chat-user-list.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { BackendService } from './../../services/backend.service';\nimport { ChatUserModalComponent } from './../../modals/chat-user-modal/chat-user-modal.component';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './../../models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { __values } from 'tslib';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n@Component({\n  selector: 'app-chat-user-list',\n  templateUrl: './chat-user-list.component.html',\n  styleUrls: ['./chat-user-list.component.scss']\n})\nexport class ChatUserListComponent implements OnInit {\n\n  showFiller = false;\n  // bar de recherche\n  searchBar: FormControl = new FormControl();\n\n  //tableau qui va recupere les donnees de l'api\n  users: User[] = []\n\n  myProfil!: any\n  //tableau\n  // userInfos!: User[]\n\n  //duplicata du tableau recu de l'api\n  userArray!: User[]\n\n  profileUser!: any\n\n  // on inject le service\n  constructor(private _userService: UserService, private _matDialog: MatDialog, private _backend: BackendService) { }\n\n  ngOnInit(): void {\n\n\n\n    //  * on recupere le profile dans le backend\n    this._backend.getProfileUserCurrent().subscribe((response: User) => {\n      this.myProfil = response\n      console.warn(response)\n    })\n\n    // service.methodedansservice.souscription(resultat de l'observable)\n    //*on recupere la liste des utilisateurs\n    // this._userService.getUsers().subscribe((result: User[]) => {\n    //   this.users = result\n    //   //on duplique le tableau users\n    //   this.userArray = [... this.users]\n    // })\n\n\n    this._userService.getProfile().subscribe((val: any) => {\n      console.warn(val)\n      this.myProfil = val.body\n      console.warn(this.myProfil)\n    })\n\n    // * getuserlist du backend\n    this._userService.getUsersList().subscribe((val: any) => {\n      console.warn(val)\n      this.users = val.body\n      console.warn(this.users)\n    })\n\n\n\n\n    //*la barre de recherche pour la liste de user\n    this.searchBar.valueChanges.subscribe((value: any) => {\n      // si j'ecris une valeur dans la barre de recherche\n      if (value) {\n        this.users = this.users.filter((user: any) => {\n          if (user) {\n            // tableau filtré\n            return (user.first_name).toLowerCase().includes(value.toLowerCase())\n          }\n        })\n      } else {\n        // je recupere le tableau d'origine\n        this.users = this.userArray\n      }\n\n    })\n\n    // // !version sans le backend\n    // // on affiche la personne qui s'est loguer\n    // // ! version sans le backend\n    // this._userService.getProfile().subscribe((response: any) => {\n\n    //   console.log(response)\n    //   this.profileUser = response\n    //   console.warn(response)\n\n    // })\n\n\n  }\n\n  // parametre c'est le user que j'ai cliqué\n  // ou en parametre user\n  // onOpenModal(i:number) {\n  onOpenModal(user: User) {\n    // on ouvre la modale , open(nomModat)\n    const modalRef = this._matDialog.open(ChatUserModalComponent, {\n      // toujours data\n      // data:{index:user}\n      data: { user: user }\n      // data: { index: this.users[i] }\n    })\n    // après la fermeture de la modale je souscris\n    modalRef.afterClosed().subscribe((responseFromModal: User) => {\n      if (responseFromModal) {\n        // une methode pour dire qu'on utilise cet utilisateur\n        // j'envoi l'info à travers un service à tous les components qui vont souscrire à cette observable\n        this._userService.setUserCurrent(user)\n      }\n\n    })\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n             {{myProfil.firstName}} \n             {{myProfil.lastName}} \n          \n        \n\n         -->\n         -->\n         -->\n          \n              Sidenav mode\n\n             -->\n          Toggle drawer -->\n         -->\n         -->\n\n\n\n        \n          \n            Auto-resizing sidenav\n            Lorem, ipsum dolor sit amet consectetur.\n            \n              Toggle extra text\n            \n          \n\n          \n            \n              Toggle sidenav\n            \n          \n\n        -->\n        \n          \n        \n        \n           -->\n          \n            \n             {{item.firstName}} {{item.lastName}} \n            \n               {{item.email}} \n            \n          \n        \n      \n    \n\n    \n\n    \n                \n                    ./chat-user-list.component.scss\n                \n                .container\n{\n  margin:0;\n\n  width:100%;\n  padding:0;\n  overflow-y: scroll;\n overflow-x: hidden;\nheight: 100vh;\n\n}\n::-webkit-scrollbar {\n  width: 0\n}\n\n// .example-container {\n//   width: 500px;\n//   height: 300px;\n//   border: 1px solid rgba(0, 0, 0, 0.5);\n// }\n\n// .example-sidenav-content {\n//   display: flex;\n//   height: 100%;\n//   align-items: center;\n//   justify-content: center;\n// }\n\n// .example-sidenav {\n//   padding: 20px;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       {{myProfil.firstName}}              {{myProfil.lastName}}                            -->         -->         -->                        Sidenav mode             -->          Toggle drawer -->         -->         -->                              Auto-resizing sidenav            Lorem, ipsum dolor sit amet consectetur.                          Toggle extra text                                                          Toggle sidenav                              -->                                             -->                                   {{item.firstName}} {{item.lastName}}                            {{item.email}}                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatUserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatUserModalComponent.html":{"url":"components/ChatUserModalComponent.html","title":"component - ChatUserModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatUserModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modals/chat-user-modal/chat-user-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-user-modal\n            \n\n            \n                styleUrls\n                ./chat-user-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-user-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                infos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onValidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(infos: any, _matDialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modals/chat-user-modal/chat-user-modal.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        infos\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/chat-user-modal/chat-user-modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/chat-user-modal/chat-user-modal.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onValidate\n                        \n                    \n                \n            \n            \n                \nonValidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/chat-user-modal/chat-user-modal.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modals/chat-user-modal/chat-user-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-user-modal',\n  templateUrl: './chat-user-modal.component.html',\n  styleUrls: ['./chat-user-modal.component.scss']\n})\nexport class ChatUserModalComponent implements OnInit {\n\n  // @Inject(MAT_DIALOG_DATA) public infos:any, pour recuperer info\n  // matDialogref pour envoyer donnees au parent\n  constructor(@Inject(MAT_DIALOG_DATA) public infos: any, private _matDialogRef: MatDialogRef) { }\n\n  ngOnInit(): void {\n    // console.log(this.infos)\n  }\n\n  // bouton ok\n  onValidate(): void {\n    //  fermer et envoyer info au parent , j'envoie data au component parent\n    // l'utilisateur choisi en parametre\n    this._matDialogRef.close(this.infos)\n  }\n\n  // bouton annuler\n  onCancel(): void {\n    this._matDialogRef.close()\n  }\n\n}\n\n    \n\n    \n        Hi {{item.first_name}} -->\n\n\n  \n    \n      Etes vous sur de vouloir parler avec \n      \n    \n    \n      \n        \n         {{infos.user.firstName}} \n\n        \n           {{infos.user.lastName}} \n           {{infos.user.email}} \n        \n      \n    \n    \n      done\n    \n    Annuler\n\n  \n\n\n    \n\n    \n                \n                    ./chat-user-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hi {{item.first_name}} -->            Etes vous sur de vouloir parler avec                                      {{infos.user.firstName}}                    {{infos.user.lastName}}            {{infos.user.email}}                             done        Annuler  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatUserModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlCountry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCountries\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCountries\n                        \n                    \n                \n            \n            \n                \ngetCountries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        urlCountry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://restcountries.com/v3.1/all\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { GlobalHttpService } from './global-http.service';\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'\nimport { UserService } from 'src/app/services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService extends GlobalHttpService {\n\n  // on recupere l'url de restcountries\n  // on initialise l'attribut\n  urlCountry = \"https://restcountries.com/v3.1/all\"\n\n  // surcharger\n  //  _http!: HttpClient\n  //  _userService!:UserService\n\n  // @ts-ignore\n  // constructor(@inject(data)) {\n  //   super(data, data)\n  //   console.warn(data)\n  // }\n\n  // il faut la class HttpClient\n  // getCountries()\n  getCountries(): Observable {\n    // on retourne un observable\n    return this._http.get(this.urlCountry)\n  }\n\n\n  // getUserList() {\n  //   this._userService\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Directory.html":{"url":"classes/Directory.html","title":"class - Directory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/directory-model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                nom\n                            \n                            \n                                    Public\n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nom: string, path: string, description: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/directory-model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nom\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/directory-model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/directory-model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/directory-model.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Directory {\n  public nom!: string;\n  public path!: string;\n  public description!: string;\n\n\n  constructor(nom: string, path: string, description: string) {\n    this.nom = nom;\n    this.path = path;\n    this.description = description;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectoryComponent.html":{"url":"components/DirectoryComponent.html","title":"component - DirectoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/directory/directory.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-directory\n            \n\n            \n                styleUrls\n                ./directory.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./directory.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                directories\n                            \n                            \n                                directoryForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_matDialog: MatDialog, _directoryService: DirectoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/directory/directory.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _directoryService\n                                                  \n                                                        \n                                                                        DirectoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/directory/directory.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/directory/directory.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        directories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Directory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/directory/directory.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directoryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/directory/directory.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\n\nimport { DataService } from 'src/app/services/data.service';\nimport { Directory } from 'src/app/models/directory-model';\nimport { DirectoryModalComponent } from './../../modals/directory-modal/directory-modal.component';\nimport { DirectoryService } from 'src/app/services/directory.service';\n\n@Component({\n  selector: 'app-directory',\n  templateUrl: './directory.component.html',\n  styleUrls: ['./directory.component.scss']\n})\nexport class DirectoryComponent implements OnInit {\n\n  // attribut\n  directories: Directory[] = [];\n\n  //  directories!:any[]\n\n  directoryForm!: FormGroup\n\n\n  constructor(private _matDialog: MatDialog,\n    private _directoryService: DirectoryService) { }\n\n  ngOnInit(): void {\n    console.log(this.directories)\n  }\n\n\n  openDialog(): void {\n    const dialogRef = this._matDialog.open(DirectoryModalComponent, {\n      enterAnimationDuration: '1000ms',\n      exitAnimationDuration: '1000ms'\n    })\n\n    // apres que la modale soit  la fermeture je recupere les resultat, on anticipe la fermeture\n    dialogRef.afterClosed().subscribe((responseFromModal: any) => {\n      console.log(responseFromModal)\n      let data = responseFromModal.data\n      this.directories.push(new Directory(data.nom, data.path, data.description))\n      console.log(data)\n    })\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n  \n    \n      Directories \n      \n        create_new_folder \n         Add directory\n\n      \n    \n    \n    \n      \n        \n          folder\n          \n            {{item.nom}}\n            {{item.path}}\n            {{item.description}}\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./directory.component.scss\n                \n                span {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Directories               create_new_folder          Add directory                                          folder                      {{item.nom}}            {{item.path}}            {{item.description}}                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectoryModalComponent.html":{"url":"components/DirectoryModalComponent.html","title":"component - DirectoryModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectoryModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modals/directory-modal/directory-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-directory-modal\n            \n\n            \n                styleUrls\n                ./directory-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./directory-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                directoryForm\n                            \n                            \n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseModal\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fb: FormBuilder, _directoryService: DirectoryService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modals/directory-modal/directory-modal.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _directoryService\n                                                  \n                                                        \n                                                                        DirectoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/directory-modal/directory-modal.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseModal\n                        \n                    \n                \n            \n            \n                \nonCloseModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/directory-modal/directory-modal.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/directory-modal/directory-modal.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/directory-modal/directory-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directoryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/directory-modal/directory-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/directory-modal/directory-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DirectoryService } from 'src/app/services/directory.service';\nimport { MatFormField } from '@angular/material/form-field';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, PatternValidator, Validators } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Directory } from 'src/app/models/directory-model';\nimport { observable } from 'rxjs';\n\n@Component({\n  selector: 'app-directory-modal',\n  templateUrl: './directory-modal.component.html',\n  styleUrls: ['./directory-modal.component.scss']\n})\nexport class DirectoryModalComponent implements OnInit {\n\n  directoryForm!: FormGroup\n  result!: any\n\n  constructor(\n    private _fb: FormBuilder, private _directoryService: DirectoryService, public dialogRef: MatDialogRef) {\n  }\n\n  ngOnInit(): void {\n    // initialiser\n    this.directoryForm = this._fb.group({\n      // id:[this.getRandomInit()],\n      nom: ['', Validators.required],\n      path: ['', Validators.pattern('[a-zA-Z0-9&?-_.]{2,}@+')],\n      // path: ['', Validators.required],\n      description: ['', Validators.minLength(10)]\n    })\n\n  }\n\n\n  onSubmit() {\n\n    // let { nom, path, description } = this.directoryForm.value\n    let { nom, path, description } = this.directoryForm.getRawValue()\n    let dir = new Directory(nom, path, description)\n    this._directoryService.postData(dir).subscribe(response => {\n      console.log(response)\n      this.dialogRef.close(response)\n    })\n\n  }\n  onCloseModal() {\n    this.dialogRef.close()\n  }\n\n\n}\n\n    \n\n    \n        Create directory\n\n  \n\n    \n      Nom\n      \n    \n\n    \n      Chemin\n      \n    \n\n    \n      Description\n       -->\n      \n    \n    \n      \n        Valider\n      \n        Annuler\n    \n  \n\n\n    \n\n    \n                \n                    ./directory-modal.component.scss\n                \n                .form {\n\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n\n\n  .full-width {\n    width: 100%;\n  }\n\n  .button {\n    margin-right: 20px;\n\n    span {\n      margin-right: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create directory            Nom                    Chemin                    Description       -->                            Valider              Annuler      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectoryModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DirectoryService.html":{"url":"injectables/DirectoryService.html","title":"injectable - DirectoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DirectoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/directory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dirSubject\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDirectory\n                            \n                            \n                                getDirectory\n                            \n                            \n                                postData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/directory.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDirectory\n                        \n                    \n                \n            \n            \n                \naddDirectory(dir: Directory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/directory.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dir\n                                    \n                                                Directory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectory\n                        \n                    \n                \n            \n            \n                \ngetDirectory(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/directory.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postData\n                        \n                    \n                \n            \n            \n                \npostData(formDirectory: Directory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/directory.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formDirectory\n                                    \n                                                Directory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dirSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/directory.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://reqres.in/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/directory.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Directory } from '../models/directory-model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectoryService {\n\n  url = 'https://reqres.in/api/users'\n  dirSubject = new Subject()\n\n  // on implemente, pour importer le service\n  constructor(private _http: HttpClient) { }\n\n\n  postData(formDirectory: Directory): Observable {\n    // urlApi,objet qui envoi un objet, j'envoi au backend\n    // lien service backend , envoi data post(urlApi, ce qu'on envoi un objet, le nom imposer par le backend)\n    return this._http.post(this.url, { data: formDirectory })\n    //\n  }\n\n  // methode qui retourne un observable\n  getDirectory(id: number): Observable {\n    // à la methode get je met l'url\n    return this._http.get(this.url)\n\n  }\n\n  addDirectory(dir: Directory): void {\n    let data = {\n      action: \"create\",\n      dir: dir\n    }\n    this.dirSubject.next(data)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FinderComponent.html":{"url":"components/FinderComponent.html","title":"component - FinderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FinderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/finder/finder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-finder\n            \n\n            \n                styleUrls\n                ./finder.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./finder.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/finder/finder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/finder/finder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/finder/finder.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, startWith } from 'rxjs';\n\nimport { job } from 'src/helpers/job';\n\n@Component({\n  selector: 'app-finder',\n  templateUrl: './finder.component.html',\n  styleUrls: ['./finder.component.scss']\n})\nexport class FinderComponent implements OnInit {\n\nopened=false\n\n  constructor() { }\n\n  ngOnInit(): void {\n// console.log(job)\n      // ds le userForm tu va filtrer les pays\n    // @ts-ignore\n    // this.filteredOptions = this.userForm?.get('country')?.valueChanges.pipe(\n    //   startWith(''),\n    //   map(value => this._filter(value || '')),\n    // );\n\n  }\n\n  // private _filter(value: string): string[] {\n  //   const filterValue = value.toLowerCase();\n  //   return this.option?.filter(option => option.toLowerCase().includes(filterValue));\n  // }\n\n}\n\n    \n\n    \n        \n  \n    Digilab\n    \n      menu\n    \n  \n\n\n\n\n  \n    \n      \n        account_circleProfil\n      \n      \n        chatChat\n      \n      \n        folder_openDirectory\n      \n      \n        person_searchFinder\n      \n    \n  \n  \n    \n      \n    \n    \n      Recherche\n      \n    \n  \n\n\n\n\n\n\n  \n    \n  \n\n  recherche\n  \n    \n  \n  \n    \n      Jobs\n    \n    \n      -->\n -->\n\n -->\n\n -->\n\n    -->\n -->\n\n\n -->\n\n    \n\n    \n                \n                    ./finder.component.scss\n                \n                .menu {\n  width: 100vw;\n  height: 5vh;\n}\n\n.image {\n  height: 30vh;\n  width: 100vw;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n\n  img {\n\n    height: 30vh\n  }\n\n}\n\n.recherche {\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n}\n\n.sidenav-container-finder {\n  height: 100%;\n  width: 100%;\n  margin: 0 !important;\n  padding: 0 !important;\n  display: flex;\n\n\n}\n\nmat-sidenav {\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Digilab          menu                          account_circleProfil                    chatChat                    folder_openDirectory                    person_searchFinder                                      Recherche                      recherche                    Jobs              --> --> --> -->    --> --> -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FinderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalHttpService.html":{"url":"injectables/GlobalHttpService.html","title":"injectable - GlobalHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/global-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/global-http.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/global-http.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DataService } from 'src/app/services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalHttpService {\n\n  // protected accessible pour les classes qui héritent\n  // pas les services que l'on a cree nous meme\n  constructor(protected _http: HttpClient) { }\n\n\n  // test methode utilisé dans register.ts dans le ngOnInit\n  getProfileList(): string {\n\n    return ''\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                tkn\n                            \n                            \n                                user\n                            \n                            \n                                userLog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, _backend: BackendService, _fb: FormBuilder, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tkn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: '',\n    password: '',\n    avatar: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:29\n                        \n                    \n\n            \n                \n                    on cree un objet\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { BackendService } from 'src/app/services/backend.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  //on instancie la class User\n  user = new User()\n  // stock token\n  tkn!: any\n  // user!: any\n  loginForm!: FormGroup\n\n  // on cree un objet\n\n  /**\n   * on cree un objet\n   */\n  userLog = {\n    email: '',\n    password: '',\n    avatar: '',\n  }\n\n  constructor(private route: Router, private _backend: BackendService, private _fb: FormBuilder, private _userService: UserService) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = this._fb.group({\n      // id:[this.getRandomInit()],\n      email: [this.user.email, Validators.required],\n      password: [this.user.password, Validators.required]\n    })\n  }\n\n\n  onSubmit() {\n\n    // *on recupere les données du formulaire\n    const form = this.loginForm.value\n\n    // ? 1ERE version sur plusieurs lignes\n    // ? this.user.firstName=form.nom\n    // 2eme version\n    // on va fusionner les deux objets\n    // * 2eme version,   je vais affecter a this.user la fusion, form vient fusionner au user\n    this.user = Object.assign(this.user, form)\n\n\n    this._userService.login(this.user).subscribe((response: any) => {\n      this.tkn = response.body.token\n\n      console.log(response);\n\n      localStorage.setItem('token', this.tkn)\n      this.route.navigate(['overview'])\n    })\n\n\n    // *on envoie le formulaire login sur la route login\n    // this._backend.postLoginUser(this.user).subscribe((response: any) => {\n    //   console.log('token' + response.token)\n    //   this.tkn = response.token\n\n    //   // *on cree un objet pour conserver l'email et le token\n    //   let dataLogin = {\n    //     email: this.user.email,\n    //     token: this.tkn\n    //   }\n    //   //* on stock dans le localStorage\n    //   localStorage.setItem('digichat-token', JSON.stringify(dataLogin))\n\n    //   //* on redirige après avoir reçu le token\n    //   // d'abord verifier si on est ok avec le token\n    //   // j'utilise l'attribut route  et la  methode qui attend un tableau, on met la route à atteindre\n    //   this.route.navigate(['/overview'])\n\n    // })\n\n\n    // //* setItem(key, value)\n    // //!on enregistre dans localStorage\n    // localStorage.setItem('token', this.tkn)\n\n    // const mailValue = this.loginForm.value.email;\n    // // choisir un avatar\n    // this._userService.getUsers().subscribe((result: any) => {\n    //   // recuperer info\n    //   // fait une copie du tableau equivaut this.userArray=result\n    //   const avatarUser = result[2].avatar\n    //   // on recupere les infos du formulaires\n    //   const user = { email: mailValue, avatar: avatarUser }\n    //   // on va installer une nouvelle valeur\n    //   //* user est un objet localstorage veut du json\n    //   localStorage.setItem('user', JSON.stringify(user));\n\n    // })\n\n\n\n  }\n\n}\n\n    \n\n    \n        login works!\n Exemple Template Driven Form -->\n\n  \n    \n      \n        LOGIN\n         -->\n\n -->\n\n          \n            Email\n             on ajoute name et la directive ngModule -->\n\n          \n          \n            Password\n            \n          \n          \n            Valider\n          \n        \n        Vous n'avez pas encore de compte?\n        Cliquer Iciici pour vous inscrire\n      \n    \n  \n -->\n\n\n  \n    \n      \n        Connexion\n        \n\n          \n\n            \n              Email\n              \n            \n\n            \n              Password\n              \n            \n\n            \n              \n                Valider\n              \n\n            \n          \n          Vous n'avez pas encore de compte?\n          Créer un compte ici\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .form {\n  display: flex;\n  flex-direction: column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'login works! Exemple Template Driven Form -->                    LOGIN         --> -->                      Email             on ajoute name et la directive ngModule -->                                Password                                            Valider                          Vous n\\'avez pas encore de compte?        Cliquer Iciici pour vous inscrire             -->                    Connexion                                            Email                                                    Password                                                                    Valider                                              Vous n\\'avez pas encore de compte?          Créer un compte ici                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                content\n                            \n                            \n                                    Optional\n                                date\n                            \n                            \n                                    Optional\n                                friendID\n                            \n                            \n                                    Optional\n                                roomID\n                            \n                            \n                                    Optional\n                                userID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        friendID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roomID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Room } from \"./room\"\nimport { User } from \"./user\"\n\nexport class Message {\n  readonly _id?:string\n  userID?:User[]\n  roomID?:Room[]\n  friendID?:User[]\n  date?:Date\n  content?:string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/overview/overview.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDisconect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_backend: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/overview/overview.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/overview/overview.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDisconect\n                        \n                    \n                \n            \n            \n                \nonDisconect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/overview/overview.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/overview/overview.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { BackendService } from './../../services/backend.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\nopened=true\n\n  constructor(private _backend:BackendService) { }\n\n  ngOnInit(): void {\n   // recuperer le profil de l'utilisateur courant\n\n  }\n\n  onDisconect(){\n\nthis._backend.clearToken()\n\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n     -->\n\n    \n      \n        \n          menu\n        \n       -->\n\n\n\n      \n        \n          Digilab\n          \n            menu\n          \n          logout\n        \n      \n\n\n      \n        \n          \n\n            \n              account_circleProfil\n            \n            \n              chatChat\n            \n            \n              folder_openDirectory\n            \n            \n              person_searchFinder\n            \n\n          \n        \n        \n          \n            \n          \n        \n      \n\n\n\n      \n    \n  \n-->\n    \n\n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                .container-fluid {\n  // min-height: 100vh !important;\n  overflow: hidden;\n  height: 100vh;\n  width: 100vw;\n  margin: 0;\n  padding: 0;\n\n  .navbar {\n\n    width: 100vw;\n  }\n}\n\n.sidenav-container,\n.sidenav-container-finder {\n  height: 100%;\n  width: 100%;\n  margin: 0 !important;\n  padding: 0 !important;\n  display: flex;\n\n\n}\n\nmat-sidenav {\n  width: 200px;\n}\n\nmat-sidenav-content {\n  width: 800px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 -->                            menu               -->                        Digilab                      menu                    logout                                                                account_circleProfil                                      chatChat                                      folder_openDirectory                                      person_searchFinder                                                                                                -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilComponent.html":{"url":"components/ProfilComponent.html","title":"component - ProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profil/profil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profil\n            \n\n            \n                styleUrls\n                ./profil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                myProfil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_backend: BackendService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profil/profil.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profil/profil.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        myProfil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { BackendService } from 'src/app/services/backend.service';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.scss']\n})\nexport class ProfilComponent implements OnInit {\nmyProfil!:any\n  constructor( private _backend: BackendService, private _userService : UserService) { }\n\n  ngOnInit(): void {\n\n     // *on recupere le profile\n     this._userService.getProfile().subscribe((response: User) => {\n\n      this.myProfil = response\n      console.warn(response)\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n     \n\n\n\n\n\n    Profile\n\n    \n      \n        Name\n      \n      \n    \n    \n      \n        Prénom\n      \n      \n    \n    \n      \n        Email\n      \n      local_post_office\n\n    \n\n\nprofil works!\n on utilise isActive seulement si isActive est à true -->\n\n\n    -->\n\n    \n        \n           -->\n\n\n\n          \n               {{ coordonnee.societyName | uppercase }} -->\n{{ coordonnee.societyName}}\n               {{ coordonnee.rating}}\n               {{ coordonnee.jobTitle}}\n               {{ coordonnee.wage}}\n               {{ coordonnee.location}} -->\n{{ firstname }} -->\n\n        \n\n    \n      {{ coordonnee.jobTitle }}\n      {{ coordonnee.wage }}\n\n      {{ coordonnee.location }}\n    \n    ok\n  \n\n -->\n\n -->\n\n    \n\n    \n                \n                    ./profil.component.scss\n                \n                .profile{\n  display: flex;\n  flex-direction:column ;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Profile                  Name                                  Prénom                                  Email            local_post_office    profil works! on utilise isActive seulement si isActive est à true -->    -->                       -->                         {{ coordonnee.societyName | uppercase }} -->{{ coordonnee.societyName}}               {{ coordonnee.rating}}               {{ coordonnee.jobTitle}}               {{ coordonnee.wage}}               {{ coordonnee.location}} -->{{ firstname }} -->                  {{ coordonnee.jobTitle }}      {{ coordonnee.wage }}      {{ coordonnee.location }}        ok   --> -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                countries\n                            \n                            \n                                countriesFiltre\n                            \n                            \n                                date\n                            \n                            \n                                errorPass\n                            \n                            \n                                filteredOptions\n                            \n                            \n                                myControl\n                            \n                            \n                                option\n                            \n                            \n                                options\n                            \n                            \n                                user\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                addSkills\n                            \n                            \n                                filterData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeSkill\n                            \n                            \n                                sortCountries\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skills\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, _matDialog: MatDialog, _dataService: DataService, _fb: FormBuilder, _backend: BackendService, _snackBar: MatSnackBar, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _backend\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSkills\n                        \n                    \n                \n            \n            \n                \naddSkills()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterData\n                        \n                    \n                \n            \n            \n                \nfilterData(laData: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    laData\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSkill\n                        \n                    \n                \n            \n            \n                \nremoveSkill(skillIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skillIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortCountries\n                        \n                    \n                \n            \n            \n                \nsortCountries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countriesFiltre\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorPass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        option\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"sam\", \"toto\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skills\n                    \n                \n\n                \n                    \n                        getskills()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:108\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, map, startWith } from 'rxjs'\n\nimport { BackendService } from 'src/app/services/backend.service';\nimport { DataService } from 'src/app/services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { UserModalComponent } from 'src/app/modals/user-modal/user-modal.component';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  //skills!: FormArray\n  avatar!: string\n  // const form = this.userForm.value;\n  // un attribut recoit toute les info du formulaire\n  userForm!: FormGroup;\n  errorPass = true\n  options = [\"sam\", \"toto\"]\n  countries!: any[]\n  countriesFiltre!: any[]\n  // formControl\n  myControl = new FormControl()\n  // on declare l'attribut option\n  // retourne un tableau\n  option!: string[];\n  filteredOptions: Observable | undefined;\n  date!: any\n  // on instancie un nouvel utilisateur\n  user = new User()\n\n  // on importe\n  constructor(private route: Router, private _matDialog: MatDialog,\n    private _dataService: DataService, private _fb: FormBuilder,\n    private _backend: BackendService, private _snackBar: MatSnackBar, private _userService: UserService) { }\n\n  ngOnInit(): void {\n\n    // initialiser avatar\n    this.avatar = \"https://picsum.photos/200\"\n    // je construis mon formulaire, attribut group(un objet)\n    this.userForm = this._fb.group({\n      username: [this.user.username, Validators.required],\n      firstName: [this.user.firstName, Validators.required],\n      lastName: [this.user.lastName, Validators.required],\n      avatar: [this.avatar],\n      password: [this.user.password, [Validators.minLength(8),\n      Validators.maxLength(12)]],\n      confirmPassword: [\"\", Validators.required],\n      dateOfBirth: this.user.dateOfBirth,\n      email: [this.user.email, [\n        Validators.email,\n        Validators.required]],\n      country: this.user.country,\n      city: this.user.city,\n      street: [this.user.street, Validators.required],\n      zipCode: this.user.zipCode,\n      phoneNumber: this.user.phoneNumber,\n      skills: new FormArray([])\n    })\n\n\n    //**************  test heritage, la methode est dans la class mere GlobalHttpService\n    this._dataService.getProfileList()\n\n    // *********** correction\n    this._dataService.getCountries().subscribe((countries: any) => {\n      this.countries = countries;\n      this.option = this.sortCountries()\n      // console.log(this.option)\n    })\n\n\n    // ds le userForm tu va filtrer les pays\n    // @ts-ignore\n    this.filteredOptions = this.userForm?.get('country')?.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || '')),\n    );\n\n  }\n\n  // // remove une competence\n  removeSkill(skillIndex: number) {\n    this.skills.removeAt(skillIndex)\n  }\n\n  //add une competence\n  addSkills() {\n\n    // const competence = new FormControl('')\n    // on le push dans le tableau skills\n    this.skills.push(new FormControl(''));\n  }\n\n  //un getter pour recuperer tous les skills, je retourne les info de la propiete  skills\n  // nous retourne les info de skills\n  get skills(): FormArray {\n    // alias as FormArray\n    return this.userForm.get('skills') as FormArray;\n  }\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.option?.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n\n  sortCountries(): string[] {\n    // je retourne tableau trier , dans chaque element du tableau qu'on recoit de l'Api je recupere le name et le met dans le nouveau tableau, dans name on a un autre objet common:'nompays'\n    return this.countries.map((countrieName: any) => countrieName.name.common)\n  }\n\n  filterData(laData: string) {\n    this.countriesFiltre = this.options.filter(item => {\n      return item.toLocaleLowerCase().indexOf(laData.toLowerCase()) > -1\n    })\n  }\n\n\n  onSubmit(): void {\n\n    const profil = this.userForm.value\n    const password = profil.password\n    const confirmPass = profil.confirmPassword\n\n    if (password !== confirmPass) {\n      this.errorPass = true;\n      this._snackBar.open('mot de passe different', 'ok', {\n        verticalPosition: 'top',\n        horizontalPosition: 'end',\n        duration: 2000,\n        panelClass: ['red-snackbar']\n\n      })\n      return;\n    }\n\n    // toute les clés avec les valeur du formulaire\n    // console.log(this.profilForm.value)\n\n    // on recupere les donnees avec userform.value, on renvoie a l'api\n    const form = this.userForm.value\n\n    // 1ERE version sur 10 ligne\n    // this.user.firstName=form.nom\n    // 2eme version\n    // on va fusionner les deux objets\n    //   je vais affecter a this user la fusion, form vient fusionner au user\n    this.user = Object.assign(this.user, form)\n\n    // pour les skills\n    this.user.skills = this.userForm.value.skills\n\n\n    // this._userService.postData(form).subscribe((response: any) => {\n    //     console.log(response)\n    //     this._matDialog.open(UserModalComponent,\n    //         {\n    //             data: { date: response.createdAt, infos: response.data}\n    //         })\n\n\n    //     console.log(form)\n\n    // })\n\n    this._userService.register(this.user).subscribe((response: any) => {\n\n      let { headers, status, body } = response\n      console.log(response)\n\n      localStorage.setItem('token', response.token)\n\n    this.route.navigate(['/overview'])\n    console.log(this.userForm.value)\n    \n    })\n\n    // this._backend.postUser(this.user).subscribe((response: any) => {\n\n    //   console.log('envoyer a la bd ' + response)\n    //   console.log('token' + response.token)\n\n    //   localStorage.setItem('token', response.token)\n\n    //   // this._matDialog.open(UserModalComponent,\n    //   //   {\n    //   //     data: { date: response.createdAt, infos: response.data }\n    //   //   })\n\n    // })\n\n\n  }\n\n  // getCountry() {\n  //   // this.profileService.getData().subscribe(response =>\n  //   //   this.options = response)\n  //   this.dataService.getData().subscribe((value: any) => (this.pays = value.name));\n\n\n  // }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Register\n          \n\n            \n              \n            \n\n            \n              \n            \n\n            \n              \n            \n\n\n            \n              \n            \n\n\n            \n              \n            \n\n\n\n            \n              \n            \n\n            \n              \n            \n\n            \n              \n                Pays\n              \n              \n              \n                \n                 -->\n\n                \n                 -->\n                \n                  {{option}}\n                \n              \n            \n\n            \n              \n            \n            \n\n            \n               E-mail\n              \n              \n            \n\n\n            \n               Password\n              \n              \n            \n\n            \n               Confirme Password\n              \n              \n              password\n            \n\n  errorPass\n -->\n\n\n\n             -->\n             -->\n\n            \n            qualites\n            \n\n              \n              \n                \n                  \n                \n                delete_forever\n\n              \n             -->\n            \n              add\n            \n            Valider\n\n          \n        \n      \n    \n  \n\n\n\n\n\n  Favorite Fruits\n  \n    \n      {{fruit}}\n      \n        cancel\n      \n    \n    \n  \n  \n    \n      {{fruit}}\n    \n  \n   -->\n\n\n              \n                {{chip.name}}\n              \n             -->\n\n\n\n\n              \n              X\n             -->\n\n\n\n\n\nlogin works!\n  Exemple Template Driven Form -->\n\n  \n    \n      Pays\n    \n    \n      -->\n\n -->\n\n\n -->\n\n        {{option}}\n      \n    \n  \n -->\n\n\n\n -->\n -->\nInformations de connexion  -->\n\n    Nom d'utilisateur\n    \n  \n  \n    \n      Mot de passe\n      \n    \n    \n      Confirmer votre mot de passe\n      \n    \n  \n    -->\n\nHero name: \n\n  Add\n -->\n\n\n\n  \n    \n      \n        REGISTER\n         -->\n\n -->\n\n\n          Date Naissance\n          on ajoute name et la directive ngModule -->\n\n\n          {{date|age}}\n        \n        \n          Pays\n          on ajoute name et la directive ngModule -->\n\n        \n        \n          Email\n          on ajoute name et la directive ngModule -->\n\n        \n        \n          Password\n          \n        \n        \n          Confirm password\n          \n        \n        \n          Qualité\n          \n         -->\n\n\n          Valider\n        \n         -->\n\n    \n  \n  -->\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .form-container {\n  width: 90%;\n\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Register                                                                                                                                                                                                                                                                                                                              Pays                                                                           -->                                 -->                                  {{option}}                                                                                                                       E-mail                                                                   Password                                                                   Confirme Password                                          password              errorPass -->             -->             -->                        qualites                                                                                                          delete_forever                           -->                          add                        Valider                                Favorite Fruits            {{fruit}}              cancel                            {{fruit}}         -->                              {{chip.name}}                           -->                            X             -->login works!  Exemple Template Driven Form -->            Pays              --> --> -->        {{option}}             --> --> -->Informations de connexion  -->    Nom d\\'utilisateur                  Mot de passe                    Confirmer votre mot de passe                -->Hero name:   Add -->                    REGISTER         --> -->          Date Naissance          on ajoute name et la directive ngModule -->          {{date|age}}                          Pays          on ajoute name et la directive ngModule -->                          Email          on ajoute name et la directive ngModule -->                          Password                                    Confirm password                                    Qualité                   -->          Valider                 -->        -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseApiUser.html":{"url":"classes/ResponseApiUser.html","title":"class - ResponseApiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseApiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response-api-user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: User[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/response-api-user.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        User[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/response-api-user.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"./user\"\n\nexport class ResponseApiUser {\n\n  public data:User[]\n\n  constructor(data:User[]){\n    this.data=data\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(isAdmin)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isAdmin\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from \"./message\";\nimport { Room } from \"./room\";\n\n// exemple heritage\nclass Role {\n\n  // inférence TS devine le type\n  public isAdmin = true;\n\n  constructor(isAdmin = false) {\n    this.isAdmin = isAdmin\n  }\n}\n\n// extends = herite de Role pour acceder aux attributs de cette class\n// avec super(attribut de la class herite)\n// on oblige à implementer getEmail(), implements pour utiliser cette interface\nexport class User {\n\n  username!: string\n  firstName!: string\n  lastName!: string\n  avatar!: string\n  readonly _id?: string\n  password?: string\n  email?: string\n  roomID?: Room[]\n  sentMessagesID?: Message[]\n  receivedMessagesID?: Message[]\n  isLoggedIn?: boolean\n  token?: string\n  country?: string\n  city?: string\n  street?: string\n  zipCode?: number\n  phoneNumber?: string\n  dialCode?: string\n  skills?: string[]\n  role?: string\n  friendsID?: User[]\n  dateOfBirth?:string | Date\n\n\n  constructor() {\n\n\n    // this.username = firstName;\n    // this.lastName = lastName;\n    // this.email = email;\n    // this.avatar = imgUrl;\n  }\n\n  // getEmail(): string {\n  //   // return this.email\n  // }\n\n}\n\n// on cree une interface dans {} on déclare les methodes\n// pour imposer des attributs et des methodes à ceux qui utilisent ces interfaces\n// interface IUser {\n\n//     // obligatoire\n//     age: number;\n//     email: string;\n\n//     //on n'implemente pas on declare avec le type de retour\n//     getEmail(): string;\n// }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Room.html":{"url":"classes/Room.html","title":"class - Room","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/room.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                messagesID\n                            \n                            \n                                    Optional\n                                ownersID\n                            \n                            \n                                    Optional\n                                usersID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/room.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messagesID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/room.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownersID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/room.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        usersID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/room.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from \"./message\";\nimport { User } from \"./user\";\nimport { _DisposeViewRepeaterStrategy } from \"@angular/cdk/collections\";\n\nexport class Room {\n\n  readonly _id?: string\n  ownersID?: User[]\n  usersID?: User[]\n  messagesID?: Message[]\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarLeftComponent.html":{"url":"components/SideBarLeftComponent.html","title":"component - SideBarLeftComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarLeftComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/side-bar-left/side-bar-left.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar-left\n            \n\n            \n                styleUrls\n                ./side-bar-left.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-bar-left.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/side-bar-left/side-bar-left.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/side-bar-left/side-bar-left.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/side-bar-left/side-bar-left.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar-left',\n  templateUrl: './side-bar-left.component.html',\n  styleUrls: ['./side-bar-left.component.scss']\n})\nexport class SideBarLeftComponent implements OnInit {\n\n  opened=true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Profil\n  -->\n      Chat  -->\n    Répertoire  -->\n\n  \n    Digilab\n    menu\n  \n\n\n-->\n   \n    \n         -->\n\n        account_circleProfil\n        chatChat\n        folder_openDirectory\n        person_searchFinder -->\n      \n    \n      \n\n\n\n\n\n\n      Finder  -->\n   -->\n -->\n\n  Inbox\n  Snoozed\n  Important\n  Sent\n  Drafts\n  All Mail\n -->\n \n   \n    My Profile\n      \n        notifications_active\n        account_circle\n      \n     -->\n    \n\n\n    \n      \n        manage_accountsProfil\n        chatChat\n        all_inboxDrop\n      \n   -->\n\n\n  \n    \n      \n        menu\n      \n      \n        \n        search\n        mail\n        inbox\n      \n    \n     -->\n  \n\n -->\n\n    \n\n    \n                \n                    ./side-bar-left.component.scss\n                \n                // .container-fluid {\n//   min-height: 100vh !important;\n//   display: flex;\n//   align-content: space-between;\n//   height: 100%;\n//   width: 100%;\n//   padding:0%;\n//   margin:0%;\n\n// }\n\n// mat-list-item:hover {\n\n//   background-color: rgb(205, 205, 205);\n// }\n\n// a {\n//   text-decoration: none;\n// }\n\n// a:hover {\n//   text-decoration: none;\n//   color: white\n// }\n\n// .container-fluid{\n//   margin: 0 !important;\n//   padding:0 !important;\n//   width:100vw;\n//   height: 100vh;\n//   display: flex;\n//   justify-content: center;\n\n// }\n\n\n.sidenav-container {\n  height: 100%;\n  width: 100%;\n  margin:0 !important;\n  padding:0 !important;\n  display: flex;\n\n\n}\nmat-sidenav{\n  width: 200px;\n}\nmat-sidenav-content{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n// // .list{\n// //   display: flex;\n// //   flex-direction: column;\n// //   justify-content: space-between;\n// // }\n//   .sidenav {\n//     // width: 280px;\n//     width: 100%;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     background-color: #f5f5f5;\n\n//     .mat-toolbar {\n//       width: 100%;\n//       height: auto;\n//       display: flex;\n//       justify-content: space-between;\n//       background: inherit;\n//       color: #311b92;\n//       margin: 5px;\n//     }\n\n\n\n//     }\n//   }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Profil  -->      Chat  -->    Répertoire  -->      Digilab    menu  -->                -->        account_circleProfil        chatChat        folder_openDirectory        person_searchFinder -->                      Finder  -->   --> -->  Inbox  Snoozed  Important  Sent  Drafts  All Mail -->        My Profile              notifications_active        account_circle           -->                      manage_accountsProfil        chatChat        all_inboxDrop         -->                    menu                            search        mail        inbox               -->   -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideBarLeftComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideBarRightComponent.html":{"url":"components/SideBarRightComponent.html","title":"component - SideBarRightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideBarRightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/side-bar-right/side-bar-right.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-bar-right\n            \n\n            \n                styleUrls\n                ./side-bar-right.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-bar-right.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/side-bar-right/side-bar-right.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/side-bar-right/side-bar-right.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar-right',\n  templateUrl: './side-bar-right.component.html',\n  styleUrls: ['./side-bar-right.component.scss']\n})\nexport class SideBarRightComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./side-bar-right.component.scss\n                \n                .container\n{display: flex;\n  justify-content: center;\n  \n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideBarRightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/token.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_backendService: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/token.interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/token.interceptor.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Observable, catchError } from 'rxjs';\n\nimport { BackendService } from '../services/backend.service';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenService } from './../services/token.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private _backendService: BackendService, private _snackBar: MatSnackBar) { }\n\n  //* methode recoit la requete et le gestionnaire de requette\n  //* il se positionne a la sortie, il ecoute a chaque fois il voit quelque chose sortir il intercepte et on peut le modifier\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n\n    // si j'ai un token je dois inserer le token dans le header\n    // *on recupere le token\n    const token = this._backendService.getToken()\n\n    let clone = request\n\n    console.log(request.url)\n\n    // * si on atteind le backend, propriete de httpRequest\n    if (request.url.includes(environment.API_URL+\"api\")) {\n\n      //* on cloner un autre headers et on ajoute 'Authorisation'\n      // * car on ne peut pas modifier on ne peut pas .append\n      clone = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${token}`)\n      })\n\n      console.log(clone)\n      // le gestionnaire de requete renvoi la requete qu'il a vu au debut\n      // //\n      //   return next.handle(request);\n    }\n    return next.handle(clone).pipe(\n      // * catchError operateur rxjs,\n      // ! attrape les erreurs\n      catchError((error: HttpErrorResponse) => {\n        let message = \"\"\n        switch (error.status) {\n          case 400: message = \"Badrequest, erreur Identifiant ou Mot de passe \"\n            break;\n          case 401: message = \"Unauthorized\"\n            break;\n        }\n\n        this._snackBar.open(message, 'ok', { verticalPosition: 'top' })\n        // * renvoi la requete soit clone=request soit clone=requete.clone....\n        return next.handle(clone)\n\n      })\n\n\n\n    )\n  }\n}\n\n  // on va exporter un token intercpteur provider\n  // on construit notre provider\n  export const TokenInterceptorProvider = {\n    // il se met au bon endroit\n    provide: HTTP_INTERCEPTORS,\n    // on utilise la class tokenInterceptor qui a ete genere toute seule ici\n    useClass: TokenInterceptor,\n    // on met a disposition partout\n    multi: true\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/token.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfileUserCurrent\n                            \n                            \n                                getToken\n                            \n                            \n                                postLoginUser\n                            \n                            \n                                postUser\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileUserCurrent\n                        \n                    \n                \n            \n            \n                \ngetProfileUserCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/token.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/token.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postLoginUser\n                        \n                    \n                \n            \n            \n                \npostLoginUser(form: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/token.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUser\n                        \n                    \n                \n            \n            \n                \npostUser(form: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/token.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        urlDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/token.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { GlobalHttpService } from './global-http.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService extends GlobalHttpService {\n\n\n\n  //* url de base pour le backend\n  urlDB = 'http://localhost:3000/api/users'\n\n\n\n  // * envoie les infos register au backend >>>>>>>> route /register\n  postUser(form: User): Observable {\n    return this._http.post(this.urlDB + \"/register\", form)\n  }\n\n  // * envoie les infos login au backend >>>>>>>>>> route /login\n  postLoginUser(form: User): Observable {\n    return this._http.post(this.urlDB + \"/login\", form)\n  }\n\n  // Cette méthode permet de récupérer le token via register\n  getToken():string | null {\n    // on recupere directement notre objet\n    // const newTkn = JSON.parse(localStorage.getItem('digichat-token'))\n    // return newTkn.token\n    return localStorage.getItem('token')\n  }\n\n  // * on recupere tous les infos de la personne qui se connecte\n  getProfileUserCurrent(): Observable {\n    const headers = new HttpHeaders().append(\"Authorization\", `Bearer ${this.getToken()}`)\n    // * on recupere les infos du profile de la personne qui se connecte >>>>>>>> route profile\n    return this._http.get(this.urlDB + \"/profile\", { headers: headers })\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                avatar\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                    Optional\n                                dialCode\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                friendsID\n                            \n                            \n                                    Optional\n                                isLoggedIn\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Optional\n                                receivedMessagesID\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                roomID\n                            \n                            \n                                    Optional\n                                sentMessagesID\n                            \n                            \n                                    Optional\n                                skills\n                            \n                            \n                                    Optional\n                                street\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                username\n                            \n                            \n                                    Optional\n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        friendsID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        receivedMessagesID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roomID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sentMessagesID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from \"./message\";\nimport { Room } from \"./room\";\n\n// exemple heritage\nclass Role {\n\n  // inférence TS devine le type\n  public isAdmin = true;\n\n  constructor(isAdmin = false) {\n    this.isAdmin = isAdmin\n  }\n}\n\n// extends = herite de Role pour acceder aux attributs de cette class\n// avec super(attribut de la class herite)\n// on oblige à implementer getEmail(), implements pour utiliser cette interface\nexport class User {\n\n  username!: string\n  firstName!: string\n  lastName!: string\n  avatar!: string\n  readonly _id?: string\n  password?: string\n  email?: string\n  roomID?: Room[]\n  sentMessagesID?: Message[]\n  receivedMessagesID?: Message[]\n  isLoggedIn?: boolean\n  token?: string\n  country?: string\n  city?: string\n  street?: string\n  zipCode?: number\n  phoneNumber?: string\n  dialCode?: string\n  skills?: string[]\n  role?: string\n  friendsID?: User[]\n  dateOfBirth?:string | Date\n\n\n  constructor() {\n\n\n    // this.username = firstName;\n    // this.lastName = lastName;\n    // this.email = email;\n    // this.avatar = imgUrl;\n  }\n\n  // getEmail(): string {\n  //   // return this.email\n  // }\n\n}\n\n// on cree une interface dans {} on déclare les methodes\n// pour imposer des attributs et des methodes à ceux qui utilisent ces interfaces\n// interface IUser {\n\n//     // obligatoire\n//     age: number;\n//     email: string;\n\n//     //on n'implemente pas on declare avec le type de retour\n//     getEmail(): string;\n// }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/user.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user/user.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// on importe le service\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n\n  dataUser!: any\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n\n    // je souscri à l'abonnement\n    // this.userService.getUsers().subscribe((value: any) => (this.dataUser = value.data));\n\n    // this.userService.getUser().subscribe((value: any) => {\n    //   console.log(value.data)\n    // })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Liste\n\n        \n        \n          \n            \n             {{user.first_name}} \n\n            \n               {{user.last_name}} \n               {{user.email}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Liste                                                   {{user.first_name}}                            {{user.last_name}}                {{user.email}}                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return true;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserModalComponent.html":{"url":"components/UserModalComponent.html","title":"component - UserModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modals/user-modal/user-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-modal\n            \n\n            \n                styleUrls\n                ./user-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/modals/user-modal/user-modal.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/user-modal/user-modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modals/user-modal/user-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DIALOG_DATA } from '@angular/cdk/dialog';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n\n\n@Component({\n  selector: 'app-user-modal',\n  templateUrl: './user-modal.component.html',\n  styleUrls: ['./user-modal.component.scss']\n})\nexport class UserModalComponent implements OnInit {\n\n  // results!: any\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  ngOnInit(): void {\n     console.log(this.data)\n  }\n  // getFloatLabelValue(): FloatLabelType {\n  //   return this.floatLabelControl.value || 'auto';\n  // }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Nom : {{data.infos.firstName}}\n  \n\n  \n    Prénom : {{data.infos.lastName}}\n  \n\n  \n    Pseudo : {{data.infos.username}}\n  \n\n  \n    Age : {{data.infos.dateOfBirth | age}}\n  \n\n  \n    Mail : {{data.infos.email}}\n  \n\n  \n    Rue : {{data.infos.street}}\n  \n\n  \n    Code Postale : {{data.infos.zipCode}}\n  \n\n  \n    Ville : {{data.infos.city}}\n  \n\n  \n    Pays : {{data.infos.country}}\n  \n\n  \n    mail : {{data.infos.email}}\n  \n\n  \n\n    Date : {{data.dateOfBirth | date: \"dd/MM/yyyy, à hh:mm\"}}\n  \n\n  \n    \n      Qualité :\n      \n        {{i}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Nom : {{data.infos.firstName}}        Prénom : {{data.infos.lastName}}        Pseudo : {{data.infos.username}}        Age : {{data.infos.dateOfBirth | age}}        Mail : {{data.infos.email}}        Rue : {{data.infos.street}}        Code Postale : {{data.infos.zipCode}}        Ville : {{data.infos.city}}        Pays : {{data.infos.country}}        mail : {{data.infos.email}}        Date : {{data.dateOfBirth | date: \"dd/MM/yyyy, à hh:mm\"}}              Qualité :              {{i}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _apiUrl\n                            \n                            \n                                currentUser\n                            \n                            \n                                reponses\n                            \n                            \n                                userProfile\n                            \n                            \n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                getToken\n                            \n                            \n                                getUserCurrent\n                            \n                            \n                                getUsersList\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                            \n                                setUserCurrent\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:48\n                \n            \n\n\n            \n                \n                     envoie donnees register à la base de donnee\n//  *\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserCurrent\n                        \n                    \n                \n            \n            \n                \ngetUserCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersList\n                        \n                    \n                \n            \n            \n                \ngetUsersList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginValues: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginValues\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(registerValues: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerValues\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserCurrent\n                        \n                    \n                \n            \n            \n                \nsetUserCurrent(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.API_URL}api/users`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reponses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({})\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable, Subject, map, of } from 'rxjs'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Directory } from '../models/directory-model';\nimport { GlobalHttpService } from './global-http.service';\nimport { Injectable } from '@angular/core';\nimport { ResponseApiUser } from './../models/response-api-user';\nimport { User } from './../models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends GlobalHttpService {\n\n  userProfile = {}\n\n\n  reponses!: []\n  // observable qui permet de souscrire\n  currentUser = new Subject()\n\n  // initialiser le subject attendre le prochain flux de données , obliger de next\n  userSubject = new BehaviorSubject({})\n\n  // initialiser, aura deja une données , une données par defaut\n  // userSub = new BehaviorSubject([{}])\n\n\n  // on initialise l'api\n  // urlPost = 'https://reqres.in/api/posts'\n\n  // on recupere l'adresse de l'api\n  // private _apiUrl = `${environment.API_URL}api/users`\n\n   private _apiUrl = `${environment.API_URL}api/users`\n  // urlDB = 'http://localhost:3000/api/users'\n\n\n  /***\n   *  envoie donnees register à la base de donnee\n  //  * */\n  // postUser(form: User): Observable {\n  //   return this._http.post(this.urlDB,  form )\n  // }\n\n  // recuperer le token , pour pouvoir se loguer\n  getToken() {\n    // return this._http.get(this.urlDB, Headers: token)\n    //* getItem affiche le contenue de la cle token\n    const newToken = localStorage.getItem('token')\n    //  const myHeaders = new HttpHeaders({'myheader': newToken})\n\n    if (newToken) {\n\n      // on transforme en objet car localstorage veut du json\n      const userObj = JSON.parse(newToken)\n      const newObject = {\n        email: userObj.email,\n        pass: userObj.pass,\n      }\n      // on next\n      this.userSubject.next(newObject)\n      //  ça devient comme un observable on envoie un observable\n      return this.userSubject.asObservable()\n    }\n    else {\n      // on retourne un observable vide\n      return of();\n    }\n  }\n\n\n\n  // * on affiche la liste des utilisateurs\n  // getUsers(): Observable {\n  //   return this._http.get(this._apiUrl).pipe\n  //     (map((response: ResponseApiUser) => {\n\n  //       console.log('user : ' + response.data)\n  //     //   return response.data\n  //     // }))\n  // };\n\n  // ********** BACKEND *****************************************************************************************\n// ***************************************************************************************************************\n  // * vers le backend liste users\n\n\n  register(registerValues:User):Observable{\n    return this._http.post(`${this._apiUrl}/register`, registerValues, {observe: 'response'});\n  }\n\n  login(loginValues:any):Observable{\n    return this._http.post(`${this._apiUrl}/login`, loginValues, {observe: 'response'});\n  }\n\n  getProfile():Observable{\n    return this._http.get(`${this._apiUrl}/profile`,{observe: 'response'})\n  }\n\n  getUsersList():Observable{\n    return this._http.get(`${this._apiUrl}/list`, {observe: 'response'})\n  }\n  // *************************************************************************************************************\n\n  // // postData(ce qu'on veut envoyer)\n  // postData(formUser: any): Observable {\n  //   // urlApi,objet qui envoi un objet, j'envoi au backend\n  //   return this._http.post(this._apiUrl, { data: formUser })\n  //   //\n  // }\n\n  // // * en parametre l'utilisateur choisi\n   setUserCurrent(user: User) {\n  //   // envoyer ces informations à travers l'observable à tous l\n    this.currentUser.next(user)\n   }\n\n   getUserCurrent(): Observable {\n     return this.currentUser.asObservable()\n  //   // return this._http.get(this.url + '/' + this.idCurrent)\n  }\n\n\n  // //!version sans le backend\n  // getProfile(): Observable {\n\n  //   // on recupere l'objet qu'on a convertit en chaine de caractere\n  //   // const newData = localStorage.getItem('user')?.toString()\n  //   const newData = localStorage.getItem('user')\n\n  //   console.log(\"stor\" + newData)\n\n  //   if (newData) {\n\n  //     // on transforme en objet\n  //     const userObj = JSON.parse(newData)\n\n  //     // on split\n  //     const nom = userObj.email.split(/[.@]/)[0]\n  //     const prenom = userObj.email.split(/[.@]/)[1]\n\n  //     const myObject = {\n  //       nom: nom,\n  //       prenom: prenom,\n  //       avatar: userObj.avatar,\n  //       email: userObj.email\n  //     }\n\n  //     // on next\n  //     this.userSubject.next(myObject)\n  //     //  ça devient comme un observable on envoie un observable\n  //     return this.userSubject.asObservable()\n  //   }\n  //   else {\n  //     return of();\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather/weather.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                meteo\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_weatherService: WeatherService, _http: HttpClient, _matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather/weather.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _weatherService\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        meteo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    rue: '11 rue Paul Bert',\n    cp: 74100,\n    ville: 'Annemasse',\n    temperature: 0\n\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/weather/weather.component.ts:35\n                        \n                    \n\n            \n                \n                    on cree un objet\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://api-adresse.data.gouv.fr/search/?q=\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/weather/weather.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\nimport { WeatherModalComponent } from 'src/app/modals/weather-modal/weather-modal.component';\nimport { WeatherService } from './../../services/weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  // valeur par defaut\n\n\n  // url de base\n  url = \"https://api-adresse.data.gouv.fr/search/?q=\"\n\n\n  constructor(private _weatherService: WeatherService, private _http: HttpClient, private _matDialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n\n  }\n\n\n\n  /**\n   * on cree un objet\n   */\n  meteo = {\n    rue: '11 rue Paul Bert',\n    cp: 74100,\n    ville: 'Annemasse',\n    temperature: 0\n\n  }\n\n  openDialog(): void {\n\n    // j'initialise une constante pour faire appel a la methode afterclose\n    // je pour ouvrir matdialog et afterClosed\n    const dialogRef = this._matDialog.open(WeatherModalComponent, { data: this.meteo })\n    // je recois ma reponse, apres la fermeture tu reagis\n    dialogRef.afterClosed().subscribe((resultFromWeatherModal: any) => {\n      console.log(resultFromWeatherModal)\n       this.meteo.temperature=resultFromWeatherModal.temperature\n       this.meteo.rue=resultFromWeatherModal.formulaire.rue,\n       this.meteo.cp=resultFromWeatherModal.formulaire.cp,\n       this.meteo.ville=resultFromWeatherModal.formulaire.ville\n\n    })\n\n\n  }\n\n\n\n\n\n\n  // apres que la modale soit  la fermeture je recupere les resultat, on anticipe la fermeture\n  // dialogRef.afterClosed().subscribe((responseFromModal: any) => {\n  //   console.log(responseFromModal)\n  //   let data = responseFromModal.data\n  //   this.directories.push(new Directory(data.nom, data.path, data.description))\n  //   console.log(data)\n\n  // })\n}\n\n\n  // const dialogRef = this._matDialog.open(WeatherComponent, {\n  //   enterAnimationDuration: '1000ms',\n  //   exitAnimationDuration: '1000ms'\n  // })\n\n\n  // getLatLong(ville = 'annecy') {\n  //   console.log(this._http.get(this.url + '' + ville))\n  //   return this._http.get(this.url + '' + ville)\n  // }\n\n\n    \n\n    \n        \n\n  \n    \n      \n        \n  Méteo\n  {{meteo.rue}}\n  {{meteo.cp}}\n  {{meteo.ville}}\n  \n    \n    {{meteo.temperature}}\n  \n\n  \n    room\n     Choisir une ville\n\n\n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n}\n\nimg {\n  width: 30px\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Méteo  {{meteo.rue}}  {{meteo.cp}}  {{meteo.ville}}          {{meteo.temperature}}        room     Choisir une ville  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherModalComponent.html":{"url":"components/WeatherModalComponent.html","title":"component - WeatherModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WeatherModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modals/weather-modal/weather-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-modal\n            \n\n            \n                styleUrls\n                ./weather-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataGps\n                            \n                            \n                                    Public\n                                infos\n                            \n                            \n                                isWait\n                            \n                            \n                                url\n                            \n                            \n                                weatherForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fb: FormBuilder, infos: any, _http: HttpClient, _matDialogRef: MatDialogRef, _weatherService: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:24\n                            \n                        \n\n                \n                    \n                            inject permet de recuperer info, du \"parent\"\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infos\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _weatherService\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/weather-modal/weather-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modals/weather-modal/weather-modal.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataGps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    longitude: Number,\n    latitude: Number\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWait\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://api-adresse.data.gouv.fr/search/?q=\"\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weatherForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modals/weather-modal/weather-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { WeatherService } from './../../services/weather.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map, switchMap, take, delay } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-weather-modal',\n  templateUrl: './weather-modal.component.html',\n  styleUrls: ['./weather-modal.component.scss']\n})\nexport class WeatherModalComponent implements OnInit {\n\n  isWait = false;\n\n  url = \"https://api-adresse.data.gouv.fr/search/?q=\"\n\n  weatherForm!: FormGroup\n\n  dataGps = {\n    longitude: Number,\n    latitude: Number\n  }\n  /***\n   * inject permet de recuperer info, du \"parent\"\n   */\n  constructor(private _fb: FormBuilder, @Inject(MAT_DIALOG_DATA) public infos: any, private _http: HttpClient, private _matDialogRef: MatDialogRef, private _weatherService: WeatherService) { }\n\n\n  ngOnInit(): void {\n\n    console.log(this.infos)\n    /**\n     * Affecter le formulaire\n     */\n    this.weatherForm = this._fb.group({\n      // id:[this.getRandomInit()],\n      rue: [this.infos.rue, Validators.required],\n      cp: [this.infos.cp, Validators.required],\n      // path: ['', Validators.required],\n      ville: [this.infos.ville, Validators.required]\n    })\n\n  }\n\n  onSubmit() {\n\n    // on recupere les valeurs du formulaires\n    const form = this.weatherForm.value\n    // on recuper l'heure\n    let now = new Date()\n    let heure = now.getHours()\n    this.isWait = true;\n    // je transfere les donnees au service on recupere les coordonnées, ma methode dans mon service me retourne un observable\n    this._weatherService.getCoordinates(form.rue, form.cp, form.ville)\n      .pipe(take(1), delay(2500), switchMap((responseFromServerGps: any) => {\n        // ! return obligatoire  dans le switchmap, la methode retourne elle meme une observable\n        console.log(responseFromServerGps);\n\n        const gps = {\n          latitude: responseFromServerGps.features[0].geometry.coordinates[0],\n          longitude: responseFromServerGps.features[0].geometry.coordinates[1]\n        }\n        return this._weatherService.getMeteo(gps.latitude, gps.longitude)\n      }))\n      // **on souscrit à la reponse du serveur Weather\n      // ! transfert possible de data de données de la modal au component parent grace au dilogRef et la methode close()\n      .subscribe(responseFromServerWeather => {\n\n        // on close avec la deuxieme souscription\n        this._matDialogRef.close({ temperature: responseFromServerWeather.hourly.temperature_2m[heure], formulaire: { rue: form.rue, cp: form.cp, ville: form.ville } })\n\n      })\n    // transfere possible de data , de la modale au component parent\n    // qd on a recu la souscription de la 2eme observable\n\n  }\n  // On subscribe\n}\n\n\n\n\n    \n\n    \n        Choisir la localité\n\n\n  \n\n    \n      Rue\n      \n    \n\n    \n      CP\n      \n    \n\n    \n      Ville\n       -->\n      \n    \n    \n      \n        Valider\n      \n      \n      \n\n      Annuler -->\n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather-modal.component.scss\n                \n                .form {\n\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n\n\n  .full-width {\n    width: 100%;\n  }\n\n  .button {\n    margin-right: 20px;\n    display: flex;\n\n    span {\n      margin-right: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Choisir la localité            Rue                    CP                    Ville       -->                            Valider                        Annuler -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatTopBarComponent', 'selector': 'app-chat-top-bar'},{'name': 'ChatUserListComponent', 'selector': 'app-chat-user-list'},{'name': 'ChatUserModalComponent', 'selector': 'app-chat-user-modal'},{'name': 'DirectoryComponent', 'selector': 'app-directory'},{'name': 'DirectoryModalComponent', 'selector': 'app-directory-modal'},{'name': 'FinderComponent', 'selector': 'app-finder'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SideBarLeftComponent', 'selector': 'app-side-bar-left'},{'name': 'SideBarRightComponent', 'selector': 'app-side-bar-right'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UserModalComponent', 'selector': 'app-user-modal'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherModalComponent', 'selector': 'app-weather-modal'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localisation\n                            \n                            \n                                urlGps\n                            \n                            \n                                urlMeteo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCoordinates\n                            \n                            \n                                getMeteo\n                            \n                            \n                                getProfileList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCoordinates\n                        \n                    \n                \n            \n            \n                \ngetCoordinates(rue: string, cp: number, ville: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather.service.ts:33\n                \n            \n\n\n            \n                \n                    il nous impose une methode get\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ville\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeteo\n                        \n                    \n                \n            \n            \n                \ngetMeteo(longitude: Number, latitude: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    longitude\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    latitude\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfileList\n                        \n                    \n                \n            \n            \n                \ngetProfileList()\n                \n            \n\n\n            \n                \n                    Inherited from         GlobalHttpService\n\n                \n            \n            \n                \n                        Defined in         GlobalHttpService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/weather.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlGps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://api-adresse.data.gouv.fr/search/\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/weather.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlMeteo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://api.open-meteo.com/v1/forecast/\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/weather.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\nimport { GlobalHttpService } from './global-http.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService extends GlobalHttpService{\n\n  localisation: any[] = []\n\n\n  urlGps = \"https://api-adresse.data.gouv.fr/search/\"\n  urlMeteo = \"https://api.open-meteo.com/v1/forecast/\"\n\n\n\n  // BaseUrl = \"https://geocoding-api.open-meteo.com/v1/search?name=\"\n\n  // on injecte httpclient\n  // constructor(private _http: HttpClient) { }\n\n  /**\n   *il nous impose une methode get\n   * @param rue\n   * @param cp\n   * @param ville\n   * @returns\n   */\n\n  getCoordinates(rue: string, cp: number, ville: string): Observable {\n\n    let paramsData = new HttpParams().append(\"q\", `${rue},${cp},${ville}`)\n\n    return this._http.get(this.urlGps, { params: paramsData })\n\n  }\n\n\n  getMeteo(longitude: Number, latitude: Number): Observable {\n\n    let paramsWeather = new HttpParams()\n      .append('hourly', 'temperature_2m')\n      .append('latitude', `${latitude}`)\n      .append('longitude', `${longitude}`)\n      .append('timezone', 'Europe/Berlin')\n    return this._http.get(this.urlMeteo, { params: paramsWeather })\n\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/chat.guard.ts\n            \n            guard\n            ChatGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/chat-room/chat-room.component.ts\n            \n            component\n            ChatRoomComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/chat-top-bar/chat-top-bar.component.ts\n            \n            component\n            ChatTopBarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/chat-user-list/chat-user-list.component.ts\n            \n            component\n            ChatUserListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/directory/directory.component.ts\n            \n            component\n            DirectoryComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/finder/finder.component.ts\n            \n            component\n            FinderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/profil/profil.component.ts\n            \n            component\n            ProfilComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/side-bar-left/side-bar-left.component.ts\n            \n            component\n            SideBarLeftComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/side-bar-right/side-bar-right.component.ts\n            \n            component\n            SideBarRightComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/helpers/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/token.interceptor.ts\n            \n            variable\n            TokenInterceptorProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modals/chat-user-modal/chat-user-modal.component.ts\n            \n            component\n            ChatUserModalComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modals/directory-modal/directory-modal.component.ts\n            \n            component\n            DirectoryModalComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modals/user-modal/user-modal.component.ts\n            \n            component\n            UserModalComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modals/weather-modal/weather-modal.component.ts\n            \n            component\n            WeatherModalComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/models/directory-model.ts\n            \n            class\n            Directory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/response-api-user.ts\n            \n            class\n            ResponseApiUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/room.ts\n            \n            class\n            Room\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pipes/age.pipe.ts\n            \n            pipe\n            AgePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/directory.service.ts\n            \n            injectable\n            DirectoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/global-http.service.ts\n            \n            injectable\n            GlobalHttpService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/job.ts\n            \n            variable\n            job\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/cdk : ^14.2.4\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/localize : ^14.2.0\n        \n            @angular/material : ^14.2.4\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^13.0.0\n        \n            @popperjs/core : ^2.10.2\n        \n            bootstrap : ^5.2.0\n        \n            ngx-socket-io : ^4.3.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDigilab\nThis project was generated with Angular CLI version 14.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAgePipe\n\nAgePipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAgePipe->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatTopBarComponent\n\nChatTopBarComponent\n\nAppModule -->\n\nChatTopBarComponent->AppModule\n\n\n\n\n\nChatUserListComponent\n\nChatUserListComponent\n\nAppModule -->\n\nChatUserListComponent->AppModule\n\n\n\n\n\nChatUserModalComponent\n\nChatUserModalComponent\n\nAppModule -->\n\nChatUserModalComponent->AppModule\n\n\n\n\n\nDirectoryComponent\n\nDirectoryComponent\n\nAppModule -->\n\nDirectoryComponent->AppModule\n\n\n\n\n\nDirectoryModalComponent\n\nDirectoryModalComponent\n\nAppModule -->\n\nDirectoryModalComponent->AppModule\n\n\n\n\n\nFinderComponent\n\nFinderComponent\n\nAppModule -->\n\nFinderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nProfilComponent\n\nProfilComponent\n\nAppModule -->\n\nProfilComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSideBarLeftComponent\n\nSideBarLeftComponent\n\nAppModule -->\n\nSideBarLeftComponent->AppModule\n\n\n\n\n\nSideBarRightComponent\n\nSideBarRightComponent\n\nAppModule -->\n\nSideBarRightComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nUserModalComponent\n\nUserModalComponent\n\nAppModule -->\n\nUserModalComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nWeatherModalComponent\n\nWeatherModalComponent\n\nAppModule -->\n\nWeatherModalComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            job   (src/.../job.ts)\n                        \n                        \n                            TokenInterceptorProvider   (src/.../token.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  API_URL:'https://digifab-chat.herokuapp.com/'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  API_URL:'https://digifab-chat.herokuapp.com/',\n}\n                    \n                \n\n\n        \n    \n\n    src/helpers/job.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"Accompagnateur de groupes\",\n  \"Accompagnateur en moyenne montagne\",\n  \"Accompagnement des enfants dans leurs déplacements, des personnes âgées ou handicapées en dehors de leur domicile\",\n  \"Activités photographiques (sauf photojournalisme ou photos d'art)\",\n  \"Administrateur Bases de Données\",\n  \"Administrateur Systèmes et Réseaux\",\n  \"Administrateur\",\n  \"Agent privé de recherche\",\n  \"Agents commerciaux\",\n  \"Aide relationnelle\",\n  \"Analyste\",\n  \"Animateur d'art\",\n  \"Animateur, speaker\",\n  \"Animateur-speaker\",\n  \"Architecte d'intérieur\",\n  \"Architecte naval\",\n  \"Architecte\",\n  \"Architecte\",\n  \"Assistance informatique et Internet à domicile\",\n  \"Assistant Chef de Projet\",\n  \"Assistant aéroportuaire (agent de sécurité, vigile)\",\n  \"Assistant social\",\n  \"Attaché de presse\",\n  \"Auteur de mots croisés\",\n  \"Autre\",\n  \"Bois et ameublement\",\n  \"Bouchers\",\n  \"Boulangers\",\n  \"Business Analyste\",\n  \"Capitaine expert\",\n  \"Caricaturiste\",\n  \"Cartographe\",\n  \"Charcutiers-traiteurs\",\n  \"Chargé d'enquête\",\n  \"Charpentier\",\n  \"Chauffeurs propriétaires de leur véhicule\",\n  \"Chef de Projet\",\n  \"Chefs d’établissements d’enseignement privé\",\n  \"Chocolatiers confiseurs\",\n  \"Ciseleur\",\n  \"Coach sportif\",\n  \"Coach\",\n  \"Coiffeurs et coiffeurs à domicile\",\n  \"Coloriste\",\n  \"Concepteur\",\n  \"Concessionnaires ou exploitants de toilettes ou vestiaires\",\n  \"Conférencier\",\n  \"Conseil artistique\",\n  \"Conseil commercial\",\n  \"Conseil d'entreprise\",\n  \"Conseil de gestion\",\n  \"Conseil de sociétés\",\n  \"Conseil en brevet d'invention\",\n  \"Conseil en communication\",\n  \"Conseil en formation\",\n  \"Conseil en management\",\n  \"Conseil en marketing\",\n  \"Conseil en organisation\",\n  \"Conseil en publicité\",\n  \"Conseil en relations publiques\",\n  \"Conseil ergonome\",\n  \"Conseil financier\",\n  \"Conseil littéraire\",\n  \"Conseil logistique\",\n  \"Conseil médical\",\n  \"Conseil qualité comptable\",\n  \"Conseil scientifique\",\n  \"Conseil scientifique\",\n  \"Conseil social\",\n  \"Conseil technique\",\n  \"Consultant MOA\",\n  \"Consultant\",\n  \"Coordinateur de travaux\",\n  \"Coordinateur\",\n  \"Correspondants de presse\",\n  \"Courtiers d’assurance maritime\",\n  \"Courtiers en billets de loterie nationale et en bulletins de loto non titulaires d’un contrat de travail,\",\n  \"Couvreur\",\n  \"Créateur d'art\",\n  \"Céramiste\",\n  \"Designer Web\",\n  \"Designer\",\n  \"Dessin chirurgical\",\n  \"Dessin de bijoux\",\n  \"Dessin de publicité\",\n  \"Dessinateur Industriel\",\n  \"Dessinateur industriel\",\n  \"Dessinateur projeteur\",\n  \"Dessinateur technique\",\n  \"Dessinateur\",\n  \"Directeur Projet\",\n  \"Directeur des Systèmes d’Information\",\n  \"Documentaliste\",\n  \"Décorateur conseil\",\n  \"Décorateur ensemblier\",\n  \"Décorateur floraux\",\n  \"Décorateur\",\n  \"Désinfection, désinsectisation, dératisation\",\n  \"Développeur\",\n  \"Ebéniste\",\n  \"Economiste conseil\",\n  \"Economiste de la construction\",\n  \"Ecrivain public\",\n  \"Educateur\",\n  \"Electricien\",\n  \"Emailleur\",\n  \"Enquêteur social\",\n  \"Entraineur d'échecs\",\n  \"Entraineur sportif\",\n  \"Entretien de la maison et travaux ménagers\",\n  \"Entretien et réparation de motocycles\",\n  \"Entretien et réparation de véhicules automobiles\",\n  \"Ergotherapeute\",\n  \"Esthéticienne\",\n  \"Esthétique industrielle\",\n  \"Etalagiste\",\n  \"Etudes de marché\",\n  \"Expert agrigole\",\n  \"Expert automobiles\",\n  \"Expert en cuir\",\n  \"Expert en objets d'art\",\n  \"Expert en écritures\",\n  \"Expert forestier\",\n  \"Expert judiciaire\",\n  \"Expert maritime\",\n  \"Expert pres les tribunaux\",\n  \"Expert textiles\",\n  \"Expert\",\n  \"Exploitants de laveries automatiques,\",\n  \"Exploitants d’auto-école\",\n  \"Exploitants forestiers-négociants en bois,\",\n  \"Fabrication d'autres produits alimentaires\",\n  \"Fabrication de plats prêts à consommer, à emporter\",\n  \"Feronnier d'art\",\n  \"Formateur\",\n  \"Formateur\",\n  \"Garde d’enfant à domicile\",\n  \"Graphiste\",\n  \"Graphologue\",\n  \"Guide de montagne\",\n  \"Guide touristique\",\n  \"Géobiologiste\",\n  \"Géologue\",\n  \"Géomètre\",\n  \"Gérant de holding\",\n  \"Gérant de tutelle\",\n  \"Habillement\",\n  \"Historien\",\n  \"Hotesse d'exposition\",\n  \"Huissieur de justice\",\n  \"Infographiste\",\n  \"Ingénieur Aéronautique\",\n  \"Ingénieur Calcul\",\n  \"Ingénieur Systèmes Réseaux\",\n  \"Ingénieur Télécommunications\",\n  \"Ingénieur commercial\",\n  \"Ingénieur du son\",\n  \"Ingénieur expert\",\n  \"Ingénieur thermicien\",\n  \"Ingénieur\",\n  \"Installation de systèmes d'alarme et activités associées de surveillance\",\n  \"Intermédiaires et auxiliaires du commerce assujettis à l’impôt sur le revenu dans la catégorie des BIC ou des BNC,\",\n  \"Interprète\",\n  \"Inventeur\",\n  \"Inventoriste (pharmacie)\",\n  \"Investigateur\",\n  \"Joueur professionnel\",\n  \"Journaliste Indépendant\",\n  \"Journaliste d'entreprise\",\n  \"Lecteur\",\n  \"Licier\",\n  \"Livraison de courses à domicile\",\n  \"Maintenance, entretien et vigilance temporaires, à domicile, de la résidence principale et secondaire\",\n  \"Maitre d'oeuvre\",\n  \"Maitre-nageur\",\n  \"Mandataires libres, non assimilés aux salariés et qui n’exercent pas leur activité pour le compte d’un membre d’une profession libérale\",\n  \"Manipulateur d'électrocardiologie\",\n  \"Mannequin\",\n  \"Maquettiste\",\n  \"Marchands de journaux en kiosques, terrasses et postes fixes,\",\n  \"Maçon\",\n  \"Menuisier\",\n  \"Modèle\",\n  \"Modéliste\",\n  \"Moniteur de ski\",\n  \"Moniteur de voile\",\n  \"Moniteur\",\n  \"Mosaiste\",\n  \"Musicothérapeute\",\n  \"Médecin conseil\",\n  \"Médiateur pénal\",\n  \"Métreur\",\n  \"Naturaliste\",\n  \"Naturopathe\",\n  \"Nettoyage industriel et autres activités de nettoyage des bâtiments dont ramonage\",\n  \"Noteur copiste\",\n  \"Nutritionniste\",\n  \"Ostéopathe\",\n  \"Paysagiste\",\n  \"Peintre sur soie\",\n  \"Peintre\",\n  \"Personnes qui exercent une profession mettant en pratique les sciences occultes ou parapsychologiques assujetties à la taxe professionnelle\",\n  \"Petits travaux de jardinage, y compris les travaux de débroussaillage\",\n  \"Photographe d'art\",\n  \"Pigiste\",\n  \"Pilote\",\n  \"Placiers sur les marchés,\",\n  \"Plombier\",\n  \"Poissonnier\",\n  \"Porteurs manutentionnaires non salariés,\",\n  \"Potier\",\n  \"Prestations de petit bricolage dites «hommes toutes mains »\",\n  \"Professeur de danse\",\n  \"Professeur de dessin\",\n  \"Professeur de langues\",\n  \"Professeur de musique\",\n  \"Professeur de sport\",\n  \"Professeur de tennis\",\n  \"Professeur de yoga\",\n  \"Professeur\",\n  \"Prédicateur\",\n  \"Préparation des repas à domicile, et commissions\",\n  \"Psychanalyste\",\n  \"Psychologue conseil\",\n  \"Psychomotricien\",\n  \"Psychosociologue\",\n  \"Psychothérapeute\",\n  \"Pâtissiers\",\n  \"QA Manager\",\n  \"Rafting\",\n  \"Relieur d'art\",\n  \"Responsable Systemes et Reseaux\",\n  \"Restaurateur d'art\",\n  \"Réalisateur audiovisuel\",\n  \"Récupération de déchets triés\",\n  \"Rédacteur technique\",\n  \"Rédacteur\",\n  \"Réparation d'ordinateurs et d'équipements de communication\",\n  \"Répétiteur\",\n  \"Scrum Master\",\n  \"Scénographe\",\n  \"Secrétaire à domicile\",\n  \"Services administratifs divers\",\n  \"Services de déménagement\",\n  \"Skipper\",\n  \"Software packager\",\n  \"Soins de beauté dont le modelage esthétique de bien-être et de confort\",\n  \"Soins d’esthétique à domicile pour les personnes dépendantes\",\n  \"Soins et promenade d’animaux de compagnie pour les personnes dépendantes\",\n  \"Soutien scolaire ou cours à domicile\",\n  \"Sportif\",\n  \"Styliste\",\n  \"Sténotypiste de conférence\",\n  \"Team Leader\",\n  \"Testeur\",\n  \"Thanatopracteurs\",\n  \"Toilettage d'animaux de compagnie\",\n  \"Topographe\",\n  \"Traducteur technique\",\n  \"Transcripteur\",\n  \"Travaux acrobatiques\",\n  \"Urbaniste\",\n  \"Vendeurs de pizza\",\n  \"Vigile\",\n  \"Vérificateur\",\n  \"Webmaster\"\n]\n                    \n                \n\n\n        \n    \n\n    src/app/helpers/token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TokenInterceptorProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    // il se met au bon endroit\n    provide: HTTP_INTERCEPTORS,\n    // on utilise la class tokenInterceptor qui a ete genere toute seule ici\n    useClass: TokenInterceptor,\n    // on met a disposition partout\n    multi: true\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
